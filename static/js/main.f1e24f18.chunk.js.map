{"version":3,"sources":["assets/fonts/GT-America-Extended-Medium.otf","assets/fonts/GT-America-Extended-Bold.otf","components/NoMatch/img/404.png","components/ColorPicker/paint.svg","constants/theme.js","assets/styles/ThemeProvider.js","assets/fonts/index.js","services/api/constants.js","constants/developers.js","utils/developersUtils.js","services/api/AuthService.js","services/api/UserService.js","store/AuthStore.js","services/api/LogService.js","services/api/ProjectService.js","constants/pagination.js","services/api/ActivityService.js","store/ActivityStore.js","store/LogStore.js","store/LoadersStore.js","store/ProjectStore.js","store/UserStore.js","store/NotificationStore.js","services/api/ExportService.js","constants/export.js","store/ExportStore.js","store/PaginationStore.js","store/index.js","components/Notification/index.js","components/NoMatch/styles.js","components/NoMatch/index.js","components/UserAvatar/style.js","components/UserAvatar/index.js","components/PhotoUploader/styles.js","components/PhotoUploader/index.js","components/ProfileMenu/styles.js","components/ProfileMenu/index.js","components/Link/index.js","components/NavigationPanel/NavigationMenu/styles.js","components/NavigationPanel/NavigationMenu/index.js","components/Logo/styles.js","components/Logo/index.js","utils/routerUtils.js","components/NavigationPanel/index.js","components/TableRow/styles.js","components/TableRow/index.js","components/TableCell/styles.js","components/TableCell/index.js","components/ColoredName/styles.js","components/ColoredName/index.js","Pages/developers/DevelopersTable/styles.js","Pages/developers/DevelopersTable/index.js","components/FormDialog/styles.js","components/FormDialog/index.js","components/DialogActionButton/styles.js","components/DialogActionButton/index.js","Pages/developers/CreateUserForm/styles.js","Pages/developers/RoleSelector/index.js","Pages/developers/ProjectMultiselect/index.js","Pages/developers/CreateUserForm/index.js","components/AddButton/styles.js","components/AddButton/index.js","components/ReportPagination/index.js","components/StyledPaper/index.js","Pages/developers/styles.js","constants/reportHistory.js","Pages/manager-reports/ReportsHistory/ReportHistoryTable/style.js","Pages/manager-reports/ReportsHistory/ReportHistoryTable/index.js","Pages/manager-reports/Reports/DateRangePicker/index.js","constants/dateFormats.js","Pages/manager-reports/Reports/ProjectSelector/style.js","Pages/manager-reports/Reports/ProjectSelector/index.js","Pages/manager-reports/Reports/UserSelector/style.js","Pages/manager-reports/Reports/UserSelector/index.js","utils/managerReportsUtils.js","Pages/manager-reports/Reports/WeekSelector/index.js","Pages/manager-reports/Reports/StatusSelector/index.js","Pages/manager-reports/Reports/FilterSelectorPanel/index.js","components/Chip/style.js","components/Chip/index.js","constants/managerReports.js","Pages/manager-reports/Reports/LogReportTable/index.js","components/DownloadButton/styles.js","components/DownloadButton/index.js","Pages/manager-reports/Reports/style.js","components/TimePicker/index.js","components/Selector/styles.js","components/Selector/index.js","components/LogInfoHeader/index.js","components/WorkItemAddEditForm/styles.js","utils/developerReportUtils.js","constants/developerReport.js","components/WorkItemAddEditForm/index.js","Pages/manager-reports/Reports/index.js","Pages/manager-reports/index.js","Pages/manager-reports/ReportsHistory/index.js","constants/projects.js","utils/projectUtils.js","Pages/projects/ProjectsTable/style.js","Pages/projects/ProjectsTable/index.js","Pages/projects/UserMultiSelect/index.js","Pages/projects/TypeSelector/index.js","components/ColorPicker/styles.js","components/ColorPicker/index.js","Pages/projects/CreateProjectForm/styles.js","Pages/projects/CreateProjectForm/index.js","Pages/projects/styles.js","components/WeekSelector/index.js","components/WeekDates/styles.js","components/WeekDates/index.js","Pages/developer-reports/ReportTable/style.js","Pages/developer-reports/ReportTable/index.js","Pages/developer-reports/TotalTimeInfo/index.js","Pages/signin/styles.js","Pages/ForgotPassword/style.js","Pages/ResetPassword/style.js","Pages/Activity/ProjectCard/styles.js","Pages/Activity/ProjectCard/index.js","Pages/Activity/LogCard/index.js","Pages/Activity/LogTypeCard/index.js","Pages/Activity/UserCard/index.js","Pages/Activity/ExportHistoryCard/index.js","Pages/Activity/ActivityBlock/index.js","Pages/Activity/ActivitiesList/index.js","Pages/LogItems/LogStatusHandler/style.js","Pages/LogItems/LogStatusHandler/index.js","Pages/LogItems/InReviewItem/style.js","Pages/LogItems/InReviewItem/index.js","Pages/LogItems/Settings/LogSettingsForm/style.js","Pages/LogItems/Settings/LogSettingsForm/index.js","Pages/LogItems/Settings/styles.js","Pages/LogItems/Settings/index.js","Pages/LogItems/HistoryByLogModal/styles.js","Pages/LogItems/HistoryByLogModal/index.js","Pages/LogItems/styles.js","Pages/LogItems/index.js","navigation/rules.js","navigation/routes.js","Pages/home/index.js","Pages/signin/index.js","Pages/ForgotPassword/index.js","Pages/ResetPassword/index.js","Pages/developer-reports/index.js","Pages/projects/index.js","Pages/developers/index.js","Pages/Activity/index.js","navigation/index.js","components/PageLoader/styles.js","components/PageLoader/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","logo","success","green","error","red","info","blue","default","grey","children","StylesProvider","injectFirst","createGlobalStyle","AmericaMedium","AmericaBold","API_URL","window","IMAGES_URL","TABLE_HEADERS","DEFAULT_FORM_VALUES","firstname","lastname","skills","email","role","rate","country","projects","getInitialFormValues","initialData","Object","keys","reduce","acc","key","formatFromSeconds","durationInSeconds","duration","Number","lastSeconds","toFixed","getUserAvatar","avatar","authService","login","data","a","axios","post","logout","forgotPassword","body","resetPassword","getMe","get","addAuthHeaderInterceptor","token","onError","interceptors","request","use","config","headers","response","status","Promise","reject","clearInterceptor","interceptor","eject","userService","getUserList","params","getUser","id","createUser","updateUser","pathId","put","deleteUser","delete","uploadAvatar","resendInvitationUser","AuthStore","rootStore","showError","message","notificationStore","showNotification","type","setInitialState","undefined","me","authInterceptor","onLogin","showLoader","access_token","localStorage","setItem","setUserToken","console","onLogout","removeItem","onGetMe","dispatchLoginFulfilled","onForgotPassword","onResetPassword","getItem","onUploadAvatar","isUpdatingAvatar","formData","FormData","append","this","value","loadersStore","setLoadingPage","decorate","observable","ref","action","logService","getLogs","addLog","updateLog","deleteLog","setLogStatus","getLogTypes","updateLogType","typeId","addLogType","deleteLogType","getLogHistory","projectService","getProjectList","getProjectTypes","getProjectUserList","createProject","updateProject","deleteProject","addUsersToProject","deleteUsersFromProject","log","ROWS_PER_PAGE","activityService","getActivities","distributeBy","array","object","item","push","entries","map","title","ActivityStore","activities","nextDate","handleResponseActivities","next_date","current_date","runInAction","date","onGetActivities","length","updateLogListStrategy","dataArray","newItem","filter","userList","LogStore","logs","logTypes","projectList","setPaginationMeta","paginationStore","setMeta","setEmptyLogs","getHistoryByLog","isLoadingHistoryByLog","historyByLog","concat","historyNextDate","clearHistoryByLog","onGetLogs","setLoading","meta","onGetDeclinedLogs","declinedLogs","onAddLog","onUpdateLog","onUpdateLogStatus","onDeleteLog","onGetLogTypes","per_page","sort","b","onCreateLogType","unshift","errors","onUpdateLogType","onDeleteLogType","onGetProjectList","onGetUserList","updateLogInList","setLogTypes","LoadersStore","isLoadingPage","mapperSortFields","Updated","Created","Type","fetchStrategy","update","create","ProjectStore","projectTypes","fetch","apiCall","args","enhancedParams","field","handleFetchProjectData","actionType","onCreateProject","onUpdateProject","onDeleteProject","onGetProjectTypes","onGetProjectUserList","onAddUsersToProject","onDeleteUsersFromProject","setEditingProjectData","project","editingProjectData","users","projectUserList","onAddProjectUserList","UserStore","projectStore","setIsLoading","handleFetchUserData","onCreateUser","all","projectId","updateUsersForProject","intersectedArray","intersection","editingUserData","deleted","includes","added","onUpdateUser","onDeleteUser","setEditingUserData","user","onResendInvitationUser","isResendingInvitation","NotificationStore","notificationQueue","hideNotification","exportService","download","responseType","getHistoryItems","EXCEL_TYPE","ExportStore","showErrorMessage","onDownload","downloadFile","onGetHistoryItems","page","perPage","historyItems","week","from_date","to_date","blob","Blob","document","createElement","href","URL","createObjectURL","click","PaginationStore","setInitialValues","initialValues","setPage","number","setPerPage","useStores","React","useContext","MobXProviderContext","RootStore","authStore","logStore","userStore","exportStore","activityStore","SlideTransition","props","Slide","direction","Notification","store","useObserver","useStore","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","onClose","elevation","variant","severity","PageWrapper","styled","div","PageContainer","backgroundImg","Content","MainText","p","SecondaryText","NoMatch","history","onClick","StyledAvatar","disablePointer","restProps","Avatar","size","UserAvatar","firstName","lastName","src","Component","StyledLabel","label","disabled","PhotoUploader","onUpload","htmlFor","style","display","name","multiple","onChange","e","target","files","Wrapper","StyledProgress","CircularProgress","ProfileMenu","StyledLink","NavLink","dark","useStyles","makeStyles","list","width","fullList","menuButton","color","active","background","pointer","cursor","NavigationMenu","anchor","menuItems","classes","useState","left","state","setState","toggleDrawer","event","IconButton","aria-label","className","Drawer","clsx","onKeyDown","List","path","to","ListItem","button","ListItemText","Divider","divider","secondary","Shape","span","SIZE","ShapeContainer","Text","LogoContainer","Logo","ROUTES","freeze","ROUTES_FOR_DEV","ROUTES_FOR_ADMIN","BY_ROLE","admin","dev","root","flexGrow","marginRight","spacing","NavigationPanel","routes","routesByRole","getRoutesByRole","AppBar","position","Toolbar","Typography","Hidden","smDown","Box","mr","alignItems","route","px","noWrap","Link","orientation","flexItem","mdUp","StyledTableRow","otherProps","TableRow","hover","text","StyledTableCell","minWidth","TableCell","CustomBadge","Title","fontSize","ColoredName","StyledChip","Chip","developerList","parseProjectsByUser","useMemo","forEach","Table","TableHead","TableBody","developer","component","scope","join","alias","Tooltip","placement","arrow","approved_total_time","total_work_time","StyledDialog","Dialog","FormDialog","handleClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","ContainedButton","Button","light","OutlinedButton","DialogActionButton","StyledGridContainer","Grid","WrapResendButton","StyledProgressSpinner","StyledButton","StyledGridContainerBottom","RoleSelector","RadioGroup","FormLabel","container","wrap","FormControlLabel","control","Radio","ProjectMultiSelect","values","Autocomplete","options","getOptionLabel","option","idSet","Set","has","getSelectedOptions","filterSelectedOptions","renderInput","TextField","schema","shape","string","required","CreateUserForm","handleSubmit","handleDeleteUser","onReinviteUser","formik","useFormik","enableReinitialize","validateOnChange","validateOnBlur","validationSchema","onSubmit","resetForm","skillArrayData","then","autoComplete","xs","md","fullWidth","handleChange","defaultValue","setFieldValue","sm","DialogActions","StyledAddIcon","AddIcon","AddButton","handleClick","startIcon","ReportPagination","useEffect","justifyContent","TablePagination","rowsPerPageOptions","count","total","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","Pagination","last_page","current_page","StyledPaper","Paper","StyledGrid","sup","StyledContainer","getDatesLabel","String","concatUserNames","concatProjectNames","DateRangePicker","fromDate","toDate","setFilter","setErrorDates","utils","MomentUtils","locale","maxDate","format","minDate","StyledTextField","ProjectSelector","selectedProjects","onChangeProject","renderTags","listProjects","onDelete","filteredProjects","getOptionSelected","selectedUser","getWeekNumber","moment","isoWeek","formatToString","momentDate","formatTimeDuration","time","durationInMinutes","asMinutes","hours","minutes","getType","ALL_WEEKS","Array","from","endOf","isoWeeks","empty","index","WeekSelector","selectedWeeks","WORK_ITEM_STATUSES","StatusSelector","selectedWorkItemStatus","FilterSelectorPanel","selectedUsers","flexWrap","mt","mx","lg","UserSelector","STATUS_COLORS","approved","declined","LogReportTable","logList","onEdit","project_id","align","user_id","descriptions","last_generated","calendar","StyledIcon","GetAppIcon","DownloadButton","mainSuccess","mainError","Developers","setTouched","ampm","momentTime","helperText","StyledFormControl","FormControl","Selector","labelKey","valueKey","placeholder","opts","createOptions","InputLabel","Boolean","Select","MenuItem","LogInfoHeader","workingDay","selectedWeek","flex","pl","gutterBottom","paragraph","marginBottom","zIndex","from_time","to_time","log_type_id","work_type","getTotalTime","durations","totalDurations","slice","prev","cur","add","Math","floor","clone","asHours","getParametersForLogs","isoWeekday","validationErrorMessages","WORK_TYPES","validate","isBefore","WorkItemAddEditForm","submitForm","selectedDay","handleDeleteLog","onSetTouched","touched","margin","multiline","rows","getSelectedWeeksWithYear","TABS","setInitialPagination","currentWeek","Date","editedWorkItem","setToEditWorkItem","setSelectedWeeks","setFromDate","setToDate","setSelectedProjects","setSelectedUsers","setSelectedWorkItemStatus","errorFromDate","setErrorFromDate","errorToDate","setErrorToDate","weeks","onFilterChange","useCallback","submitUpdatedLog","Container","dateFrom","dateTo","mb","my","ReportHistoryTable","isDisabled","getDate","StyledTableContainer","TableContainer","typography","body1","onSort","TableSortLabel","created_at","updated_at","AvatarGroup","total_log","UserMultiSelect","TypeSelector","ListItems","isActive","CustomPicker","CustomPickerInput","input","defaultColors","ColorPicker","colors","activeColor","onChangeThrottle","throttle","val","onChangeColor","currentTarget","customColors","pop","paint","height","alt","mixed","LogForm","handleDeleteProject","onColorChange","weeksCount","setWeek","_","weeksOptions","closeIcon","hasLogs","isRejected","setDay","weekDates","setWeekDates","weekNumber","isIncludeRejectedDay","weekDay","formattedDate","find","day","isSame","some","checkLogDate","formatDate","ml","set","month","handleEditLog","setTotalWeekTime","setTotalDayTime","filteredLogs","setFilteredLogs","i","validLog","editLog","getLogTypeEnum","getWorkTypeLabel","TotalTimeInfo","totalDayTime","totalWeekTime","startOf","getEndOfWeek","StyledProjectName","messages","created","updated","added_user_to_project","deleted_user_to_project","ProjectCard","CardContent","flexDirection","author","entity","LogCard","logType","LogTypeCard","UserCard","ExportHistoryCard","ActivityBlock","getCard","model","ActivitiesList","Timeline","TimelineItem","TimelineSeparator","TimelineDot","getIcon","TimelineConnector","TimelineContent","tree_id","Popper","LogStatusHandler","getColor","ButtonGroup","disableElevation","Card","StyledTextArea","StyledTypography","colortype","StyledColoredName","InReviewItems","onShowHistory","onUpdateStatus","validateForm","workType","py","borderRadius","overflow","whiteSpace","textOverflow","getLogType","right","top","pt","StyledListItem","LogSettingsForm","editingType","setEditingType","StyledIconButton","Settings","isOpen","submit","scroll","StyledFormDialog","dataLength","next","hasMore","loader","scrollableTarget","StyledToolbar","DISABLED_STATUS_VALUES","authRequired","unauthorizedOnly","prop","roleAdmin","roleDev","exact","rules","redirect","adminRedirect","devRedirect","password","setForm","useAuthData","setSuccess","toLogin","setToLogin","URLSearchParams","useLocation","search","password_confirmation","confirmPassword","isModalVisible","setModalVisibility","editingLog","setEditingLog","showModal","closeModal","handleSubmitForm","m","WeekDates","ReportTable","selectedTab","setValue","CurrentPage","Tabs","indicatorColor","textColor","centered","Tab","setSort","updateProjects","onSubmitProject","pb","ProjectsTable","onSubmitUser","DevelopersTable","currentDate","setLogToEdit","isOpenModal","setModalVisible","historyLogId","setHistoryLogId","updateLogs","addYearToWeek","updateLogStatus","onEditWorkItem","InReviewItem","textAlign","HistoryByLogModal","Navigation","compProps","render","pathname","every","rule","StyledBackdrop","Backdrop","modal","StyledLinearProgress","LinearProgress","PageLoader","useLoadingData","App","myToken","userLoaded","setLoaded","responseMe","getTokenFromLocalStorage","CssBaseline","location","hostname","match","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f1e24f18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Medium.78b3d2f6.otf\";","module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Bold.ebbc4701.otf\";","module.exports = __webpack_public_path__ + \"static/media/404.24525eca.png\";","module.exports = __webpack_public_path__ + \"static/media/paint.29c239dd.svg\";","import { createMuiTheme } from \"@material-ui/core\";\nimport { green, red, blue, grey } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#a8bcd8\",\n        },\n        logo: \"#d1d2d4\",\n        success: {\n            main: green[500],\n        },\n        error: {\n            main: red[200],\n        },\n        info: {\n            main: blue[500],\n        },\n        default: {\n            main: grey[500],\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../../constants/theme\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nexport default function ({ children }) {\n    return (\n        <StylesProvider injectFirst>\n            <MuiThemeProvider theme={theme}>\n                <ThemeProvider theme={theme}>{children}</ThemeProvider>\n            </MuiThemeProvider>\n        </StylesProvider>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nimport AmericaMedium from \"assets/fonts/GT-America-Extended-Medium.otf\";\nimport AmericaBold from \"assets/fonts/GT-America-Extended-Bold.otf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GT-America'),\n        url(${AmericaMedium});\n        font-weight: 300;\n        font-style: normal;\n    };\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GTAmerica'),\n        url(${AmericaBold});\n        font-weight: 600;\n        font-style: normal;\n    }\n`;\n","export const API_URL = window.API_URL;\nexport const IMAGES_URL = window.IMAGES_URL;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Name\",\n    \"Skills\",\n    \"Project name\",\n    \"Approved time\",\n    \"Unapproved time\",\n    \"Status\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    skills: [],\n    email: \"\",\n    role: \"dev\",\n    rate: 0,\n    country: \"\",\n    projects: [],\n};\n","import { IMAGES_URL } from \"services/api/constants\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/developers\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatFromSeconds = durationInSeconds => {\n    const duration = Number(durationInSeconds);\n\n    if (duration === 0) {\n        return durationInSeconds;\n    }\n\n    const lastSeconds = duration % 3600;\n\n    return `${(duration - lastSeconds) / 3600}h${\n        lastSeconds ? ` ${(lastSeconds / 60).toFixed(0)}m` : \"\"\n    }`;\n};\n\nexport const getUserAvatar = avatar => (avatar ? IMAGES_URL + avatar : null);\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass AuthService {\n    login = async data => {\n        return axios.post(`${API_URL}/auth/login`, {\n            ...data,\n        });\n    };\n\n    logout = async () => axios.post(`${API_URL}/auth/logout`);\n\n    forgotPassword = async body =>\n        axios.post(`${API_URL}/auth/forgot-password`, { ...body });\n\n    resetPassword = body =>\n        axios.post(`${API_URL}/auth/reset-password`, { ...body });\n\n    getMe = async () => axios.get(`${API_URL}/me`);\n\n    addAuthHeaderInterceptor = async ({ token, onError }) => {\n        return axios.interceptors.request.use(\n            config => {\n                if (token) {\n                    config.headers[\"Authorization\"] = \"Bearer \" + token;\n                }\n                return config;\n            },\n            error => {\n                if (error.response.status === 401) {\n                    onError();\n                }\n                Promise.reject(error);\n            }\n        );\n    };\n\n    clearInterceptor = interceptor => {\n        axios.interceptors.request.eject(interceptor);\n    };\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass UserService {\n    getUserList = params => axios.get(`${API_URL}/user`, { params });\n    getMe = () => axios.get(`${API_URL}/me`);\n    getUser = id => axios.get(`${API_URL}/user/${id}`);\n    createUser = body => axios.post(`${API_URL}/user`, { ...body });\n    updateUser = (body, pathId) =>\n        axios.put(`${API_URL}/user/${pathId}`, { ...body });\n    deleteUser = id => axios.delete(`${API_URL}/user/${id}`);\n    uploadAvatar = body =>\n        axios.post(`${API_URL}/user/avatar`, body, {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n    resendInvitationUser = id =>\n        axios.get(`${API_URL}/user/${id}/resend-credentials`);\n}\nconst userService = new UserService();\n\nexport default userService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\n// Constants\nimport { IMAGES_URL } from \"services/api/constants\";\n\nimport { getUserAvatar } from \"../utils/developersUtils\";\n\n// Services\nimport authService from \"../services/api/AuthService\";\nimport userService from \"../services/api/UserService\";\n\nclass AuthStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n        this.isUpdatingAvatar = false;\n    }\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setInitialState = () => {\n        this.token = undefined;\n        this.me = undefined;\n\n        authService.clearInterceptor(this.authInterceptor);\n    };\n\n    onLogin = async data => {\n        try {\n            this.showLoader(true);\n            const response = await authService.login(data);\n            const token = response?.data?.access_token;\n\n            if (token) {\n                await localStorage.setItem(\"token\", token);\n                this.setUserToken(token);\n            }\n        } catch (err) {\n            console.error(err);\n            this.showNotification(\"error\", err?.response?.data?.message);\n            this.setInitialState();\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onLogout = async data => {\n        try {\n            await authService.logout();\n            await localStorage.removeItem(\"token\");\n\n            authService.clearInterceptor(this.authInterceptor);\n            this.setInitialState();\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    onGetMe = async () => {\n        try {\n            const response = await authService.getMe();\n            return response.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        }\n    };\n\n    dispatchLoginFulfilled = (me, token) => {\n        this.me = { ...me, avatar: getUserAvatar(me?.avatar) };\n        this.token = token;\n    };\n\n    setUserToken = token => {\n        this.token = token;\n    };\n\n    onForgotPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.forgotPassword(body);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onResetPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.resetPassword(body);\n            this.showNotification(\n                \"success\",\n                \"Password was successfully changed\"\n            );\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    addAuthHeaderInterceptor = async () => {\n        const token = await localStorage.getItem(\"token\");\n\n        authService.clearInterceptor(this.authInterceptor);\n\n        this.authInterceptor = await authService.addAuthHeaderInterceptor({\n            token,\n            onError: this.setInitialState,\n        });\n    };\n    onUploadAvatar = async avatar => {\n        this.isUpdatingAvatar = true;\n\n        try {\n            const formData = new FormData();\n            formData.append(\"avatar\", avatar);\n\n            const data = await userService.uploadAvatar(formData);\n\n            this.me = {\n                ...this.me,\n                avatar: `${IMAGES_URL}/uploads${data?.data?.data?.avatar}`,\n            };\n            this.showNotification(\"success\", \"Avatar updated\");\n        } catch (e) {\n            this.showNotification(\"error\", \"Something went wrong\");\n        } finally {\n            this.isUpdatingAvatar = false;\n        }\n    };\n}\n\ndecorate(AuthStore, {\n    // state\n    me: observable.ref,\n    token: observable,\n    isUpdatingAvatar: observable,\n\n    //actions\n    setInitialState: action,\n    onLogin: action,\n    dispatchLoginFulfilled: action,\n    setUserToken: action,\n    addAuthHeaderInterceptor: action,\n    onGetMe: action,\n    onForgotPassword: action,\n    onUploadAvatar: action,\n});\n\nexport default AuthStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass LogService {\n    getLogs = params => axios.get(`${API_URL}/log`, { params });\n    addLog = body => axios.post(`${API_URL}/log`, { ...body });\n    updateLog = (params, pathId) =>\n        axios.put(`${API_URL}/log/${pathId}`, { ...params });\n    deleteLog = id => axios.delete(`${API_URL}/log/${id}`);\n    setLogStatus = ({ id, status }) =>\n        axios.post(`${API_URL}/log/${id}/${status}`);\n\n    getLogTypes = params => axios.get(`${API_URL}/log-type`, { params });\n    updateLogType = (body, typeId) =>\n        axios.put(`${API_URL}/log-type/${typeId}`, { ...body });\n    addLogType = body => axios.post(`${API_URL}/log-type`, { ...body });\n    deleteLogType = id => axios.delete(`${API_URL}/log-type/${id}`);\n    getLogHistory = (id, params) =>\n        axios.get(`${API_URL}/log/${id}/histories`, { params });\n}\n\nconst logService = new LogService();\n\nexport default logService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ProjectService {\n    getProjectList = params => axios.get(`${API_URL}/project`, { params });\n    getProjectTypes = () => axios.get(`${API_URL}/project/types`);\n    getProjectUserList = id => axios.get(`${API_URL}/project/${id}/users`);\n    createProject = body => axios.post(`${API_URL}/project`, { ...body });\n    updateProject = (body, id) =>\n        axios.put(`${API_URL}/project/${id}`, { ...body });\n    deleteProject = id => axios.delete(`${API_URL}/project/${id}`);\n    addUsersToProject = (body, id) =>\n        axios.post(`${API_URL}/project/${id}/users`, { ...body });\n    deleteUsersFromProject = (body, id) => {\n        console.log(body, id);\n        return axios.delete(`${API_URL}/project/${id}/users`, { data: body });\n    };\n}\n\nconst projectService = new ProjectService();\n\nexport default projectService;\n","export const DEFAULT_PAGE = 1;\nexport const DEFAULT_PER_PAGE = 20;\nexport const MAX_PER_PAGE = 500;\nexport const ROWS_PER_PAGE = [5, 10, 20, 50];\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ActivityService {\n    getActivities = params =>\n        axios.get(`${API_URL}/activities`, {\n            params,\n        });\n}\n\nconst activityService = new ActivityService();\n\nexport default activityService;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n\n// Services\nimport activityService from \"../services/api/ActivityService\";\n\nexport function distributeBy(key, array) {\n    const object = array.reduce((acc, item) => {\n        (acc[item[key]] || (acc[item[key]] = [])).push(item);\n        return acc;\n    }, {});\n\n    return Object.entries(object).map(item => ({\n        title: item[0],\n        data: item[1],\n    }));\n}\nclass ActivityStore {\n    constructor(rootStore) {\n        this.activities = [];\n        this.nextDate = false;\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n    }\n\n    setInitialState = () => {\n        this.activities = [];\n        this.nextDate = false;\n    };\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    handleResponseActivities = ({ activities, next_date, current_date }) => {\n        runInAction(\"set activity response\", () => {\n            this.activities = [\n                ...this.activities,\n                {\n                    date: current_date,\n                    activities: distributeBy(\"tree_id\", activities),\n                },\n            ];\n            this.nextDate = next_date;\n        });\n    };\n\n    onGetActivities = async params => {\n        try {\n            this.showLoader(true);\n            const data = await activityService.getActivities(params);\n            const activities = data?.data?.data;\n            const next_date = data?.data?.next_date;\n            const current_date = data?.data?.current_date;\n            if (activities.length) {\n                this.handleResponseActivities({\n                    activities,\n                    next_date,\n                    current_date,\n                });\n            }\n            if (activities.length < 10 && next_date) {\n                this.onGetActivities({ date: next_date });\n            }\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n}\n\ndecorate(ActivityStore, {\n    // state\n    activities: observable,\n    nextDate: observable,\n\n    // actions\n    onGetActivities: action,\n    setInitialState: action,\n});\n\nexport default ActivityStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport logService from \"services/api/LogService\";\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\n// Utils\nimport { distributeBy } from \"./ActivityStore\";\n\nconst updateLogListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, id) => {\n        return dataArray.filter(item => item.id !== id);\n    },\n    create: (userList, item) => {\n        item.status = \"in review\";\n        return [...userList, item];\n    },\n};\n\nclass LogStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.logs = [];\n        this.logTypes = [];\n\n        this.projectList = [];\n        this.userList = [];\n        this.declinedLogs = [];\n\n        this.historyByLog = [];\n        this.historyNextDate = null;\n        this.isLoadingHistoryByLog = false;\n    }\n\n    setInitialState = () => {\n        this.logs = [];\n        this.logTypes = [];\n        this.projectList = [];\n        this.userList = [];\n    };\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setEmptyLogs = () => {\n        this.logs = [];\n    };\n\n    getHistoryByLog = async (id, params = {}) => {\n        try {\n            this.isLoadingHistoryByLog = true;\n            const response = await logService.getLogHistory(id, params);\n\n            this.historyByLog = this.historyByLog.concat([\n                {\n                    date: response?.data?.current_date,\n                    activities: distributeBy(\"tree_id\", response?.data?.data),\n                },\n            ]);\n\n            this.historyNextDate = response?.data?.next_date;\n        } catch (e) {\n            console.error(e);\n        } finally {\n            this.isLoadingHistoryByLog = false;\n        }\n    };\n\n    clearHistoryByLog = () => {\n        this.historyByLog = [];\n        this.historyNextDate = null;\n    };\n\n    onGetLogs = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.getLogs(params);\n            runInAction(\"setLogList\", () => {\n                this.logs = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetDeclinedLogs = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.getLogs({\n                ...params,\n                status: [\"declined\"],\n            });\n            runInAction(\"setDeclinedLogList\", () => {\n                this.declinedLogs = response?.data?.data;\n            });\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onAddLog = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.addLog(params);\n            runInAction(\"addLogItem\", () => {\n                this.logs = updateLogListStrategy[\"create\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLog = async (params, pathId) => {\n        try {\n            this.setLoading(true);\n            const response = await logService.updateLog(params, pathId);\n\n            runInAction(\"updateLogItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLogStatus = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.setLogStatus(params);\n            runInAction(\"updateLogStatusItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log status changed\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onDeleteLog = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLog(id);\n            runInAction(\"selectLogItem\", () => {\n                this.logs = updateLogListStrategy[\"delete\"](this.logs, id);\n            });\n            this.showNotification(\"success\", \"Log deleted\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetLogTypes = async params => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.getLogTypes({\n                ...params,\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setLogTypes\", () => {\n                this.logTypes =\n                    data?.data && data?.data.sort((a, b) => b.id - a.id);\n            });\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onCreateLogType = async body => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.addLogType(body);\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes.unshift(data?.data);\n            });\n            this.showNotification(\"success\", \"Log type saved\");\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onUpdateLogType = async (body, id) => {\n        try {\n            this.setLoading(true);\n            const {\n                data: { data },\n            } = await logService.updateLogType(body, id);\n            this.showNotification(\"success\", \"Log type changed\");\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes = this.logTypes.map(item => {\n                    if (item.id === data.id) {\n                        return data;\n                    }\n                    return item;\n                });\n            });\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onDeleteLogType = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLogType(id);\n            this.showNotification(\"success\", \"Log type deleted\");\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes = this.logTypes.filter(item => item.id !== id);\n            });\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetProjectList = async () => {\n        try {\n            this.setLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    set logTypes(data) {\n        this.logTypes = data;\n    }\n\n    set logs(logs) {\n        this.logs = logs;\n    }\n}\n\ndecorate(LogStore, {\n    // state\n    logs: observable,\n    logTypes: observable,\n    projectList: observable,\n    userList: observable,\n    declinedLogs: observable,\n    isLoadingHistoryByLog: observable,\n    historyByLog: observable,\n    historyNextDate: observable,\n\n    // actions\n    onGetLogs: action,\n    onAddLog: action,\n    onUpdateLog: action,\n    onDeleteLog: action,\n    onUpdateLogStatus: action,\n    updateLogInList: action,\n    setEmptyLogs: action,\n    setLogTypes: action,\n    onGetLogTypes: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n    onCreateLogType: action,\n    onUpdateLogType: action,\n    onDeleteLogType: action,\n    setInitialState: action,\n    onGetDeclinedLogs: action,\n    getHistoryByLog: action,\n    clearHistoryByLog: action,\n});\n\nexport default LogStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass LoadersStore {\n    isLoadingPage = true;\n\n    setLoadingPage = status => {\n        this.isLoadingPage = status;\n    };\n}\n\ndecorate(LoadersStore, {\n    // state\n    isLoadingPage: observable,\n\n    // actions\n    setLoadingPage: action,\n});\n\nexport default LoadersStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n\n// Services\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\nconst mapperSortFields = {\n    Updated: \"updated_at\",\n    Created: \"created_at\",\n    \"Project name\": \"name\",\n    Type: \"type\",\n};\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => projectService.deleteProject(id),\n    update: () => projectService.updateProject(body, id),\n    create: () => projectService.createProject(body),\n});\n\nclass ProjectStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.projectList = [];\n        this.projectTypes = [];\n        this.projectUserList = [];\n        this.editingProjectData = undefined;\n        this.userList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setInitialState = () => {\n        this.projectList = [];\n        this.projectTypes = [];\n    };\n\n    fetch = async (apiCall, ...args) => {\n        try {\n            this.setLoading(true);\n            const response = await apiCall(...args);\n            return response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetProjectList = async ({ sort, ...params }) => {\n        try {\n            let enhancedParams = { ...params };\n            if (sort.field) {\n                enhancedParams = {\n                    ...enhancedParams,\n                    sort: { [mapperSortFields[sort.field]]: sort.type },\n                };\n            }\n\n            this.setLoading(true);\n            const response = await projectService.getProjectList(\n                enhancedParams\n            );\n            runInAction(\"setProjectList\", () => {\n                this.projectList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    handleFetchProjectData = async (actionType, data) => {\n        try {\n            this.setLoading(true);\n            await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"Project saved\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onCreateProject = body => this.handleFetchProjectData(\"create\", { body });\n\n    onUpdateProject = (body, id) =>\n        this.handleFetchProjectData(\"update\", { body, id });\n\n    onDeleteProject = id => this.handleFetchProjectData(\"delete\", { id });\n\n    onGetProjectTypes = async () => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectTypes();\n            runInAction(\"setProjectTypes\", () => {\n                this.projectTypes = response?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetProjectUserList = async id => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectUserList(id);\n            return response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onAddUsersToProject = async (body, id) =>\n        this.fetch(projectService.addUsersToProject, body, id);\n\n    onDeleteUsersFromProject = async (body, id) =>\n        this.fetch(projectService.deleteUsersFromProject, body, id);\n\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    setEditingProjectData = async project => {\n        if (!project) {\n            runInAction(() => {\n                this.editingProjectData = project;\n            });\n            return;\n        }\n        const users = await this.onGetProjectUserList(project.id);\n        runInAction(() => {\n            this.editingProjectData = {\n                ...project,\n                users: users.map(item => item.id),\n            };\n        });\n    };\n\n    set projectList(data) {\n        this.projectList = data;\n    }\n    set projectTypes(data) {\n        this.projectTypes = data;\n    }\n    set projectUserList(data) {\n        this.projectUserList = data;\n    }\n}\n\ndecorate(ProjectStore, {\n    // state\n    projectList: observable,\n    projectTypes: observable,\n    projectUserList: observable,\n    editingProjectData: observable,\n    userList: observable,\n\n    //actions\n    setInitialState: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n    onGetProjectTypes: action,\n    setEditingProjectData: action,\n    onCreateProject: action,\n    onUpdateProject: action,\n    onDeleteProject: action,\n    onAddProjectUserList: action,\n});\n\nexport default ProjectStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport userService from \"../services/api/UserService\";\nimport intersection from \"lodash.intersection\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => userService.deleteUser(id),\n    update: () => userService.updateUser(body, id),\n    create: () => userService.createUser(body),\n});\n\nclass UserStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.userList = [];\n        this.editingUserData = undefined;\n        this.isResendingInvitation = false;\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    onAddUsersToProject = (body, id) =>\n        this.rootStore.projectStore.onAddUsersToProject(body, id);\n    onDeleteUsersFromProject = (body, id) =>\n        this.rootStore.projectStore.onDeleteUsersFromProject(body, id);\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    onGetUserList = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await userService.getUserList(params);\n            runInAction(\"setUserList\", () => {\n                this.userList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    handleFetchUserData = async (actionType, data) => {\n        try {\n            this.setIsLoading(true);\n            const response = await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"User saved\");\n            return response;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onCreateUser = async body => {\n        const projects = [...body.projects];\n        delete body.projects;\n        const {\n            data: { data },\n        } = await this.handleFetchUserData(\"create\", { body });\n        await Promise.all([\n            ...projects.map(projectId =>\n                this.onAddUsersToProject({ users: [data.id] }, projectId)\n            ),\n        ]);\n    };\n\n    updateUsersForProject = async (projects, id) => {\n        const intersectedArray = intersection(\n            projects,\n            this.editingUserData.projects\n        );\n        const deleted = this.editingUserData.projects.filter(\n            id => !intersectedArray.includes(id)\n        );\n        const added = projects.filter(id => !intersectedArray.includes(id));\n        await Promise.all([\n            ...added.map(projectId =>\n                this.onAddUsersToProject({ users: [id] }, projectId)\n            ),\n        ]);\n        await Promise.all([\n            ...deleted.map(projectId =>\n                this.onDeleteUsersFromProject({ users: [id] }, projectId)\n            ),\n        ]);\n    };\n\n    onUpdateUser = async (body, id) => {\n        const projects = [...body.projects];\n        delete body.projects;\n        await this.updateUsersForProject(projects, id);\n        await this.handleFetchUserData(\"update\", { body, id });\n    };\n\n    onDeleteUser = id => this.handleFetchUserData(\"delete\", { id });\n\n    setEditingUserData = user => {\n        this.editingUserData = user;\n    };\n\n    onResendInvitationUser = async id => {\n        try {\n            this.isResendingInvitation = true;\n            await userService.resendInvitationUser(id);\n\n            this.showNotification(\"success\", \"Invitation has been sent\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.isResendingInvitation = false;\n        }\n    };\n}\n\ndecorate(UserStore, {\n    // state\n    userList: observable,\n    editingUserData: observable,\n    isResendingInvitation: observable,\n\n    // actions\n    setEditingUserData: action,\n    onGetUserList: action,\n    onCreateUser: action,\n    onUpdateUser: action,\n    onDeleteUser: action,\n    onResendInvitationUser: action,\n});\n\nexport default UserStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass NotificationStore {\n    notificationQueue = [];\n\n    showNotification = data => {\n        this.notificationQueue = [\n            ...this.notificationQueue,\n            {\n                ...data,\n                duration: 2000,\n                id: this.notificationQueue.length,\n            },\n        ];\n    };\n    hideNotification = id => {\n        this.notificationQueue = this.notificationQueue.filter(\n            item => item.id !== id\n        );\n    };\n}\n\ndecorate(NotificationStore, {\n    // state\n    notificationQueue: observable,\n\n    // actions\n    showNotification: action,\n    hideNotification: action,\n});\n\nexport default NotificationStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ExportService {\n    download = params =>\n        axios.get(`${API_URL}/export`, {\n            params,\n            responseType: \"blob\",\n        });\n    getHistoryItems = params =>\n        axios.get(`${API_URL}/export-history`, { params });\n}\n\nconst exportService = new ExportService();\n\nexport default exportService;\n","export const EXCEL_TYPE =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n","// Core\nimport { action, decorate, observable, runInAction } from \"mobx\";\nimport exportService from \"../services/api/ExportService\";\n\n//constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\nimport { EXCEL_TYPE } from \"constants/export\";\nimport userService from \"services/api/UserService\";\nimport projectService from \"services/api/ProjectService\";\n\nclass ExportStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.historyItems = [];\n        this.userList = [];\n        this.projectList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showErrorMessage = message => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type: \"error\",\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    downloadFile(response, { week, from_date, to_date }) {\n        const blob = new Blob([response.data], {\n            type: EXCEL_TYPE,\n        });\n        const a = document.createElement(\"a\");\n        a.href = window.URL.createObjectURL(blob);\n        a.download = `KW_${week ? week : \"\"}_${\n            from_date && to_date ? `${from_date}-${to_date}` : \"\"\n        }.xlsx`;\n        a.click();\n    }\n\n    onDownload = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.download(params);\n\n            if (response.headers[\"content-type\"] === EXCEL_TYPE) {\n                this.downloadFile(response, params);\n            } else {\n                this.showErrorMessage(\"Error exporting report\");\n            }\n        } catch (error) {\n            this.showErrorMessage(error?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetHistoryItems = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.getHistoryItems({\n                page: this.page,\n                per_page: this.perPage,\n                ...params,\n            });\n            runInAction(\"setHistoryItems\", () => {\n                this.historyItems = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetProjectList = async () => {\n        try {\n            this.setIsLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetUserList = async () => {\n        try {\n            this.setIsLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n}\n\ndecorate(ExportStore, {\n    //observables\n    historyItems: observable,\n    page: observable,\n    perPage: observable,\n    userList: observable,\n    projectList: observable,\n\n    // actions\n    onDownload: action,\n    onGetHistoryItems: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n});\n\nexport default ExportStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nclass PaginationStore {\n    page = DEFAULT_PAGE;\n    perPage = DEFAULT_PER_PAGE;\n    meta = undefined;\n\n    setInitialValues = initialValues => {\n        this.page = initialValues?.page || DEFAULT_PAGE;\n        this.perPage = initialValues?.perPage || this.perPage;\n        this.meta = undefined;\n    };\n\n    setPage = number => {\n        this.page = number;\n    };\n\n    setPerPage = number => {\n        this.page = DEFAULT_PAGE;\n        this.perPage = number;\n    };\n\n    setMeta = data => {\n        this.meta = data;\n    };\n}\n\ndecorate(PaginationStore, {\n    // state\n    page: observable,\n    perPage: observable,\n    meta: observable,\n\n    // actions\n    setInitialValues: action,\n    setPage: action,\n    setPerPage: action,\n    setMeta: action,\n});\n\nexport default PaginationStore;\n","// Core\nimport React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\n// Stores\nimport AuthStore from \"./AuthStore\";\nimport LogStore from \"./LogStore\";\nimport LoadersStore from \"./LoadersStore\";\nimport ProjectStore from \"./ProjectStore\";\nimport UserStore from \"./UserStore\";\nimport NotificationStore from \"./NotificationStore\";\nimport ExportStore from \"./ExportStore\";\nimport PaginationStore from \"./PaginationStore\";\nimport ActivityStore from \"./ActivityStore\";\n\nclass RootStore {\n    constructor() {\n        this.authStore = new AuthStore(this);\n        this.logStore = new LogStore(this);\n        this.loadersStore = new LoadersStore(this);\n        this.projectStore = new ProjectStore(this);\n        this.userStore = new UserStore(this);\n        this.notificationStore = new NotificationStore(this);\n        this.exportStore = new ExportStore(this);\n        this.paginationStore = new PaginationStore(this);\n        this.activityStore = new ActivityStore(this);\n    }\n}\n\n// Hook\nexport const useStores = () => {\n    return React.useContext(MobXProviderContext);\n};\n\nexport default RootStore;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Slide from \"@material-ui/core/Slide\";\n\n// Store\nimport { useStores } from \"../../store\";\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        notificationQueue: store.notificationStore.notificationQueue,\n        hideNotification: store.notificationStore.hideNotification,\n    }));\n}\n\nexport default function Notification() {\n    const { notificationQueue, hideNotification } = useStore();\n\n    return notificationQueue.map(item => (\n        <Snackbar\n            open\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            autoHideDuration={item.duration}\n            TransitionComponent={SlideTransition}\n            onClose={() => hideNotification(item.id)}\n            key={item.id}\n        >\n            <MuiAlert elevation={6} variant=\"filled\" severity={item.type}>\n                {item.message}\n            </MuiAlert>\n        </Snackbar>\n    ));\n}\n","import styled from 'styled-components'\nimport backgroundImg from './img/404.png'\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    padding-top: 10px;\n    box-sizing: border-box;\n`\n\nexport const PageContainer = styled.div`\n    width: 870px;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: url(${backgroundImg}) no-repeat center center;\n    background-size: 100%;\n`\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 380px;\n`\n\nexport const MainText = styled.p`\n    margin: 0;\n    font-size: 23px;\n    line-height: 35px;\n    margin-bottom: 40px;\n`\n\nexport const SecondaryText = styled.p`\n    margin: 0;\n    font-size: 18px;\n    line-height: 27px;\n    margin-bottom: 40px;\n`\n","// Core\nimport React from 'react'\n\n//Styles\nimport {\n    PageWrapper,\n    PageContainer,\n    MainText,\n    SecondaryText,\n    Content,\n} from './styles'\n\nconst NoMatch = ({ history }) => (\n    <PageWrapper>\n        <PageContainer>\n            <Content>\n                <MainText>\n                    Oops! The page you were looking for doesn’t exist\n                </MainText>\n                <SecondaryText>\n                    You may have misstyped the address or the page may have\n                    moved\n                </SecondaryText>\n                <div>\n                    <button\n                        onClick={() => {\n                            history.push('/')\n                        }}\n                    >\n                        Go to mainpage\n                    </button>\n                </div>\n            </Content>\n        </PageContainer>\n    </PageWrapper>\n)\n\nexport default NoMatch\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport const StyledAvatar = styled(({ disablePointer, ...restProps }) => (\n    <Avatar {...restProps} />\n))`\n    background-color: ${({ theme }) => theme.palette.logo};\n    ${({ disablePointer }) => (!disablePointer ? \"cursor: pointer\" : \"\")};\n    font-size: ${({ size }) => size / 2}px;\n    width: ${({ size }) => size}px;\n    height: ${({ size }) => size}px;\n`;\n","import React from \"react\";\n\nimport { StyledAvatar } from \"./style\";\n\nclass UserAvatar extends React.Component {\n    render() {\n        const {\n            firstName,\n            lastName,\n            disablePointer,\n            avatar,\n            size = 40,\n        } = this.props;\n\n        if (!firstName || !lastName) return null;\n\n        return (\n            <StyledAvatar\n                disablePointer={disablePointer}\n                src={avatar}\n                size={size}\n            >\n                {`${firstName[0] || \"\"}${lastName[0] || \"\"}`}\n            </StyledAvatar>\n        );\n    }\n}\n\nexport default UserAvatar;\n","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n    pointer-events: ${({ disabled }) => (disabled ? \"none\" : \"auto\")};\n`;\n","import React from \"react\";\n\nimport { StyledLabel } from \"./styles\";\n\nconst PhotoUploader = ({ children, onUpload, disabled }) => {\n    return (\n        <StyledLabel htmlFor=\"upload-photo\" disabled={disabled}>\n            <input\n                style={{ display: \"none\" }}\n                id=\"upload-photo\"\n                name=\"upload-photo\"\n                type=\"file\"\n                multiple={false}\n                onChange={e => {\n                    if (!e.target?.files) return;\n\n                    onUpload(e.target?.files[0]);\n                }}\n            />\n            {children}\n        </StyledLabel>\n    );\n};\n\nexport default PhotoUploader;\n","import styled from \"styled-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const Wrapper = styled.div`\n    position: relative;\n`;\n\nexport const StyledProgress = styled(CircularProgress)`\n    position: absolute;\n    top: 0;\n    color: #2196f3;\n`;\n","// Core\nimport React from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n\n// Components\nimport UserAvatar from \"components/UserAvatar\";\nimport PhotoUploader from \"../PhotoUploader\";\n\n// Styles\nimport { Wrapper, StyledProgress } from \"./styles\";\n\nfunction useStore() {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        isUpdatingAvatar: authStore.isUpdatingAvatar,\n        onUploadAvatar: authStore.onUploadAvatar,\n    }));\n}\n\nexport default function ProfileMenu({ me }) {\n    const { isUpdatingAvatar, onUploadAvatar } = useStore();\n\n    return (\n        <Wrapper>\n            <PhotoUploader\n                onUpload={onUploadAvatar}\n                disabled={isUpdatingAvatar}\n            >\n                <UserAvatar\n                    firstName={me.firstname}\n                    lastName={me.lastname}\n                    avatar={me.avatar}\n                />\n            </PhotoUploader>\n            {isUpdatingAvatar && <StyledProgress size={41} />}\n        </Wrapper>\n    );\n}\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n\nexport default StyledLink;\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.main};\n    &.active {\n        color: ${theme.palette.primary.dark};\n    }\n  `}\n`;\n","// Core\nimport React from \"react\";\nimport clsx from \"clsx\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n    },\n    menuButton: {\n        color: \"#fff\",\n    },\n    active: {\n        background: \"red\",\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n\nconst NavigationMenu = ({ menuItems, me, onLogout }) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    const toggleDrawer = (anchor, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = anchor => (\n        <div\n            className={clsx(classes.list)}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {menuItems.map(({ path, name }) => (\n                    <StyledLink to={`/${path}`} key={path}>\n                        <ListItem button>\n                            <ListItemText primary={name} />\n                        </ListItem>\n                    </StyledLink>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"primary\"\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer\n                anchor=\"right\"\n                open={state[\"left\"]}\n                onClose={toggleDrawer(\"left\", false)}\n            >\n                {list(\"left\")}\n                {me && (\n                    <ListItem divider>\n                        <ListItemText\n                            className={classes.pointer}\n                            onClick={onLogout}\n                            secondary=\"Sign out\"\n                        />\n                    </ListItem>\n                )}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default NavigationMenu;\n","import styled from \"styled-components\";\n\nconst SIZE = 40;\n\nexport const Shape = styled.span`\n    ${({ theme }) => `\n        width: ${SIZE}px;\n    height: ${SIZE / 2}px;\n    position: relative;\n    overflow: hidden;\n    &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        background-color: ${theme.palette.logo};\n        border-radius: 50%;\n        width: 100%;\n        height: 200%;\n    }\n    `}\n`;\n\nexport const ShapeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: ${SIZE}px;\n    max-height: ${SIZE};\n    cursor: pointer;\n`;\n\nexport const Text = styled.div`\n    font-family: \"GT-America\";\n    text-transform: uppercase;\n    font-size: 16px;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    padding-left: 11px;\n    user-select: none;\n    & > span {\n        line-height: 0.9em;\n        transform: scale(1, 0.9);\n        letter-spacing: -0.7px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n`;\n","// Core\nimport React from \"react\";\n\n//styles\nimport { Shape, ShapeContainer, Text, LogoContainer } from \"./styles\";\n\nfunction Logo() {\n    return (\n        <LogoContainer>\n            <ShapeContainer>\n                <Shape />\n                <Shape />\n            </ShapeContainer>\n            <Text>\n                <span>fountain</span>\n                <span>head</span>\n                <span>it</span>\n            </Text>\n        </LogoContainer>\n    );\n}\n\nexport default Logo;\n","const ROUTES = Object.freeze([\n    {\n        name: \"Reports\",\n        path: \"developer-reports\",\n    },\n    {\n        name: \"Work items\",\n        path: \"work-items\",\n    },\n    {\n        name: \"Reports\",\n        path: \"manager-reports\",\n    },\n    {\n        name: \"Projects\",\n        path: \"projects\",\n    },\n    {\n        name: \"Team\",\n        path: \"developers\",\n    },\n    {\n        name: \"Report history\",\n        path: \"report-history\",\n    },\n    {\n        name: \"History\",\n        path: \"activity\",\n    },\n]);\n\nconst ROUTES_FOR_DEV = Object.freeze([\"developer-reports\", \"activity\"]);\nconst ROUTES_FOR_ADMIN = Object.freeze([\n    \"developers\",\n    \"projects\",\n    \"manager-reports\",\n    \"activity\",\n    \"work-items\",\n]);\n\nconst BY_ROLE = Object.freeze({\n    admin: ROUTES_FOR_ADMIN,\n    dev: ROUTES_FOR_DEV,\n});\n\nexport const getRoutesByRole = role => {\n    const routesByRole = BY_ROLE[role];\n\n    if (!routesByRole) return [];\n\n    return ROUTES.filter(({ path }) => routesByRole.includes(path));\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProfileMenu from \"components/ProfileMenu\";\nimport Link from \"components/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// Components\nimport NavigationMenu from \"./NavigationMenu\";\n\n// UI\nimport Logo from \"components/Logo\";\n\n// Utils\nimport { getRoutesByRole } from \"../../utils/routerUtils\";\nimport { Divider } from \"@material-ui/core\";\n\n// Hooks\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n\nconst NavigationPanel = ({ me, onLogout }) => {\n    const classes = useStyles();\n\n    const routes = getRoutesByRole(me?.role);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Logo />\n\n                <Typography variant=\"h6\" className={classes.title} />\n                <Hidden smDown>\n                    <Box mr={4} display=\"flex\" alignItems=\"center\">\n                        {routes.map(route => (\n                            <Box px={1} key={`box-${route.name}`}>\n                                <Typography\n                                    variant=\"button\"\n                                    key={`typo-${route.name}`}\n                                    noWrap\n                                >\n                                    <Link\n                                        to={route.path}\n                                        key={`link-${route.name}`}\n                                    >\n                                        {route.name}\n                                    </Link>\n                                </Typography>\n                            </Box>\n                        ))}\n                        <Divider orientation=\"vertical\" flexItem />\n                        {me && (\n                            <Box p={2} className={classes.pointer}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    onClick={onLogout}\n                                >\n                                    Sign out\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Hidden>\n                {me && <ProfileMenu me={me} onLogout={onLogout} />}\n                {me && (\n                    <Hidden mdUp>\n                        <NavigationMenu\n                            menuItems={routes}\n                            me={me}\n                            onLogout={onLogout}\n                        />\n                    </Hidden>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavigationPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"@material-ui/core\";\n\nexport const StyledTableRow = styled(({ type, ...otherProps }) => (\n    <TableRow {...otherProps} />\n))`\n    cursor: ${props => (props.hover ? \"pointer\" : \"auto\")};\n    & .MuiTableCell-body {\n        color: ${({ type, theme }) => type && theme.palette.text[type]};\n    }\n\n    opacity: ${props => (props.disabled ? 0.4 : 1)};\n`;\n","import React from \"react\";\nimport { StyledTableRow } from \"./styles\";\n\nfunction TableRow(props) {\n    return <StyledTableRow {...props} />;\n}\n\nexport default TableRow;\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { grey } from \"@material-ui/core/colors\";\n// Styles\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport const StyledTableCell = styled(({ noWrap, minWidth, ...restProps }) => (\n    <TableCell {...restProps} />\n))`\n    border-right: 1px solid ${grey[300]};\n    min-width: ${({ minWidth }) => minWidth};\n    width: ${({ width }) => (width ? `${width}` : \"auto\")};\n    white-space: ${({ noWrap }) => (noWrap ? \"nowrap\" : \"normal\")};\n`;\n","import React from \"react\";\nimport { StyledTableCell } from \"./styles\";\n\nfunction TableCell(props) {\n    return <StyledTableCell {...props} />;\n}\n\nexport default TableCell;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nexport const CustomBadge = styled.div(\n    ({ size, color }) => `\n      display: table;\n      width: ${size}px;\n      height: ${size}px;\n      border-radius: 50%;\n      margin-right: 5px;\n      background: ${color};\n`\n);\n\nexport const Title = styled.span(\n    ({\n        fontSize,\n        theme: {\n            palette: {\n                default: { main },\n            },\n        },\n        color = main,\n    }) => `\n  color: ${color};\n  line-height: ${fontSize}px;\n  font-size: ${fontSize}px;\n`\n);\n","import React from \"react\";\n\nimport { Wrapper, CustomBadge, Title } from \"./styles\";\n\nconst ColoredName = ({\n    fontSize = 15,\n    text = \"\",\n    color = \"transparent\",\n    className,\n}) => {\n    return (\n        <Wrapper className={className}>\n            <CustomBadge size={fontSize / 2} color={color} />\n            <Title color={color} fontSize={fontSize}>\n                {text}\n            </Title>\n        </Wrapper>\n    );\n};\n\nexport default ColoredName;\n","import styled from \"styled-components\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nexport const StyledChip = styled(Chip)`\n    margin: 2px;\n`;\n","// Core\nimport React, { useMemo } from \"react\";\n// UI\nimport { TableHead, TableBody, Table, Tooltip } from \"@material-ui/core\";\n\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport ColoredName from \"components/ColoredName\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developers\";\nimport { formatFromSeconds } from \"utils/developersUtils\";\n\n// Styles\nimport { StyledChip } from \"./styles\";\n\nexport default function ({ developerList, setEditingUserData, projectList }) {\n    const getFullName = (firstname, lastname) => `${firstname} ${lastname}`;\n    const concatSkills = skillsArray => skillsArray.join(\", \");\n\n    const parseProjectsByUser = useMemo(() => {\n        return projectList.reduce((acc, project) => {\n            project.users.forEach(user => {\n                acc[user.id] = acc[user.id]\n                    ? [...acc[user.id], project]\n                    : [project];\n            });\n\n            return acc;\n        }, {});\n    }, [projectList]);\n\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell key={item}>{item}</TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {developerList.length ? (\n                    developerList.map(developer => (\n                        <TableRow\n                            type={\n                                developer.status === \"inactive\"\n                                    ? \"disabled\"\n                                    : \"primary\"\n                            }\n                            hover\n                            key={developer.id}\n                            onClick={() =>\n                                setEditingUserData({\n                                    ...developer,\n                                    projects:\n                                        parseProjectsByUser[developer.id]?.map(\n                                            project => project.id\n                                        ) || [],\n                                })\n                            }\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {developer.id}\n                            </TableCell>\n                            <TableCell>\n                                {getFullName(\n                                    developer.firstname,\n                                    developer.lastname\n                                )}\n                            </TableCell>\n                            <TableCell>\n                                {concatSkills(developer.skills)}\n                            </TableCell>\n                            <TableCell>\n                                {parseProjectsByUser[developer.id]?.map(\n                                    ({ alias, color, id, name }) => (\n                                        <Tooltip\n                                            title={name}\n                                            placement=\"top\"\n                                            key={id}\n                                            arrow\n                                        >\n                                            <StyledChip\n                                                label={\n                                                    <ColoredName\n                                                        text={alias}\n                                                        fontSize={14}\n                                                        color={color}\n                                                    />\n                                                }\n                                            />\n                                        </Tooltip>\n                                    )\n                                )}\n                            </TableCell>\n                            <TableCell>\n                                {formatFromSeconds(\n                                    developer.approved_total_time\n                                )}\n                            </TableCell>\n                            <TableCell>\n                                {formatFromSeconds(\n                                    developer.total_work_time -\n                                        developer.approved_total_time\n                                )}\n                            </TableCell>\n                            <TableCell>{developer.status}</TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <TableCell>{\"Empty\"}</TableCell>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\n\nexport const StyledDialog = styled(Dialog)`\n    & .MuiPaper-root,\n    .MuiDialogContent-root {\n        overflow-y: visible;\n        max-height: 80vh;\n        overflow-y: auto;\n    }\n    & .MuiPaper-root {\n        max-width: 768px;\n        width: 768px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// Styles\nimport { StyledDialog } from \"./styles\";\n\nexport default function FormDialog({\n    open,\n    handleClose,\n    title,\n    children,\n    className,\n}) {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            maxWidth={\"lg\"}\n            className={className}\n        >\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n            <DialogContent>{children}</DialogContent>\n        </StyledDialog>\n    );\n}\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\n\nexport const ContainedButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    color: white;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n\nexport const OutlinedButton = styled(({ type, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { ContainedButton, OutlinedButton } from \"./styles\";\n\nfunction DialogActionButton(props) {\n    return props.variant === \"contained\" ? (\n        <ContainedButton {...props} />\n    ) : (\n        <OutlinedButton {...props} />\n    );\n}\n\nexport default DialogActionButton;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n\nexport const WrapResendButton = styled.div`\n    position: relative;\n    display: inline-flex;\n`;\n\nexport const StyledProgressSpinner = styled(CircularProgress)`\n    color: #2196f3;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: -12px;\n    margin-left: -12px;\n`;\n\nexport const StyledButton = styled(Button)`\n    color: #fff;\n    align-self: flex-start;\n`;\n\nexport const StyledGridContainerBottom = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 0;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n    Typography,\n} from \"@material-ui/core\";\n\nfunction RoleSelector({ value, onChange, id, error }) {\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n    return (\n        <RadioGroup aria-label=\"Type\" value={value} onChange={handleChange}>\n            <FormLabel error={error}>\n                <Typography variant=\"caption\">{\"Role *\"}</Typography>\n            </FormLabel>\n            <Grid container wrap=\"nowrap\">\n                <FormControlLabel\n                    value=\"dev\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Developer\"\n                />\n                <FormControlLabel\n                    value=\"admin\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Admin\"\n                />\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default RoleSelector;\n","// Core\nimport React from \"react\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function ProjectMultiSelect({\n    projectList,\n    onChange,\n    values,\n    id,\n}) {\n    const getOptionLabel = option => option.name;\n\n    const handleChange = (e, data) => {\n        onChange(\n            id,\n            data.map(item => item.id)\n        );\n    };\n\n    const getSelectedOptions = () => {\n        const idSet = new Set(values);\n        return projectList.filter(item => idSet.has(item.id));\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={projectList}\n                getOptionLabel={getOptionLabel}\n                value={getSelectedOptions()}\n                filterSelectedOptions\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select projects\"\n                    />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { object, string } from \"yup\";\n// UI\nimport { Grid, TextField, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport DialogActionButton from \"components/DialogActionButton\";\n\n// Styles\nimport {\n    StyledGridContainer,\n    WrapResendButton,\n    StyledProgressSpinner,\n    StyledButton,\n    StyledGridContainerBottom,\n} from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developersUtils\";\nimport RoleSelector from \"../RoleSelector\";\nimport ProjectMultiSelect from \"../ProjectMultiselect\";\n\nlet schema = object().shape({\n    firstname: string().required(),\n    lastname: string().required(),\n    email: string().email().required(),\n    role: string().required(),\n});\n\nexport default function CreateUserForm({\n    open,\n    onClose,\n    handleSubmit,\n    initialData,\n    handleDeleteUser,\n    isResendingInvitation,\n    onReinviteUser,\n    projectList,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n    const formik = useFormik({\n        initialValues,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validationSchema: schema,\n        onSubmit: (data, { resetForm }) => {\n            const skillArrayData = { ...data, skills: [data.skills] };\n\n            handleSubmit(skillArrayData, initialData?.id).then(() =>\n                resetForm(getInitialFormValues())\n            );\n        },\n    });\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        onClose();\n    };\n\n    const { errors } = formik;\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Team member:\">\n            <form autoComplete=\"off\">\n                <StyledGridContainer>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <Box>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={!!errors.firstname}\n                                    id=\"firstname\"\n                                    label=\"First name\"\n                                    onChange={formik.handleChange}\n                                    defaultValue={formik.values.firstname}\n                                    autoComplete=\"off\"\n                                />\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={!!errors.lastname}\n                                    id=\"lastname\"\n                                    label=\"Last name\"\n                                    onChange={formik.handleChange}\n                                    defaultValue={formik.values.lastname}\n                                    autoComplete=\"off\"\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                id=\"country\"\n                                label=\"Country\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.country}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField\n                                required\n                                error={!!errors.email}\n                                fullWidth\n                                id=\"email\"\n                                label=\"e-mail\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.email}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <RoleSelector\n                            value={formik.values.role}\n                            error={!!errors.role}\n                            onChange={formik.setFieldValue}\n                            id=\"role\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"skills\"\n                            variant=\"outlined\"\n                            label=\"Skills\"\n                            onChange={formik.handleChange}\n                            defaultValue={formik.values.skills}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <ProjectMultiSelect\n                            projectList={projectList}\n                            onChange={formik.setFieldValue}\n                            values={formik.values.projects}\n                            id=\"projects\"\n                        />\n                    </Grid>\n\n                    <StyledGridContainerBottom container alignItems=\"center\">\n                        <Grid item xs={12} sm={6}>\n                            {initialData && (\n                                <WrapResendButton>\n                                    <StyledButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={isResendingInvitation}\n                                        onClick={() =>\n                                            onReinviteUser(initialData)\n                                        }\n                                    >\n                                        Resend Invitation\n                                    </StyledButton>\n                                    {isResendingInvitation && (\n                                        <StyledProgressSpinner size={24} />\n                                    )}\n                                </WrapResendButton>\n                            )}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <DialogActions>\n                                {initialData && (\n                                    <DialogActionButton\n                                        onClick={() =>\n                                            handleDeleteUser(initialData?.id)\n                                        }\n                                        type=\"error\"\n                                    >\n                                        Delete\n                                    </DialogActionButton>\n                                )}\n                                <DialogActionButton\n                                    onClick={onCancel}\n                                    type=\"default\"\n                                >\n                                    Cancel\n                                </DialogActionButton>\n                                <DialogActionButton\n                                    onClick={formik.handleSubmit}\n                                    variant=\"contained\"\n                                    type=\"success\"\n                                >\n                                    Save\n                                </DialogActionButton>\n                            </DialogActions>\n                        </Grid>\n                    </StyledGridContainerBottom>\n                </StyledGridContainer>\n            </form>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nexport const StyledAddIcon = styled(AddIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledAddIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button\n            size=\"large\"\n            onClick={handleClick}\n            startIcon={<StyledAddIcon />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport { TablePagination, Box } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\n\n// constants\nimport { ROWS_PER_PAGE } from \"constants/pagination\";\n\n// Store\nimport { useStores } from \"store\";\n\nfunction useStore() {\n    const { paginationStore } = useStores();\n\n    return useObserver(() => ({\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setPage: paginationStore.setPage,\n        setPerPage: paginationStore.setPerPage,\n        meta: paginationStore.meta,\n        setInitialValues: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function ReportPagination() {\n    const {\n        meta,\n        page,\n        perPage,\n        setPage,\n        setPerPage,\n        setInitialValues,\n    } = useStore();\n\n    useEffect(() => setInitialValues, [setInitialValues]);\n\n    if (!meta) {\n        return null;\n    }\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n            <TablePagination\n                rowsPerPageOptions={ROWS_PER_PAGE}\n                component={\"div\"}\n                count={meta.total}\n                rowsPerPage={perPage}\n                page={page - 1}\n                onChangePage={(e, newPage) => setPage(newPage + 1)}\n                onChangeRowsPerPage={e => setPerPage(e.target.value)}\n            />\n            <Pagination\n                count={meta.last_page}\n                color=\"primary\"\n                page={meta.current_page}\n                onChange={(e, newPage) => setPage(newPage)}\n            />\n        </Box>\n    );\n}\n","import styled from \"styled-components\";\nimport { Paper } from \"@material-ui/core\";\n\nconst StyledPaper = styled(Paper)`\n    overflow: scroll;\n`;\n\nexport default StyledPaper;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Date\",\n    \"Week\",\n    \"Developers\",\n    \"Project names\",\n    \"\",\n];\n","import styled from \"styled-components\";\n\nexport const StyledSup = styled.sup`\n    padding-left: ${({ theme }) => theme.spacing(1)}px;\n    color: ${({ theme }) => theme.palette.text.secondary};\n`;\n\nexport const StyledContainer = styled.div`\n    tr > th:last-child,\n    tr > td:last-child {\n        width: 60px;\n        text-align: center;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Box,\n    Tooltip,\n    IconButton,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/reportHistory\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nexport default function ({ historyItems, userList, projectList, onDownload }) {\n    const getDatesLabel = ({ from_date, to_date }) => {\n        if (from_date && to_date) {\n            return `${from_date} - ${to_date}`;\n        }\n    };\n\n    const concatUserNames = ({ users }) =>\n        userList\n            .reduce((acc, item) => {\n                if (users?.includes(String(item.id))) {\n                    acc.push(`${item.firstname} ${item.lastname}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const concatProjectNames = ({ projects }) =>\n        projectList\n            .reduce((acc, item) => {\n                if (projects?.includes(String(item.id))) {\n                    acc.push(`${item.name}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const onClick = ({ from_date, to_date, week, users, projects }) => {\n        onDownload({\n            from_date,\n            to_date,\n            week,\n            users,\n            projects,\n            \"export-from-history\": true,\n        });\n    };\n\n    return (\n        <StyledContainer>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {historyItems?.length ? (\n                        historyItems.map(item => (\n                            <TableRow hover key={item.id}>\n                                <StyledTableCell>{item.id}</StyledTableCell>\n                                <StyledTableCell>\n                                    {getDatesLabel(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {item.filter?.week?.join(\", \")}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatUserNames(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatProjectNames(item.filter)}\n                                </StyledTableCell>\n                                <Box\n                                    component={StyledTableCell}\n                                    p={0}\n                                    display=\"flex\"\n                                    justifyContent=\"center\"\n                                    alignItems=\"center\"\n                                    minWidth=\"50px\"\n                                >\n                                    <Tooltip title=\"Download\">\n                                        <IconButton\n                                            onClick={() => onClick(item.filter)}\n                                        >\n                                            <GetAppIcon\n                                                color=\"primary\"\n                                                size=\"small\"\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Box>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box p={3} component=\"td\">\n                                {\"Empty\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </StyledContainer>\n    );\n}\n","// Core\nimport \"moment/locale/en-sg\";\nimport React from \"react\";\nimport MomentUtils from \"@date-io/moment\";\n\n// UI\nimport { Box } from \"@material-ui/core\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\n// constants\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nfunction DateRangePicker({ fromDate, toDate, setFilter, setErrorDates }) {\n    const changeDateFrom = date => {\n        setFilter(\"fromDate\", date);\n    };\n\n    const changeDateTo = date => {\n        setFilter(\"toDate\", date);\n    };\n\n    const onErrorFrom = error => {\n        if (!error) {\n            setErrorDates(\"dateFrom\", false);\n            return;\n        }\n        setErrorDates(\"dateFrom\", true);\n    };\n    const onErrorTo = error => {\n        if (!error) {\n            setErrorDates(\"dateTo\", false);\n            return;\n        }\n        setErrorDates(\"dateTo\", true);\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils} locale={\"en-sg\"}>\n            <Box display=\"flex\">\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        value={fromDate}\n                        label=\"From date\"\n                        maxDate={toDate ? toDate : false}\n                        onChange={changeDateFrom}\n                        format={FULL_DATE_FORMAT}\n                        onError={onErrorFrom}\n                    />\n                </Box>\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        label=\"To date\"\n                        value={toDate}\n                        minDate={fromDate ? fromDate : false}\n                        onChange={changeDateTo}\n                        format={FULL_DATE_FORMAT}\n                        onError={onErrorTo}\n                    />\n                </Box>\n            </Box>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default DateRangePicker;\n","export const FULL_DATE_FORMAT = \"DD-MM-YYYY\";\nexport const FULL_DATE_SHORT = \"DD-MM-YY\";\n\nexport const DATE_FORMAT = \"DD.MM\";\nexport const DAY_FORMAT = \"DD\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const DATE_AND_MONTH = \"DD MMMM\";\n\nexport const HOUR_IN_MINUTES = 60;\n\nexport const MONDAY = 1;\nexport const SUNDAY = 7;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Chip from \"@material-ui/core/Chip\";\n\n// Components\nimport ColoredName from \"components/ColoredName\";\n\n// Styles\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ projects, setFilter, selectedProjects }) {\n    const onChangeProject = (e, value) => {\n        setFilter(\"selectedProjects\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n\n    const getOptionLabel = option => option.name;\n\n    return (\n        <Autocomplete\n            multiple\n            renderTags={listProjects =>\n                listProjects.map(project => (\n                    <Chip\n                        key={project.id}\n                        label={\n                            <ColoredName\n                                text={project.name}\n                                color={project.color}\n                                fontSize={15}\n                            />\n                        }\n                        onDelete={e => {\n                            const filteredProjects = listProjects.filter(\n                                ({ id }) => {\n                                    return id !== project.id;\n                                }\n                            );\n\n                            return onChangeProject(e, filteredProjects);\n                        }}\n                    />\n                ))\n            }\n            value={selectedProjects}\n            options={projects}\n            onChange={onChangeProject}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <StyledTextField {...params} label=\"Project name\" />\n            )}\n        />\n    );\n}\n\nexport default ProjectSelector;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ userList, setFilter, selectedUser }) {\n    const onChangeUser = (e, value) => {\n        setFilter(\"selectedUsers\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                value={selectedUser}\n                options={userList}\n                onChange={onChangeUser}\n                filterSelectedOptions\n                getOptionSelected={getOptionSelected}\n                getOptionLabel={getOptionLabel}\n                renderInput={params => (\n                    <StyledTextField {...params} label=\"Team members\" />\n                )}\n            />\n        </>\n    );\n}\n\nexport default ProjectSelector;\n","import moment from \"moment\";\nimport {\n    MONDAY,\n    SUNDAY,\n    FULL_DATE_FORMAT,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getWeekNumber = date => moment(date, FULL_DATE_FORMAT).isoWeek();\n\nexport const getFromDate = weekNumber =>\n    moment().isoWeek(weekNumber).isoWeekday(MONDAY).format(FULL_DATE_FORMAT);\n\nexport const getToDate = weekNumber => {\n    const date = moment().isoWeek(weekNumber).isoWeekday(SUNDAY);\n    return date.format(FULL_DATE_FORMAT);\n};\n\nexport const formatToString = momentDate =>\n    moment(momentDate).format(FULL_DATE_FORMAT);\n\nexport const getMomentInstance = date =>\n    date ? moment(date, FULL_DATE_FORMAT) : null;\n\nexport const checkIfWeekSelected = (fromDate, toDate) => {\n    const fromDateWeekNumber = getWeekNumber(fromDate);\n    const toDateWeekNumber = getWeekNumber(toDate);\n    if (fromDateWeekNumber === toDateWeekNumber) {\n        const startOfWeek = getMomentInstance(fromDate).startOf(\"isoWeek\");\n        const endOfWeek = getMomentInstance(fromDate).endOf(\"isoWeek\");\n        return (\n            getMomentInstance(fromDate).isSame(startOfWeek, \"day\") &&\n            getMomentInstance(toDate).isSame(endOfWeek, \"day\")\n        );\n    }\n    return false;\n};\n\nexport const getLogsParams = (fromDate, toDate, users, projects, weeks) => {\n    return {\n        from_date: fromDate,\n        to_date: toDate,\n        users: users.map(item => item.id),\n        projects: projects.map(item => item.id),\n        weeks,\n    };\n};\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()} h ${\n        moment.duration(time).minutes()\n            ? moment.duration(time).minutes() + \" m\"\n            : \"\"\n    }`;\n};\n\nexport const getLastWeek = () => moment().endOf(\"year\").isoWeeks();\n\nexport const getType = status =>\n    status === \"approved\"\n        ? \"success\"\n        : status === \"declined\"\n        ? \"error\"\n        : \"default\";\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { TextField } from \"@material-ui/core\";\n\n// Styles\nimport { getLastWeek } from \"utils/managerReportsUtils\";\n\nconst ALL_WEEKS = Array.from({ length: getLastWeek() }).map((empty, index) =>\n    String(index + 1)\n);\n\nfunction WeekSelector({ setFilter, selectedWeeks }) {\n    const onChangeWeeks = (e, value) => {\n        setFilter(\"selectedWeeks\", value);\n    };\n\n    const getOptionSelected = (option, value) =>\n        Number(option) === Number(value);\n\n    const getOptionLabel = option => option;\n\n    return (\n        <Autocomplete\n            multiple\n            value={selectedWeeks}\n            options={ALL_WEEKS}\n            onChange={onChangeWeeks}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n\nexport default WeekSelector;\n","// Core\nimport React from \"react\";\n// UI\nimport { StyledTextField } from \"../UserSelector/style\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\n// Styles\n\nexport const WORK_ITEM_STATUSES = [\"in review\", \"approved\", \"declined\"];\n\nfunction StatusSelector({ setFilter, selectedWorkItemStatus }) {\n    const onChange = (e, value) => {\n        setFilter(\"selectedWorkItemStatus\", value);\n    };\n\n    const getOptionSelected = (option, value) => option === value;\n    const getOptionLabel = option => `${option}`;\n\n    return (\n        <Autocomplete\n            multiple\n            value={selectedWorkItemStatus}\n            options={WORK_ITEM_STATUSES}\n            onChange={onChange}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <StyledTextField {...params} label=\"Work item status\" />\n            )}\n        />\n    );\n}\n\nexport default StatusSelector;\n","// core\nimport React from \"react\";\n\n// UI\nimport DateRangePicker from \"../DateRangePicker\";\nimport ProjectSelector from \"../ProjectSelector\";\nimport UserSelector from \"../UserSelector\";\nimport WeekSelector from \"../WeekSelector\";\nimport StatusSelector from \"../StatusSelector\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nfunction FilterSelectorPanel({\n    setFilter,\n    projectList,\n    userList,\n    fromDate,\n    toDate,\n    selectedWeeks,\n    selectedProjects,\n    selectedUsers,\n    selectedWorkItemStatus,\n    setErrorDates,\n}) {\n    return (\n        <Box display=\"flex\" alignItems=\"flex-end\" flexWrap=\"wrap\" mt={5}>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <DateRangePicker\n                        setFilter={setFilter}\n                        fromDate={fromDate}\n                        toDate={toDate}\n                        setErrorDates={setErrorDates}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <WeekSelector\n                        setFilter={setFilter}\n                        selectedWeeks={selectedWeeks}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={4} md={4} lg={4}>\n                <Box mx={3} mt={3}>\n                    <ProjectSelector\n                        projects={projectList}\n                        setFilter={setFilter}\n                        selectedProjects={selectedProjects}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={4} md={4} lg={4}>\n                <Box mx={3} mt={3}>\n                    <UserSelector\n                        selectedUsers={selectedUsers}\n                        userList={userList}\n                        setFilter={setFilter}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={4} md={4} lg={4}>\n                <Box mx={3} mt={3}>\n                    <StatusSelector\n                        selectedWorkItemStatus={selectedWorkItemStatus}\n                        setFilter={setFilter}\n                    />\n                </Box>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default FilterSelectorPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nexport const StyledChip = styled(({ type, ...restProps }) => (\n    <Chip {...restProps} />\n))`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { StyledChip } from \"./style.js\";\n\nfunction Chip(props) {\n    return <StyledChip {...props} />;\n}\n\nexport default Chip;\n","export const TABLE_HEADERS = [\n    \"Date\",\n    \"Week\",\n    \"Developer\",\n    \"Project name\",\n    \"Description\",\n    \"Work time\",\n    \"Last generated\",\n    \"Status\",\n];\n\nexport const STATUS_OPTIONS = [\n    {\n        value: \"approved\",\n        label: \"Approve\",\n    },\n    {\n        value: \"declined\",\n        label: \"Decline\",\n    },\n];\n\nexport const STATUS_COLORS = {\n    approved: \"success\",\n    declined: \"error\",\n};\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { TableHead, TableBody, Table, Box } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport ColoredName from \"components/ColoredName\";\nimport Chip from \"components/Chip\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/managerReports\";\n\n// Utils\nimport { formatTimeDuration, getType } from \"utils/managerReportsUtils\";\n\nexport default function LogReportTable({ logList, onEdit }) {\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell noWrap key={item}>\n                            {item}\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {logList.length ? (\n                    logList.map(log => (\n                        <TableRow\n                            hover\n                            key={`log-${log.id}`}\n                            onClick={() =>\n                                onEdit({\n                                    ...log,\n                                    project_id: log?.project_id?.id,\n                                })\n                            }\n                        >\n                            <TableCell noWrap>\n                                {moment(log.date, \"DD-MM-YYYY\").format(\n                                    \"DD.MM.YYYY\"\n                                )}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {moment(log.date, \"DD-MM-YYYY\").isoWeek()}\n                            </TableCell>\n                            <TableCell>{`${log.user_id.firstname} ${log.user_id.lastname}`}</TableCell>\n                            <TableCell>\n                                <ColoredName\n                                    text={log.project_id.name}\n                                    fontSize={14}\n                                    color={log.project_id.color}\n                                />\n                            </TableCell>\n                            <TableCell>{log.descriptions}</TableCell>\n                            <TableCell noWrap>\n                                {formatTimeDuration(log.total)}\n                            </TableCell>\n                            <TableCell>\n                                {log.last_generated\n                                    ? moment(\n                                          log.last_generated,\n                                          \"YYYY-MM-DD HH:mm:ss\"\n                                      ).calendar()\n                                    : \"-\"}\n                            </TableCell>\n                            <TableCell>\n                                <Chip\n                                    type={getType(log.status)}\n                                    label={log.status}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <Box p={3} component=\"td\">\n                            {\"Empty\"}\n                        </Box>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import styled from \"styled-components\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nexport const StyledIcon = styled(GetAppIcon)`\n    && {\n        font-size: ${({ size }) => size};\n    }\n    color: ${({ disabled, theme }) =>\n        disabled ? theme.palette.grey[300] : theme.palette.info.main};\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledIcon } from \"./styles\";\n\nfunction DownloadButton({ handleClick, children, disabled }) {\n    return (\n        <Button\n            disabled={disabled}\n            onClick={handleClick}\n            startIcon={<StyledIcon disabled={disabled} />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default DownloadButton;\n","import styled from \"styled-components\";\nimport { Paper, Box } from \"@material-ui/core\";\n\nexport const StyledPaper = styled(Paper)`\n    overflow: scroll;\n`;\n\nexport const ColoredStatus = styled(Box)(\n    ({\n        status,\n        theme: {\n            palette: {\n                primary: { main },\n                success: { main: mainSuccess },\n                error: { main: mainError },\n            },\n        },\n    }) => `\n color: ${\n     status === \"approved\"\n         ? mainSuccess\n         : status === \"declined\"\n         ? mainError\n         : main\n }`\n);\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\n// UI\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n// Constants\nimport { TIME_FORMAT } from \"constants/dateFormats\";\n\nexport default function Developers({\n    value,\n    id,\n    label,\n    onChange,\n    error,\n    setTouched,\n    fullWidth = false,\n}) {\n    const handleChange = momentTime => {\n        onChange(id, momentTime);\n        setTouched(id);\n    };\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardTimePicker\n                    fullWidth={fullWidth}\n                    ampm={false}\n                    id={id}\n                    error={!!error}\n                    label={label}\n                    value={moment(value, TIME_FORMAT)}\n                    onChange={handleChange}\n                    helperText={error}\n                />\n            </MuiPickersUtilsProvider>\n        </>\n    );\n}\n","import styled from \"styled-components\";\nimport { FormControl } from \"@material-ui/core\";\n\nexport const StyledFormControl = styled(FormControl)`\n    min-width: 140px;\n    width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\n// Styles\nimport { StyledFormControl } from \"./styles\";\n\nfunction createOptions(data, opts) {\n    return data.map(item => ({\n        value: item[opts.value],\n        label: item[opts.label],\n    }));\n}\n\nexport default function Selector({\n    onChange,\n    data,\n    name,\n    id,\n    value,\n    labelKey,\n    valueKey,\n    placeholder,\n    error,\n    fullWidth = false,\n}) {\n    const [options] = React.useState(\n        createOptions(data, { label: labelKey, value: valueKey })\n    );\n\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <StyledFormControl fullWidth={fullWidth}>\n            <InputLabel error={Boolean(error)}>{placeholder}</InputLabel>\n            <Select value={value || \"\"} onChange={handleChange}>\n                {options.map(item => (\n                    <MenuItem key={`${id}-${item.value}`} value={item.value}>\n                        {item.label}\n                    </MenuItem>\n                ))}\n            </Select>\n        </StyledFormControl>\n    );\n}\n","// core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function LogInfoHeader({ workingDay, selectedWeek }) {\n    return (\n        <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box flex={1} display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\" noWrap>\n                    <b>Working day:</b>\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        noWrap\n                        paragraph\n                    >\n                        {workingDay}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box flex={1} display=\"flex\" pl={1}>\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    <b>Week: </b>\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        paragraph\n                    >\n                        {selectedWeek}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => {\n    return {\n        root: {\n            \"& .MuiGrid-root\": {\n                marginBottom: theme.spacing(2),\n            },\n            \"& .MuiFormLabel-root\": {\n                zIndex: 0,\n            },\n        },\n    };\n});\n\nexport default useStyles;\n","import moment from \"moment\";\nimport {\n    FULL_DATE_FORMAT,\n    TIME_FORMAT,\n    MONDAY,\n    SUNDAY,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => ({\n    date: initialData\n        ? moment(initialData.date, FULL_DATE_FORMAT).format(FULL_DATE_FORMAT)\n        : \"\",\n    descriptions: initialData ? initialData.descriptions : \"\",\n    from_time: initialData\n        ? moment(initialData[\"from_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    to_time: initialData\n        ? moment(initialData[\"to_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    project_id: initialData ? initialData[\"project_id\"] : 0,\n    log_type_id: initialData ? initialData[\"log_type_id\"] : 0,\n    work_type: initialData ? initialData[\"work_type\"] : \"\",\n});\n\nexport const getTotalTime = durations => {\n    if (!durations.length) return \"0\";\n    const totalDurations = durations\n        .slice(1)\n        .reduce(\n            (prev, cur) => moment.duration(cur.total).add(prev),\n            moment.duration(durations[0].total)\n        );\n\n    const hours = Math.floor(totalDurations.clone().asHours());\n    const minutes = Math.floor(totalDurations.clone().minutes());\n    if (!hours) {\n        return `${minutes} minutes`;\n    }\n    return `${hours}h ${minutes}m`;\n};\n\nexport const getParametersForLogs = selectedWeek => ({\n    from_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(MONDAY)\n        .format(FULL_DATE_FORMAT),\n    to_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(SUNDAY)\n        .format(FULL_DATE_FORMAT),\n});\n\nexport const getStartOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).startOf(\"isoWeek\");\n\nexport const getEndOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).endOf(\"isoWeek\");\n\nexport const getMonthNameByWeek = weekNumber =>\n    moment().set(\"month\", moment().isoWeek(weekNumber).month()).format(\"MMMM\");\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()}h ${moment\n        .duration(time)\n        .minutes()}m`;\n};\n","export const TABLE_HEADERS = [\n    \"№\",\n    \"Date\",\n    \"Project Name\",\n    \"Type\",\n    \"From time\",\n    \"To time\",\n    \"Work Time\",\n    \"Status\",\n];\n\nexport const validationErrorMessages = {\n    timeInterval: \"Time interval is invalid\",\n    project: \"Project field is required\",\n    log: \"Log type is required\",\n    descriptions: \"Description field is required\",\n};\n\nexport const WORK_TYPES = [\n    { label: \"None\", value: null },\n    { label: \"Change request\", value: \"change\", color: \"blue\" },\n    { label: \"Bug\", value: \"bug\", color: \"red\" },\n];\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TimePicker from \"components/TimePicker\";\nimport FormDialog from \"components/FormDialog\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport Selector from \"../Selector\";\nimport LogInfoHeader from \"../LogInfoHeader\";\n// Styles\nimport useStyles from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developerReportUtils\";\n\n// Constants\nimport { validationErrorMessages, WORK_TYPES } from \"constants/developerReport\";\nimport { FULL_DATE_FORMAT, TIME_FORMAT } from \"constants/dateFormats\";\n\nfunction validateTimeRange(from, to) {\n    return moment(from, TIME_FORMAT).isBefore(moment(to, TIME_FORMAT));\n}\n\nfunction validate(values) {\n    const errors = {};\n    if (!validateTimeRange(values.from_time, values.to_time)) {\n        errors.from_time = validationErrorMessages.timeInterval;\n        errors.to_time = validationErrorMessages.timeInterval;\n    }\n    if (!values.project_id) {\n        errors.project_id = validationErrorMessages.project;\n    }\n    if (!values.log_type_id) {\n        errors.log_type_id = validationErrorMessages.log;\n    }\n    if (!values.descriptions) {\n        errors.descriptions = validationErrorMessages.descriptions;\n    }\n    return errors;\n}\n\nexport default function WorkItemAddEditForm({\n    open,\n    handleClose,\n    projects,\n    logTypes,\n    submitForm,\n    initialData,\n    deleteLog,\n    selectedDay,\n    selectedWeek,\n}) {\n    const classes = useStyles();\n\n    const initialValues = getInitialFormValues(initialData);\n\n    if (!initialData) {\n        initialValues.date = moment(selectedDay).format(FULL_DATE_FORMAT);\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validate,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        onSubmit: (data, { resetForm }) => {\n            submitForm(getInitialFormValues(data), initialData?.id).then(() =>\n                resetForm(getInitialFormValues())\n            );\n        },\n    });\n\n    const handleDeleteLog = async () => {\n        await deleteLog(initialData.id);\n        handleClose();\n    };\n\n    const onSetTouched = id => {\n        formik.setTouched({\n            ...formik.touched,\n            [id]: true,\n        });\n    };\n\n    const workingDay = moment(formik.values.date, FULL_DATE_FORMAT).format(\n        \"DD MMMM\"\n    );\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        handleClose();\n    };\n\n    return (\n        <FormDialog open={open} handleClose={handleClose} title=\"Work Item:\">\n            <LogInfoHeader\n                workingDay={workingDay}\n                selectedWeek={selectedWeek}\n            />\n            <form autoComplete=\"off\">\n                <Grid container className={classes.root}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6} md={6}>\n                            <TimePicker\n                                fullWidth\n                                id=\"from_time\"\n                                label=\"Start time *\"\n                                error={\n                                    formik.touched.to_time &&\n                                    formik.touched.from_time &&\n                                    formik.errors.from_time\n                                }\n                                value={formik.values[\"from_time\"]}\n                                onChange={formik.setFieldValue}\n                                setTouched={onSetTouched}\n                            />\n                        </Grid>\n                        <Grid item xs={6} md={6}>\n                            <TimePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"to_time\"\n                                error={\n                                    formik.touched.to_time &&\n                                    formik.touched.from_time &&\n                                    formik.errors.to_time\n                                }\n                                label=\"End time *\"\n                                value={formik.values[\"to_time\"]}\n                                onChange={formik.setFieldValue}\n                                setTouched={onSetTouched}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <Selector\n                                fullWidth\n                                data={logTypes}\n                                placeholder=\"Log type *\"\n                                labelKey=\"type\"\n                                valueKey=\"id\"\n                                error={formik.errors.log_type_id}\n                                onChange={formik.setFieldValue}\n                                id=\"log_type_id\"\n                                value={formik.values[\"log_type_id\"]}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Selector\n                                fullWidth\n                                placeholder=\"Project name *\"\n                                data={projects}\n                                labelKey=\"name\"\n                                valueKey=\"id\"\n                                error={formik.errors.project_id}\n                                onChange={formik.setFieldValue}\n                                id=\"project_id\"\n                                value={formik.values[\"project_id\"]}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <Selector\n                                fullWidth\n                                data={WORK_TYPES}\n                                placeholder=\"Work type\"\n                                labelKey=\"label\"\n                                valueKey=\"value\"\n                                onChange={formik.setFieldValue}\n                                id=\"work_type\"\n                                value={formik.values[\"work_type\"]}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        error={!!formik.errors.descriptions}\n                        fullWidth\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && deleteLog && (\n                        <DialogActionButton\n                            onClick={handleDeleteLog}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onCancel} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </form>\n        </FormDialog>\n    );\n}\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport FilterSelectorPanel from \"./FilterSelectorPanel\";\nimport { Container, Box } from \"@material-ui/core\";\nimport LogTableReports from \"./LogReportTable\";\nimport ReportPagination from \"components/ReportPagination\";\nimport DownloadButton from \"components/DownloadButton\";\n\n// Store\nimport { useStores } from \"store\";\n\n// Utils\nimport { getWeekNumber, formatToString } from \"utils/managerReportsUtils\";\n\n// Styles\nimport { StyledPaper } from \"./style\";\nimport WorkItemAddEditForm from \"../../../components/WorkItemAddEditForm\";\n\n// TODO: add year logic\nconst getSelectedWeeksWithYear = selectedWeeks =>\n    selectedWeeks.map(week => `${week},2020`);\n\nfunction useStore() {\n    const { logStore, exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        setEmptyLogs: logStore.setEmptyLogs,\n        projectList: logStore.projectList,\n        userList: logStore.userList,\n        onGetLogs: logStore.onGetLogs,\n        onGetProjectList: logStore.onGetProjectList,\n        onGetUserList: logStore.onGetUserList,\n        onUpdateLogStatus: logStore.onUpdateLogStatus,\n        onDownload: exportStore.onDownload,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setInitialPagination: paginationStore.setInitialValues,\n        logTypes: logStore.logTypes,\n        onGetDeclinedLogs: logStore.onGetDeclinedLogs,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onUpdateLog: logStore.onUpdateLog,\n    }));\n}\n\nexport default function ManagerReports() {\n    const {\n        logs,\n        projectList,\n        onGetLogs,\n        userList,\n        page,\n        perPage,\n        onDownload,\n        onGetUserList,\n        onGetLogTypes,\n        onGetProjectList,\n        setInitialPagination,\n        setEmptyLogs,\n        logTypes,\n        onUpdateLog,\n    } = useStore();\n\n    const currentWeek = getWeekNumber(new Date());\n\n    const [editedWorkItem, setToEditWorkItem] = useState(null);\n    const [selectedWeeks, setSelectedWeeks] = useState([currentWeek]);\n    const [fromDate, setFromDate] = useState(null);\n    const [toDate, setToDate] = useState(null);\n    const [selectedProjects, setSelectedProjects] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [selectedWorkItemStatus, setSelectedWorkItemStatus] = useState([]);\n    const [errorFromDate, setErrorFromDate] = useState(false);\n    const [errorToDate, setErrorToDate] = useState(false);\n\n    const onErrorDates = (type, value) => {\n        const setValue = {\n            dateFrom: () => setErrorFromDate(value),\n            dateTo: () => setErrorToDate(value),\n        };\n\n        setValue[type]();\n    };\n    useEffect(() => {\n        onGetLogs({\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n            weeks: getSelectedWeeksWithYear(selectedWeeks),\n            page,\n            per_page: perPage,\n            status: selectedWorkItemStatus,\n        });\n    }, [\n        onGetLogs,\n        page,\n        perPage,\n        selectedProjects,\n        selectedUsers,\n        selectedWeeks,\n        setEmptyLogs,\n        selectedWorkItemStatus,\n    ]);\n\n    useEffect(() => {\n        if (selectedWeeks.length) {\n            setFromDate(null);\n            setToDate(null);\n        }\n    }, [selectedWeeks]);\n\n    useEffect(() => {\n        if (fromDate && toDate) {\n            if (!errorFromDate && !errorToDate) {\n                onGetLogs({\n                    users: selectedUsers.map(item => item.id),\n                    from_date: formatToString(fromDate),\n                    to_date: formatToString(toDate),\n                    projects: selectedProjects.map(item => item.id),\n                    page,\n                    per_page: perPage,\n                    status: selectedWorkItemStatus,\n                });\n            }\n        }\n    }, [\n        fromDate,\n        toDate,\n        errorFromDate,\n        errorToDate,\n        onGetLogs,\n        selectedUsers,\n        selectedProjects,\n        page,\n        perPage,\n        selectedWorkItemStatus,\n    ]);\n\n    const onFilterChange = useCallback(\n        (type, value) => {\n            setInitialPagination();\n            const setValueTypes = {\n                fromDate: () => {\n                    setFromDate(value);\n                    setSelectedWeeks([]);\n                },\n                toDate: () => {\n                    setToDate(value);\n                    setSelectedWeeks([]);\n                },\n                selectedWeeks: () => setSelectedWeeks(value),\n                selectedProjects: () => setSelectedProjects(value),\n                selectedUsers: () => setSelectedUsers(value),\n                selectedWorkItemStatus: () => setSelectedWorkItemStatus(value),\n            };\n\n            setValueTypes[type]();\n        },\n        [setInitialPagination]\n    );\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n        onGetLogTypes();\n\n        return setEmptyLogs;\n    }, [onGetProjectList, onGetUserList, setEmptyLogs, onGetLogTypes]);\n\n    const submitUpdatedLog = async (...param) => {\n        await onUpdateLog(...param);\n        setToEditWorkItem(null);\n    };\n\n    const onDownloadFile = () => {\n        onDownload({\n            from_date: fromDate ? formatToString(fromDate) : null,\n            to_date: toDate ? formatToString(toDate) : null,\n            weeks: getSelectedWeeksWithYear(selectedWeeks),\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n            status: selectedWorkItemStatus,\n        });\n    };\n\n    return (\n        <Container>\n            <FilterSelectorPanel\n                fromDate={fromDate}\n                toDate={toDate}\n                selectedWeeks={selectedWeeks}\n                selectedProjects={selectedProjects}\n                selectedUsers={selectedUsers}\n                setFilter={onFilterChange}\n                projectList={projectList}\n                selectedWorkItemStatus={selectedWorkItemStatus}\n                logs={logs}\n                setErrorDates={onErrorDates}\n                userList={userList}\n            />\n            <Box mt={4} mb={5}>\n                <Box display=\"flex\" my={3}>\n                    {\n                        <DownloadButton\n                            disabled={logs.length === 0}\n                            handleClick={onDownloadFile}\n                        >\n                            Export\n                        </DownloadButton>\n                    }\n                </Box>\n                <StyledPaper>\n                    <LogTableReports\n                        logList={logs}\n                        onEdit={setToEditWorkItem}\n                    />\n                    {logs?.length > 0 && <ReportPagination />}\n                </StyledPaper>\n            </Box>\n            <WorkItemAddEditForm\n                open={!!editedWorkItem}\n                handleClose={() => setToEditWorkItem(null)}\n                projects={projectList}\n                logTypes={logTypes}\n                submitForm={submitUpdatedLog}\n                deleteLog={null}\n                initialData={editedWorkItem}\n                selectedDay={null}\n                selectedWeek={null}\n            />\n        </Container>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\n\n// UI\nimport { Container, Tabs, Tab } from \"@material-ui/core\";\n\n// Compopnents\nimport ReportHistory from \"./ReportsHistory\";\nimport Reports from \"./Reports\";\n\nconst TABS = [\n    { id: \"report\", title: \"Report\", Component: Reports },\n    { id: \"report-history\", title: \"Report history\", Component: ReportHistory },\n];\n\nexport default function ReportsPage() {\n    const [selectedTab, setValue] = useState(0);\n\n    const handleChange = (event, index) => {\n        setValue(index);\n    };\n\n    const CurrentPage = TABS[selectedTab].Component;\n\n    return (\n        <>\n            <Tabs\n                value={selectedTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                {TABS.map(({ id, title }) => (\n                    <Tab key={id} label={title} />\n                ))}\n            </Tabs>\n            <Container>\n                <CurrentPage />\n            </Container>\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport ReportHistoryTable from \"./ReportHistoryTable\";\nimport ReportPagination from \"components/ReportPagination\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// store\nimport { useStores } from \"store\";\nfunction useStore() {\n    const { exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        historyItems: exportStore.historyItems,\n        onGetHistoryItems: exportStore.onGetHistoryItems,\n        projectList: exportStore.projectList,\n        onGetProjectList: exportStore.onGetProjectList,\n        userList: exportStore.userList,\n        onGetUserList: exportStore.onGetUserList,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        onDownload: exportStore.onDownload,\n    }));\n}\n\nexport default function ReportHistory() {\n    const {\n        onGetHistoryItems,\n        historyItems,\n        onGetProjectList,\n        projectList,\n        onGetUserList,\n        userList,\n        page,\n        perPage,\n        onDownload,\n    } = useStore();\n\n    React.useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n    }, [onGetProjectList, onGetUserList]);\n\n    React.useEffect(() => {\n        onGetHistoryItems({\n            page,\n            per_page: perPage,\n        });\n    }, [onGetHistoryItems, page, perPage]);\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Export history</Typography>\n            </Box>\n            <Box my={3}>\n                <StyledPaper>\n                    <ReportHistoryTable\n                        userList={userList}\n                        projectList={projectList}\n                        historyItems={historyItems}\n                        onDownload={onDownload}\n                    />\n                    {historyItems?.length > 0 && <ReportPagination />}\n                </StyledPaper>\n            </Box>\n        </Container>\n    );\n}\n","export const TABLE_HEADERS = [\n    { name: \"Created\", isDisabled: false },\n    { name: \"Updated\", isDisabled: false },\n    { name: \"Project name\", isDisabled: false },\n    { name: \"Developers\", isDisabled: true },\n    { name: \"Type\", isDisabled: false },\n    { name: \"Total time spend\", isDisabled: true },\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    alias: \"\",\n    name: \"\",\n    descriptions: \"\",\n    users: [],\n    type: \"\",\n    color: null,\n};\n","import moment from \"moment\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/projects\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatTime = time => {\n    const durationMin = moment.duration(time).asMinutes();\n    return durationMin < HOUR_IN_MINUTES\n        ? `${durationMin}m`\n        : `${moment.duration(time).hours()}h ${moment\n              .duration(time)\n              .minutes()}m`;\n};\n\nexport const getDate = date => moment(date).format(\"DD.MM.YYYY\");\n\nexport const getTime = date => moment(date).format(\"hh:mm\");\n","import styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TableContainer } from \"@material-ui/core\";\n\nexport const StyledSup = styled.sup`\n    padding-left: ${({ theme }) => theme.spacing(1)}px;\n    color: ${({ theme }) => theme.palette.text.secondary};\n`;\n\nexport const StyledAvatar = styled(Avatar)``;\n\nexport const StyledTableContainer = styled(TableContainer)`\n    & .MuiAvatar-root {\n        background-color: ${({ theme }) => theme.palette.logo};\n        cursor: pointer;\n        width: ${({ theme }) => theme.spacing(4)}px;\n        height: ${({ theme }) => theme.spacing(4)}px;\n        ${({ theme }) => theme.typography.body1}\n        text-transform: uppercase;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Typography,\n    Tooltip,\n    Box,\n    TableSortLabel,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport { AvatarGroup } from \"@material-ui/lab\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/projects\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\nimport ColoredName from \"components/ColoredName\";\n\n// Utils\nimport { getDate, getTime } from \"utils/projectUtils\";\nimport { formatFromSeconds } from \"utils/developersUtils\";\nimport { getUserAvatar } from \"utils/developersUtils\";\n\n// Styles\nimport { StyledAvatar, StyledTableContainer } from \"./style\";\n\nexport default function ({ projectList, setEditingProjectData, sort, onSort }) {\n    return (\n        <StyledTableContainer>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(({ name, isDisabled }) => (\n                            <TableCell key={name}>\n                                <TableSortLabel\n                                    disabled={isDisabled}\n                                    active={sort.field === name}\n                                    direction={sort.type || \"asc\"}\n                                    onClick={onSort(name)}\n                                >\n                                    {name}\n                                </TableSortLabel>\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projectList.length ? (\n                        projectList.map(project => (\n                            <TableRow\n                                hover\n                                key={project.id}\n                                onClick={() => setEditingProjectData(project)}\n                                disabled={\"inactive\" === project?.status}\n                            >\n                                <TableCell>\n                                    <Typography variant=\"caption\">\n                                        {getDate(project.created_at)}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography\n                                        variant=\"caption\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {getTime(project.updated_at)}\n                                    </Typography>{\" \"}\n                                    <Typography variant=\"caption\">\n                                        {getDate(project.updated_at)}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <ColoredName\n                                        color={project.color}\n                                        size={15}\n                                        text={project.name}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <AvatarGroup>\n                                        {project.users.map(user => (\n                                            <Tooltip\n                                                title={`${user.firstname} ${user.lastname}`}\n                                                placement=\"top\"\n                                                key={`title-${user.firstname} ${user.lastname}`}\n                                            >\n                                                <StyledAvatar\n                                                    src={getUserAvatar(\n                                                        user.avatar\n                                                    )}\n                                                    key={`avatar-${user.firstname} ${user.lastname}`}\n                                                >\n                                                    {`${\n                                                        user?.firstname[0] || \"\"\n                                                    }${\n                                                        user?.lastname[0] || \"\"\n                                                    }`}\n                                                </StyledAvatar>\n                                            </Tooltip>\n                                        ))}\n                                    </AvatarGroup>\n                                </TableCell>\n                                <TableCell>{project.type}</TableCell>\n                                <StyledTableCell>\n                                    {formatFromSeconds(project.total_log)}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box p={3} component=\"td\">\n                                {\"Empty\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </StyledTableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserMultiSelect({ userList, onChange, values, id }) {\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    const handleChange = (e, data) => {\n        onChange(\n            id,\n            data.map(item => item.id)\n        );\n    };\n\n    const getSelectedOptions = () => {\n        const idSet = new Set(values);\n        return userList.filter(item => idSet.has(item.id));\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={userList}\n                getOptionLabel={getOptionLabel}\n                value={getSelectedOptions()}\n                filterSelectedOptions\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select developers\"\n                    />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n    Typography,\n} from \"@material-ui/core\";\n\nfunction TypeSelector({ value, projectTypes, onChange, error }) {\n    return (\n        <RadioGroup label=\"Type\" name=\"type\" value={value} onChange={onChange}>\n            <FormLabel error={!!error}>\n                <Typography variant=\"body2\">{\"Type *\"}</Typography>\n            </FormLabel>\n            <Grid container wrap=\"nowrap\">\n                {projectTypes.map(item => (\n                    <FormControlLabel\n                        key={`project-type-${item}`}\n                        value={item}\n                        control={<Radio error={error} color={\"primary\"} />}\n                        label={item}\n                    />\n                ))}\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default TypeSelector;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n`;\n\nexport const ListItems = styled.div(\n    ({ isActive, color }) => `\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      background: ${color || \"#FAF7F7\"};\n      border-width: 2px;\n      border: 4px solid ${isActive ? \"#747474\" : \"#fff\"};\n      box-sizing: border-box;\n      cursor: pointer;\n      transition: all linear 0.2s;\n`\n);\n\nexport const CustomPicker = styled.div`\n    img {\n        cursor: pointer;\n    }\n`;\n\nexport const CustomPickerInput = styled.input`\n    position: absolute;\n    width: 0;\n    height: 0;\n    opacity: 0;\n    left: 50%;\n    bottom: 0;\n`;\n","// Core\nimport React, { useCallback } from \"react\";\nimport throttle from \"lodash.throttle\";\n\n// Styles\nimport { Wrapper, ListItems, CustomPickerInput, CustomPicker } from \"./styles\";\n\n// Icons\nimport paint from \"./paint.svg\";\n\nconst defaultColors = [\n    null,\n    \"#2196F3\",\n    \"#f44336\",\n    \"#9C27B0\",\n    \"#3F51B5\",\n    \"#4CAF50\",\n    \"#FFEB3B\",\n    \"#FFC107\",\n    \"#FF5722\",\n    \"#795548\",\n];\n\nconst ColorPicker = ({\n    colors = [...defaultColors],\n    onChange,\n    activeColor,\n}) => {\n    const onChangeThrottle = throttle(val => {\n        onChange(val);\n    }, 200);\n\n    const onChangeColor = useCallback(\n        e => {\n            onChangeThrottle(e.currentTarget.value);\n        },\n        [onChangeThrottle]\n    );\n\n    let customColors = colors.concat([]);\n\n    if (typeof activeColor === \"string\" && !colors.includes(activeColor)) {\n        customColors.pop();\n\n        customColors.push(activeColor);\n    }\n\n    return (\n        <Wrapper>\n            {customColors.map(color => (\n                <ListItems\n                    isActive={activeColor === color}\n                    key={color}\n                    color={color}\n                    onClick={() => onChange(color)}\n                />\n            ))}\n            <CustomPicker>\n                <label htmlFor=\"colorPicker\">\n                    <img\n                        src={paint}\n                        width={30}\n                        height={30}\n                        alt=\"color picker icon\"\n                    />\n                </label>\n                <CustomPickerInput\n                    id=\"colorPicker\"\n                    type=\"color\"\n                    value={activeColor || \"#000\"}\n                    onChange={onChangeColor}\n                />\n            </CustomPicker>\n        </Wrapper>\n    );\n};\n\nexport default ColorPicker;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { string, object, mixed } from \"yup\";\n\n// UI\nimport { TextField, Grid, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport UserMultiSelect from \"../UserMultiSelect\";\nimport TypeSelector from \"../TypeSelector\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport ColorPicker from \"components/ColorPicker\";\n\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/projectUtils\";\n\n// Constants\n\nlet schema = object().shape({\n    alias: string().required(),\n    name: string().required(),\n    descriptions: string().required(),\n    type: string().required(),\n    color: mixed(object(), string()),\n});\n\nexport default function LogForm({\n    open,\n    onClose,\n    userList,\n    projectTypes,\n    handleSubmit,\n    initialData,\n    handleDeleteProject,\n    onGetProjectUserList,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validationSchema: schema,\n        onSubmit: (data, { resetForm }) => {\n            handleSubmit(data, initialData?.id).then(() => {\n                resetForm(getInitialFormValues());\n            });\n        },\n    });\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        onClose();\n    };\n\n    const onColorChange = useCallback(\n        val => formik.setFieldValue(\"color\", val),\n        [formik]\n    );\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project:\">\n            <StyledGridContainer>\n                <Grid container spacing={2}>\n                    <Grid item md={6} xs={12}>\n                        <Box>\n                            <TextField\n                                required\n                                fullWidth\n                                error={!!formik.errors.name}\n                                id=\"name\"\n                                label=\"Project name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.name}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <Box>\n                            <TextField\n                                required\n                                fullWidth\n                                error={!!formik.errors.alias}\n                                id=\"alias\"\n                                label=\"Alias\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.alias}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        required\n                        error={!!formik.errors.descriptions}\n                        id=\"descriptions\"\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        fullWidth\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <UserMultiSelect\n                        onChange={formik.setFieldValue}\n                        onGetProjectUserList={onGetProjectUserList}\n                        values={formik.values.users}\n                        userList={userList}\n                        id={\"users\"}\n                    />\n                </Grid>\n                <Grid container>\n                    <TypeSelector\n                        value={formik.values.type}\n                        error={formik.errors.type}\n                        projectTypes={projectTypes}\n                        onChange={formik.handleChange}\n                    />\n                </Grid>\n                <Grid>\n                    <ColorPicker\n                        activeColor={formik.values.color}\n                        onChange={onColorChange}\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={() => handleDeleteProject(initialData?.id)}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onCancel} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </StyledGridContainer>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nfunction getWeeksOptions(weeksCount) {\n    return Array.from({ length: weeksCount }).map((_, index) =>\n        String(index + 1)\n    );\n}\n\nexport default function ({ setWeek, selectedWeek }) {\n    const currentWeek = moment().week();\n\n    const [weeksOptions] = useState(getWeeksOptions(currentWeek));\n\n    const changeWeek = (e, value) => {\n        setWeek(value);\n    };\n\n    const value = selectedWeek && String(selectedWeek);\n\n    return (\n        <Autocomplete\n            value={value}\n            options={weeksOptions}\n            onChange={changeWeek}\n            closeIcon={null}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(\n    ({ isActive, hasLogs, isRejected, ...otherProps }) => (\n        <Button {...otherProps} />\n    )\n)`\n    margin-right: ${({ theme }) => theme.spacing(1)}px;\n    margin-bottom: ${({ theme }) => theme.spacing(1)}px;\n    background-color: ${({ isActive, hasLogs, theme, isRejected }) => {\n        if (isActive) return theme.palette.primary.main;\n        if (isRejected) return theme.palette.error.main;\n        if (hasLogs) return theme.palette.success.main;\n        return \"transparent\";\n    }};\n    color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.text.primary;\n        if (hasLogs) return theme.palette.text.secondary;\n        return theme.palette.text.secondary;\n    }};\n    border: ${({ isActive }) =>\n        `2px solid ${isActive ? \"#37394799\" : \"transparent\"}`};\n    box-sizing: border-box;\n\n    &:hover {\n        border: 2px solid #37394799;\n    }\n`;\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DAY_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledButton } from \"./styles\";\n\n// Utils\nimport { getMonthNameByWeek } from \"utils/developerReportUtils\";\n\nfunction checkLogDate(logs, date) {\n    return logs.some(item =>\n        moment(item.date, FULL_DATE_FORMAT).isSame(\n            moment(date, FULL_DATE_FORMAT),\n            \"day\"\n        )\n    );\n}\n\nexport default function ({\n    selectedWeek,\n    logs,\n    setDay,\n    selectedDay,\n    declinedLogs,\n}) {\n    const [weekDates, setWeekDates] = useState([]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setWeekDates([]);\n            return;\n        }\n        const getWeekDates = weekNumber => {\n            return Array.from({ length: 7 }).map((_, index) =>\n                moment()\n                    .isoWeek(weekNumber)\n                    .isoWeekday(index + 1)\n            );\n        };\n\n        setWeekDates(getWeekDates(selectedWeek));\n    }, [selectedWeek]);\n\n    const isIncludeRejectedDay = useCallback(\n        weekDay => {\n            const formattedDate = weekDay.format(\"DD-MM-YYYY\");\n            return declinedLogs.find(({ date }) => formattedDate === date);\n        },\n        [declinedLogs]\n    );\n\n    const formatDate = day => moment(day).format(DAY_FORMAT);\n    const isActive = day => moment(day).isSame(selectedDay, \"day\");\n    return (\n        selectedWeek && (\n            <Box display=\"flex\" flexWrap=\"wrap\">\n                {weekDates.map(day => {\n                    const hasLogs = checkLogDate(logs, day);\n                    return (\n                        <StyledButton\n                            size=\"large\"\n                            onClick={() => setDay(day)}\n                            isActive={isActive(day)}\n                            hasLogs={hasLogs}\n                            isRejected={isIncludeRejectedDay(day)}\n                            variant=\"contained\"\n                            key={`date-${day}`}\n                        >\n                            {formatDate(day)}\n                        </StyledButton>\n                    );\n                })}\n                <Box width=\"100%\" ml={1}>\n                    <Typography variant=\"subtitle1\">\n                        {getMonthNameByWeek(selectedWeek)}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableCell, TableContainer } from \"@material-ui/core\";\n\nexport const StyledTableCell = styled(({ status, ...otherProps }) => (\n    <TableCell {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n\nexport const StyledTableContainer = styled(TableContainer)`\n    tr > th:first-child,\n    tr > td:first-child {\n        padding: 16px 3px;\n        text-align: center;\n    }\n    tr > th:last-child,\n    tr > td:last-child {\n        width: 70px;\n    }\n    tr > td:last-child {\n        text-align: center;\n    }\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport Chip from \"components/Chip\";\nimport StyledPaper from \"components/StyledPaper\";\nimport ColoredName from \"components/ColoredName\";\n\n// Constants\nimport { TABLE_HEADERS, WORK_TYPES } from \"constants/developerReport\";\nimport { FULL_DATE_SHORT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Utils\nimport { getTotalTime, formatTimeDuration } from \"utils/developerReportUtils\";\nimport { getType } from \"utils/managerReportsUtils\";\n\n// Styles\nimport { StyledTableCell, StyledTableContainer } from \"./style\";\n\nexport default function ({\n    logList,\n    handleEditLog,\n    selectedDay,\n    selectedWeek,\n    projects,\n    logTypes,\n    setTotalWeekTime,\n    setTotalDayTime,\n}) {\n    const [filteredLogs, setFilteredLogs] = React.useState([]);\n\n    React.useEffect(() => {\n        let logs = logList;\n        if (selectedDay) {\n            logs = logList.filter(item =>\n                moment(item.date, FULL_DATE_FORMAT).isSame(\n                    moment(selectedDay),\n                    \"day\"\n                )\n            );\n        }\n        if (!selectedWeek) {\n            logs = [];\n        }\n        setFilteredLogs(logs);\n    }, [logList, selectedDay, selectedWeek]);\n\n    React.useEffect(() => {\n        setTotalWeekTime(getTotalTime(logList));\n    }, [logList, setTotalWeekTime]);\n\n    React.useEffect(() => {\n        setTotalDayTime(getTotalTime(filteredLogs));\n    }, [filteredLogs, setTotalDayTime]);\n\n    const editLog = log => {\n        const validLog = { ...log, project_id: log.project_id?.id };\n\n        handleEditLog(validLog);\n    };\n\n    const getLogTypeEnum = id => logTypes.find(item => item.id === id)?.type;\n    const getWorkTypeLabel = value =>\n        value ? WORK_TYPES.find(item => item.value === value)?.label : \"\";\n\n    return (\n        <StyledTableContainer component={StyledPaper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {filteredLogs.length\n                        ? filteredLogs.map((log, i) => (\n                              <TableRow\n                                  hover\n                                  key={log.id}\n                                  onClick={() => editLog(log)}\n                              >\n                                  <TableCell>{i + 1}</TableCell>\n                                  <TableCell>\n                                      {moment(\n                                          log.date,\n                                          FULL_DATE_FORMAT\n                                      ).format(FULL_DATE_SHORT)}\n                                  </TableCell>\n                                  <TableCell>\n                                      <ColoredName\n                                          text={log.project_id?.name}\n                                          color={log.project_id?.color}\n                                          fontSize={16}\n                                      />{\" \"}\n                                  </TableCell>\n                                  <TableCell>\n                                      {getLogTypeEnum(log.log_type_id)}{\" \"}\n                                      {log.work_type && (\n                                          <Typography variant=\"caption\">{`(${getWorkTypeLabel(\n                                              log.work_type\n                                          )})`}</Typography>\n                                      )}\n                                  </TableCell>\n                                  <TableCell>{log.from_time}</TableCell>\n                                  <TableCell>{log.to_time}</TableCell>\n                                  <TableCell>\n                                      {formatTimeDuration(log.total)}\n                                  </TableCell>\n                                  <StyledTableCell>\n                                      <Chip\n                                          type={getType(log.status)}\n                                          label={log.status}\n                                      />\n                                  </StyledTableCell>\n                              </TableRow>\n                          ))\n                        : null}\n                </TableBody>\n            </Table>\n            {!filteredLogs.length && (\n                <Typography variant=\"subtitle1\">\n                    <Box p={2}>{\"You don't have any logs\"}</Box>\n                </Typography>\n            )}\n        </StyledTableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\n// Utils\nimport { getStartOfWeek, getEndOfWeek } from \"utils/developerReportUtils\";\n\n// constants\nimport { DATE_AND_MONTH } from \"constants/dateFormats\";\n\nexport default function TotalTimeInfo({\n    totalDayTime,\n    totalWeekTime,\n    selectedWeek,\n}) {\n    return (\n        <>\n            {selectedWeek && (\n                <Box display=\"flex\">\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            <b>{\"From \"}</b>\n                            {getStartOfWeek(selectedWeek).format(\n                                DATE_AND_MONTH\n                            )}\n                            <b>{\" to \"}</b>\n                            {getEndOfWeek(selectedWeek).format(DATE_AND_MONTH)}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    <b>Total week work time:</b>\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalWeekTime}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    <b>Total day work time:</b>\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalDayTime}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n}\n","import { Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transform-origin: bottom left;\n    padding: 20px;\n    width: 90%;\n    max-width: 320px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\n\nexport const StyledProjectName = styled.b`\n    color: ${({ color = \"#000\" }) => color};\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Typography, CardContent, Box } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledProjectName } from \"./styles\";\n\nconst messages = {\n    created: \"created project\",\n    updated: \"updated project\",\n    deleted: \"deleted project\",\n    added_user_to_project: \" added user to project\",\n    deleted_user_to_project: \" deleted user from project\",\n};\n\nfunction ProjectCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <StyledProjectName\n                    color={item.entity.color}\n                >{` ${item.entity.name}`}</StyledProjectName>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                {item.entity.descriptions}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Type: {item.entity.type}</i>\n            </Typography>\n            {item.event === \"created\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Created at:{\" \"}\n                        {moment(item.entity.created_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n            {item.event === \"updated\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Updated at:{\" \"}\n                        {moment(item.entity.updated_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n        </Box>\n    );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useObserver } from \"mobx-react\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\nimport { formatFromSeconds } from \"utils/developersUtils\";\nimport { useStores } from \"store\";\n\nconst messages = {\n    created: \" created log on the project \",\n    updated: \" updated log on the project \",\n    deleted: \" deleted log on the project \",\n};\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logTypes: logStore.logTypes,\n    }));\n}\n\nfunction LogCard({ item }) {\n    const { logTypes } = useStore();\n\n    const logType = logTypes.find(({ id }) => item.entity?.log_type_id === id);\n\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <b>{item.entity.project.name}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                {` ${item.entity.descriptions}`}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <b>{`From ${item.entity.from_time} to ${item.entity.to_time}; `}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <b>{`Total time: ${formatFromSeconds(item.entity.total)} `}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Status: {item.entity.status}</i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Log type: {logType?.type}</i>\n            </Typography>\n            {item.event === \"created\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Created at:{\" \"}\n                        {moment(item.entity.created_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n            {item.event === \"updated\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Updated at:{\" \"}\n                        {moment(item.entity.updated_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n        </Box>\n    );\n}\n\nexport default LogCard;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" created work item type \",\n    updated: \" updated work item type \",\n    deleted: \" deleted work item type \",\n};\n\nfunction LogTypeCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <b>{item.entity.type}</b>\n            </Typography>\n            {item.event === \"created\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Created at:{\" \"}\n                        {moment(item.entity.created_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n            {item.event === \"updated\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Updated at:{\" \"}\n                        {moment(item.entity.updated_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n        </Box>\n    );\n}\n\nexport default LogTypeCard;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" created user \",\n    updated: \" updated user \",\n    deleted: \" deleted user \",\n};\n\nfunction UserCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item?.author?.firstname} ${item?.author?.lastname} `}</b>\n                {messages[item.event]}\n                <b>{`${item?.entity?.firstname} ${item?.entity?.lastname} `}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                {`${item?.entity?.email}`}\n            </Typography>\n            {item.event === \"created\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Created at:{\" \"}\n                        {moment(item.entity.created_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n            {item.event === \"updated\" && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Updated at:{\" \"}\n                        {moment(item.entity.updated_at).format(\n                            `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                        )}\n                    </i>\n                </Typography>\n            )}\n        </Box>\n    );\n}\n\nexport default UserCard;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" exported report\",\n    updated: \" updated report on the project \",\n    deleted: \" deleted report on the project \",\n};\n\nfunction ExportHistoryCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n            </Typography>\n            {item.entity.filter?.week && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>Weeks: {item.entity.filter?.week?.join(\", \")}</i>\n                </Typography>\n            )}\n            {item.entity.filter?.from_date && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Date:{\" \"}\n                        {`from ${item.entity.filter?.from_date} to ${item.entity.filter?.to_date}`}\n                    </i>\n                </Typography>\n            )}\n            {item.entity.filter?.users && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>User id: {item.entity.filter?.users.join(\", \")}</i>\n                </Typography>\n            )}\n            {item.entity.filter?.projects && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>Project id: {item.entity.filter?.projects.join(\", \")}</i>\n                </Typography>\n            )}\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default ExportHistoryCard;\n","import React from \"react\";\nimport ProjectCard from \"../ProjectCard\";\nimport LogCard from \"../LogCard\";\nimport LogTypeCard from \"../LogTypeCard\";\nimport UserCard from \"../UserCard\";\nimport ExportHistoryCard from \"../ExportHistoryCard\";\n\nfunction ActivityBlock({ item }) {\n    const getCard = type => {\n        switch (type) {\n            case \"Project\":\n                return <ProjectCard item={item} />;\n            case \"Log\":\n                return <LogCard item={item} />;\n            case \"LogType\":\n                return <LogTypeCard item={item} />;\n            case \"User\":\n                return <UserCard item={item} />;\n            case \"ExportHistory\":\n                return <ExportHistoryCard item={item} />;\n            default:\n                return type;\n        }\n    };\n\n    return getCard(item.model);\n}\n\nexport default ActivityBlock;\n","import React, { Fragment } from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport ActivityBlock from \"../ActivityBlock\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\n\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nfunction ActivitiesList({ activities, date }) {\n    const getIcon = type => {\n        switch (true) {\n            case type.includes(\"user\"):\n                return <PermIdentityIcon />;\n            case type.includes(\"export\"):\n                return <GetAppIcon />;\n            case type.includes(\"project\"):\n                return <BusinessCenterIcon />;\n            case type.includes(\"system\"):\n                return <SettingsIcon />;\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <Timeline align=\"alternate\">\n            <Typography\n                variant=\"h5\"\n                align=\"center\"\n                display=\"block\"\n                gutterBottom\n            >\n                {date}\n            </Typography>\n            {activities.map(type => (\n                <Fragment key={`fragment-${type.title}`}>\n                    <TimelineItem>\n                        <TimelineSeparator>\n                            <TimelineDot>{getIcon(type.title)}</TimelineDot>\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            {type.data.map((item, i) => {\n                                return (\n                                    <Fragment\n                                        key={`activity-frag-${item.tree_id}-${i}`}\n                                    >\n                                        <Divider\n                                            key={`activity-dot-${item.tree_id}-${i}`}\n                                        />\n                                        <ActivityBlock\n                                            key={`activity-item-${item.tree_id}-${i}`}\n                                            item={item}\n                                        />\n                                    </Fragment>\n                                );\n                            })}\n                        </TimelineContent>\n                    </TimelineItem>\n                </Fragment>\n            ))}\n        </Timeline>\n    );\n}\n\nexport default ActivitiesList;\n","import styled from \"styled-components\";\nimport { Popper, Button } from \"@material-ui/core\";\nexport const StyledPopper = styled(Popper)`\n    z-index: 1;\n`;\n\nexport const StyledButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\n// Styles\nimport { StyledButton } from \"./style\";\n\n// Constants\nimport { STATUS_COLORS } from \"constants/managerReports\";\n\nexport default function LogStatusHandler({ id, onUpdateLogStatus }) {\n    const getColor = status => STATUS_COLORS[status];\n\n    return (\n        <>\n            <ButtonGroup size=\"small\" variant=\"contained\">\n                <StyledButton\n                    disableElevation\n                    type={getColor(\"approved\")}\n                    onClick={() =>\n                        onUpdateLogStatus({\n                            id,\n                            status: \"approved\",\n                        })\n                    }\n                >\n                    approve\n                </StyledButton>\n                <StyledButton\n                    disableElevation\n                    type={getColor(\"declined\")}\n                    onClick={() =>\n                        onUpdateLogStatus({\n                            id,\n                            status: \"declined\",\n                        })\n                    }\n                >\n                    decline\n                </StyledButton>\n            </ButtonGroup>\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// UI\nimport Card from \"@material-ui/core/Card\";\nimport { Typography } from \"@material-ui/core\";\nimport TextAreaAutosize from \"@material-ui/core/TextareaAutosize\";\n\n// Components\nimport ColoredName from \"components/ColoredName\";\n\nexport const StyledItemCard = styled(Card)`\n    & .MuiAvatar-root {\n        width: 60px;\n        height: 60px;\n    }\n    & b {\n        font-size: 14px;\n    }\n`;\n\nexport const StyledTextArea = styled(({ error, ...props }) => (\n    <TextAreaAutosize {...props} />\n))`\n    padding: 18.5px 14px;\n    border-radius: 8px;\n    font: inherit;\n    font-size: 16px;\n    color: currentColor;\n    width: 100%;\n    border: 0;\n    height: 1.1876em;\n    margin: 0;\n    display: block;\n    background: none;\n    letter-spacing: inherit;\n    border: 1px solid\n        ${({ theme, error }) =>\n            error ? theme.palette.error.main : \"rgb(228 228 228)\"};\n    outline: none;\n    resize: none;\n    :focus {\n        border: 1px solid ${({ theme }) => theme.palette.primary.main};\n    }\n`;\n\nexport const StyledTypography = styled(Typography)`\n    font-size: 20px;\n    color: ${({ colortype = \"#000\" }) => colortype};\n`;\n\nexport const StyledColoredName = styled(ColoredName)`\n    display: inline-flex;\n    vertical-align: text-bottom;\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\nimport { object, string } from \"yup\";\n\n// UI\nimport { Box, Typography, Paper, Tooltip } from \"@material-ui/core\";\nimport UserAvatar from \"../../../components/UserAvatar\";\nimport LogStatusHandler from \"../LogStatusHandler\";\n\n// Constants\nimport { FULL_DATE_FORMAT, DATE_FORMAT } from \"constants/dateFormats\";\nimport { validationErrorMessages, WORK_TYPES } from \"constants/developerReport\";\n\n// Utils\nimport { formatTimeDuration, getType } from \"utils/managerReportsUtils\";\nimport { getUserAvatar } from \"utils/developersUtils\";\n\n// Styles\nimport { StyledTextArea, StyledTypography, StyledColoredName } from \"./style\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AvTimerIcon from \"@material-ui/icons/AvTimer\";\nimport Chip from \"../../../components/Chip\";\n\nlet schema = object().shape({\n    descriptions: string().required(),\n});\n\nconst localFixAvatar = avatar => (avatar ? `/uploads${avatar}` : null);\nconst getWorkTypeLabel = value =>\n    value ? WORK_TYPES.find(item => item.value === value) : {};\n\nfunction InReviewItems({\n    onUpdateLog,\n    onEdit,\n    onUpdateLogStatus,\n    logTypes,\n    user_id,\n    project_id,\n    log_type_id,\n    date,\n    total,\n    descriptions,\n    status,\n    id,\n    from_time,\n    to_time,\n    disabled,\n    onShowHistory,\n    work_type,\n}) {\n    const getLogType = id => {\n        return logTypes.find(item => item.id === id)?.type;\n    };\n\n    function validate(values) {\n        const errors = {};\n        if (!values.descriptions) {\n            errors.descriptions = validationErrorMessages.descriptions;\n        }\n        return errors;\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            date,\n            descriptions,\n            from_time,\n            to_time,\n            project_id: project_id?.id,\n            log_type_id,\n            work_type,\n        },\n        validate,\n        validationSchema: schema,\n        validateOnChange: false,\n        enableReinitialize: true,\n        onSubmit: (data, { resetForm }) => {\n            if (descriptions === data.descriptions) return;\n            onUpdateLog(data, id);\n        },\n    });\n\n    const onUpdateStatus = async (...param) => {\n        const errors = await formik.validateForm();\n        if (Object.keys(errors).length) return;\n\n        await formik.submitForm();\n        onUpdateLogStatus(...param);\n    };\n\n    const workType = getWorkTypeLabel(work_type);\n\n    return (\n        <>\n            <Box\n                position=\"relative\"\n                display=\"flex\"\n                flexWrap=\"wrap\"\n                component={Paper}\n                marginBottom=\"10px\"\n                variant=\"outlined\"\n                py={1}\n                px={1}\n                borderRadius={8}\n            >\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"center\"\n                    width={200}\n                    overflow=\"hidden\"\n                    whiteSpace=\"nowrap\"\n                    textOverflow=\"ellipsis\"\n                    px={2}\n                    mb={2}\n                >\n                    <UserAvatar\n                        size={100}\n                        firstName={user_id.firstname}\n                        lastName={user_id.lastname}\n                        avatar={getUserAvatar(localFixAvatar(user_id.avatar))}\n                    />\n\n                    <Box\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        px={2}\n                        mb={2}\n                        width=\"100%\"\n                        display=\"flex\"\n                    >\n                        <Typography variant=\"h6\" noWrap py={2}>\n                            {`${user_id.firstname} ${user_id.lastname}`}\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Chip type={getType(status)} label={status} />\n                    </Box>\n                </Box>\n\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    px={2}\n                    mb={2}\n                >\n                    <StyledTypography component={\"span\"} align=\"left\" noWrap>\n                        <b>{`Project: `}</b>\n                        <StyledColoredName\n                            text={project_id.name}\n                            fontSize={20}\n                            color={project_id.color}\n                        />\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Log type: `}</b>\n                        {getLogType(log_type_id)}{\" \"}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Week: `}</b>\n                        {moment(date, FULL_DATE_FORMAT).isoWeek()}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Day: `}</b>\n                        {moment(date, FULL_DATE_FORMAT).format(DATE_FORMAT)}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Time spent: `}</b>\n                        {formatTimeDuration(total)}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`From `}</b>\n                        {from_time}\n                        <b>{` to `}</b>\n                        {to_time}\n                    </StyledTypography>\n                    {workType?.value && (\n                        <StyledTypography\n                            align=\"left\"\n                            noWrap\n                            colortype={workType?.color}\n                        >\n                            <b>{getWorkTypeLabel(work_type)?.label}</b>\n                        </StyledTypography>\n                    )}\n                </Box>\n\n                <Box\n                    flex={4}\n                    px={2}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent={\n                        status === \"declined\" ? \"flex-start\" : \"space-between\"\n                    }\n                    minWidth=\"200px\"\n                >\n                    <Box\n                        position=\"relative\"\n                        right=\"20px\"\n                        top=\"0\"\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                    >\n                        <Tooltip title=\"Edit\" placement=\"top\">\n                            <IconButton onClick={onEdit}>\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n\n                        <Tooltip title=\"History\" placement=\"top\">\n                            <IconButton onClick={onShowHistory}>\n                                <AvTimerIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n\n                    <StyledTextArea\n                        disabled={disabled}\n                        id=\"descriptions\"\n                        onChange={function (e) {\n                            formik.setFieldValue(\n                                \"descriptions\",\n                                e.currentTarget.value\n                            );\n                        }}\n                        defaultValue={formik.values.descriptions}\n                        error={!!formik.errors.descriptions}\n                    />\n                    <Box\n                        pt={3}\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"flex-end\"\n                        width=\"100%\"\n                        flexWrap=\"wrap\"\n                    >\n                        {!disabled && (\n                            <>\n                                <Box>\n                                    <LogStatusHandler\n                                        id={id}\n                                        onUpdateLogStatus={onUpdateStatus}\n                                    />\n                                </Box>\n                            </>\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n}\n\nexport default InReviewItems;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ListItem } from \"@material-ui/core\";\n\nexport const StyledListItem = styled(({ active, ...restProps }) => (\n    <ListItem {...restProps} />\n))`\n    justify-content: space-between;\n    background-color: ${({ active, theme }) =>\n        active ? theme?.palette?.info.light : \"transparent\"};\n    cursor: pointer;\n    &:hover {\n        color: white;\n        background-color: ${({ theme }) => theme?.palette?.info.light};\n    }\n`;\n","// Core\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { Box, IconButton, TextField, Divider } from \"@material-ui/core\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\n//style\n\nimport { StyledListItem } from \"./style\";\n\nfunction LogSettingsForm({ logTypes, onSubmit }) {\n    const [editingType, setEditingType] = useState(null);\n\n    const formik = useFormik({\n        initialValues: {\n            type: editingType?.type || \"\",\n        },\n        enableReinitialize: true,\n        onSubmit: async (data, { resetForm }) => {\n            try {\n                editingType?.id\n                    ? await onSubmit(\"update\", data, editingType.id)\n                    : await onSubmit(\"create\", data);\n            } finally {\n                setEditingType(null);\n                resetForm();\n            }\n        },\n    });\n\n    const onCancel = () => {\n        setEditingType(null);\n        formik.resetForm({ type: \"\" });\n    };\n\n    const onDelete = id => {\n        onSubmit(\"delete\", {}, id);\n    };\n\n    return (\n        <Box>\n            <form>\n                <Box px={1} pt={2}>\n                    <TextField\n                        id=\"type\"\n                        value={formik.values.type}\n                        error={formik.errors.descriptions}\n                        fullWidth\n                        size=\"small\"\n                        onChange={formik.handleChange}\n                        label={editingType ? \"Edit log type\" : \"New log type\"}\n                        variant=\"outlined\"\n                    />\n                </Box>\n                <Box\n                    p={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                >\n                    <DialogActionButton\n                        onClick={onCancel}\n                        type=\"primary\"\n                        size=\"small\"\n                    >\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        variant=\"contained\"\n                        disabled={formik.values.type.length < 2}\n                        type=\"success\"\n                        size=\"small\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </Box>\n            </form>\n            <Divider />\n            {logTypes.map(item => (\n                <StyledListItem\n                    key={`list-item-${item.id}`}\n                    active={editingType?.id === item.id}\n                >\n                    {item.type}\n                    <Box key={`box-${item.id}`}>\n                        <IconButton\n                            size=\"small\"\n                            key={`editButton-${item.id}`}\n                            onClick={() => setEditingType(item)}\n                        >\n                            <EditOutlinedIcon\n                                key={`icon-edit--${item.id}`}\n                                color=\"primary\"\n                            />\n                        </IconButton>\n                        <IconButton\n                            key={`deleteButton-${item.id}`}\n                            size=\"small\"\n                            onClick={() => onDelete(item.id)}\n                        >\n                            <DeleteOutlineIcon\n                                key={`icon-delete-${item.id}`}\n                                color=\"secondary\"\n                            />\n                        </IconButton>\n                    </Box>\n                </StyledListItem>\n            ))}\n            <Divider />\n        </Box>\n    );\n}\n\nexport default LogSettingsForm;\n","import styled from \"styled-components\";\nimport { IconButton } from \"@material-ui/core\";\n\nexport const StyledIconButton = styled(IconButton)`\n    position: absolute;\n    right: 20px;\n    top: 20px;\n`;\n","// Core\nimport React from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport LogSettingsForm from \"./LogSettingsForm\";\nimport FormDialog from \"components/FormDialog\";\nimport Close from \"@material-ui/icons/Close\";\n\n// Styles\nimport { StyledIconButton } from \"./styles\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logTypes: logStore.logTypes,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onCreateLogType: logStore.onCreateLogType,\n        onUpdateLogType: logStore.onUpdateLogType,\n        onDeleteLogType: logStore.onDeleteLogType,\n    }));\n}\n\nexport default function Settings({ isOpen, onClose }) {\n    const {\n        logTypes,\n        onCreateLogType,\n        onUpdateLogType,\n        onDeleteLogType,\n    } = useStore();\n\n    const onSubmit = async (type, data, id) => {\n        const submit = {\n            create: () => onCreateLogType(data),\n            update: () => onUpdateLogType(data, id),\n            delete: () => onDeleteLogType(id),\n        };\n        await submit[type]();\n    };\n\n    return (\n        <FormDialog\n            open={isOpen}\n            handleClose={onClose}\n            title=\"Add log type\"\n            scroll=\"paper\"\n        >\n            <StyledIconButton onClick={onClose} type=\"primary\" size=\"small\">\n                <Close />\n            </StyledIconButton>\n            <LogSettingsForm logTypes={logTypes} onSubmit={onSubmit} />\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\n\nimport FormDialog from \"components/FormDialog\";\n\nexport const StyledFormDialog = styled(FormDialog)`\n    & .MuiPaper-root,\n    .MuiDialogContent-root {\n        overflow: hidden;\n        min-height: 50vh;\n    }\n`;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// Store\nimport { useStores } from \"store\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ActivitiesList from \"../../Activity/ActivitiesList\";\n\nimport { StyledFormDialog } from \"./styles.js\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        isLoadingHistoryByLog: logStore.isLoadingHistoryByLog,\n        historyByLog: logStore.historyByLog,\n        nextDate: logStore.nextDate,\n        historyNextDate: logStore.historyNextDate,\n\n        getHistoryByLog: logStore.getHistoryByLog,\n        clearHistoryByLog: logStore.clearHistoryByLog,\n    }));\n}\n\nexport default ({ id, onClose }) => {\n    const {\n        historyByLog,\n        historyNextDate,\n        getHistoryByLog,\n        clearHistoryByLog,\n    } = useStore();\n\n    useEffect(() => {\n        if (!id) return;\n\n        getHistoryByLog(id);\n\n        return () => {\n            clearHistoryByLog();\n        };\n    }, [id, clearHistoryByLog, getHistoryByLog]);\n\n    return (\n        <StyledFormDialog\n            id=\"modal-log-history\"\n            open={!!id}\n            handleClose={onClose}\n            title=\"Work Log History\"\n        >\n            <div\n                id=\"scrollableDiv\"\n                style={{ height: \"54vh\", overflow: \"scroll\" }}\n            >\n                <InfiniteScroll\n                    dataLength={historyByLog?.length} //This is important field to render the next data\n                    next={() => {\n                        getHistoryByLog(id, { date: historyNextDate });\n                    }}\n                    hasMore={!!historyNextDate}\n                    loader={<p>Loading...</p>}\n                    scrollableTarget=\"scrollableDiv\"\n                    style={{ height: \"64vh\" }}\n                >\n                    {historyByLog.map((day, i) => (\n                        <ActivitiesList\n                            key={`date-${day.date}-${i}`}\n                            activities={day.activities}\n                            date={day.date}\n                        />\n                    ))}\n                </InfiniteScroll>\n            </div>\n        </StyledFormDialog>\n    );\n};\n","// Core\nimport styled from \"styled-components\";\n\nexport const StyledToolbar = styled.div`\n  position: absolute;\n  right: 10px;\n  top; 10px;\n`;\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Container, Box, Tooltip } from \"@material-ui/core\";\nimport InReviewItem from \"./InReviewItem\";\nimport ReportPagination from \"components/ReportPagination\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Settings from \"./Settings\";\nimport HistoryByLogModal from \"./HistoryByLogModal\";\n\n// Styles\nimport { StyledToolbar } from \"./styles\";\nimport WorkItemAddEditForm from \"../../components/WorkItemAddEditForm\";\nimport { formatToString, getWeekNumber } from \"../../utils/managerReportsUtils\";\nimport FilterSelectorPanel from \"../manager-reports/Reports/FilterSelectorPanel\";\n\nimport { WORK_ITEM_STATUSES } from \"../manager-reports/Reports/StatusSelector\";\n\nconst DISABLED_STATUS_VALUES = [\"approved\", \"declined\"];\n\nfunction useStore() {\n    const { logStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        logTypes: logStore.logTypes,\n        onGetLogs: logStore.onGetLogs,\n        onUpdateLog: logStore.onUpdateLog,\n        setEmptyLogs: logStore.setEmptyLogs,\n        onUpdateLogStatus: logStore.onUpdateLogStatus,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onGetProjectList: logStore.onGetProjectList,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        projectList: logStore.projectList,\n        onGetDeclinedLogs: logStore.onGetDeclinedLogs,\n        userList: logStore.userList,\n        onGetUserList: logStore.onGetUserList,\n        getHistoryByLog: logStore.getHistoryByLog,\n        clearHistoryByLog: logStore.clearHistoryByLog,\n        setInitialPagination: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function LogItems() {\n    const {\n        logs,\n        onGetLogs,\n        page,\n        perPage,\n        onGetLogTypes,\n        onGetProjectList,\n        logTypes,\n        onUpdateLog,\n        onUpdateLogStatus,\n        setEmptyLogs,\n        projectList,\n        userList,\n        onGetUserList,\n        setInitialPagination,\n    } = useStore();\n\n    const [editingLog, setLogToEdit] = useState(null);\n    const [isOpenModal, setModalVisible] = useState(false);\n    const currentWeek = getWeekNumber(new Date());\n\n    const [selectedWeeks, setSelectedWeeks] = useState([currentWeek]);\n    const [fromDate, setFromDate] = useState(null);\n    const [toDate, setToDate] = useState(null);\n    const [selectedProjects, setSelectedProjects] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [historyLogId, setHistoryLogId] = useState(null);\n    const [selectedWorkItemStatus, setSelectedWorkItemStatus] = useState([\n        WORK_ITEM_STATUSES[0],\n    ]);\n\n    const [errorFromDate, setErrorFromDate] = useState(false);\n    const [errorToDate, setErrorToDate] = useState(false);\n\n    const updateLogs = useCallback(() => {\n        const addYearToWeek = selectedWeeks.map(week => `${week},2020`);\n        onGetLogs({\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n            weeks: addYearToWeek,\n            page,\n            per_page: perPage,\n            status: selectedWorkItemStatus,\n        });\n    }, [\n        onGetLogs,\n        page,\n        perPage,\n        selectedWeeks,\n        selectedProjects,\n        selectedUsers,\n        selectedWorkItemStatus,\n    ]);\n\n    useEffect(() => {\n        return setEmptyLogs;\n    }, [setEmptyLogs]);\n\n    const updateLogStatus = async data => {\n        await onUpdateLogStatus(data);\n        updateLogs();\n    };\n\n    const onEditWorkItem = async (...param) => {\n        await onUpdateLog(...param);\n\n        updateLogs();\n\n        setLogToEdit(null);\n    };\n\n    const onErrorDates = (type, value) => {\n        const setValue = {\n            dateFrom: () => setErrorFromDate(value),\n            dateTo: () => setErrorToDate(value),\n        };\n\n        setValue[type]();\n    };\n    useEffect(() => {\n        // TODO: add year logic\n\n        updateLogs();\n    }, [updateLogs, setEmptyLogs]);\n\n    useEffect(() => {\n        if (selectedWeeks.length) {\n            setFromDate(null);\n            setToDate(null);\n        }\n    }, [selectedWeeks]);\n\n    useEffect(() => {\n        if (fromDate && toDate) {\n            if (!errorFromDate && !errorToDate) {\n                onGetLogs({\n                    users: selectedUsers.map(item => item.id),\n                    from_date: formatToString(fromDate),\n                    to_date: formatToString(toDate),\n                    projects: selectedProjects.map(item => item.id),\n                    page,\n                    per_page: perPage,\n                    status: selectedWorkItemStatus,\n                });\n            }\n        }\n    }, [\n        fromDate,\n        toDate,\n        errorFromDate,\n        errorToDate,\n        onGetLogs,\n        selectedUsers,\n        selectedProjects,\n        page,\n        perPage,\n        selectedWorkItemStatus,\n    ]);\n\n    const onFilterChange = useCallback(\n        (type, value) => {\n            setInitialPagination();\n            const setValueTypes = {\n                fromDate: () => {\n                    setFromDate(value);\n                    setSelectedWeeks([]);\n                },\n                toDate: () => {\n                    setToDate(value);\n                    setSelectedWeeks([]);\n                },\n                selectedWeeks: () => setSelectedWeeks(value),\n                selectedProjects: () => setSelectedProjects(value),\n                selectedUsers: () => setSelectedUsers(value),\n                selectedWorkItemStatus: () => setSelectedWorkItemStatus(value),\n            };\n\n            setValueTypes[type]();\n        },\n        [setInitialPagination]\n    );\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n        onGetLogTypes();\n\n        return setEmptyLogs;\n    }, [onGetProjectList, onGetUserList, setEmptyLogs, onGetLogTypes]);\n\n    return (\n        <Container position=\"relative\">\n            <StyledToolbar>\n                <Tooltip title=\"Add work item type\" placement=\"top\">\n                    <IconButton onClick={() => setModalVisible(true)}>\n                        <SettingsIcon />\n                    </IconButton>\n                </Tooltip>\n            </StyledToolbar>\n            <FilterSelectorPanel\n                fromDate={fromDate}\n                toDate={toDate}\n                selectedWeeks={selectedWeeks}\n                selectedProjects={selectedProjects}\n                selectedUsers={selectedUsers}\n                selectedWorkItemStatus={selectedWorkItemStatus}\n                setFilter={onFilterChange}\n                projectList={projectList}\n                logs={logs}\n                setErrorDates={onErrorDates}\n                userList={userList}\n            />\n            <Container>\n                <Box my={2} margin=\"auto\" width=\"90%\" maxWidth=\"900px\">\n                    {logs.map(item => (\n                        <InReviewItem\n                            {...item}\n                            key={`log-item-${item.id}-${item.descriptions}`}\n                            onUpdateLog={onUpdateLog}\n                            onUpdateLogStatus={updateLogStatus}\n                            logTypes={logTypes}\n                            disabled={DISABLED_STATUS_VALUES.includes(\n                                item.status\n                            )}\n                            onEdit={() =>\n                                setLogToEdit({\n                                    ...item,\n                                    project_id: item?.project_id?.id,\n                                })\n                            }\n                            onShowHistory={() => setHistoryLogId(item.id)}\n                        />\n                    ))}\n                    {logs?.length > 0 && <ReportPagination />}\n                    {!logs?.length && (\n                        <Box my={2} textAlign=\"center\">\n                            You don`t have any log items for review\n                        </Box>\n                    )}\n                </Box>\n            </Container>\n            <Settings\n                isOpen={isOpenModal}\n                onClose={() => setModalVisible(false)}\n            />\n            <WorkItemAddEditForm\n                open={!!editingLog}\n                handleClose={() => setLogToEdit(null)}\n                projects={projectList}\n                logTypes={logTypes}\n                submitForm={onEditWorkItem}\n                deleteLog={null}\n                initialData={editingLog}\n                selectedDay={null}\n                selectedWeek={null}\n            />\n            <HistoryByLogModal\n                id={historyLogId}\n                onClose={() => setHistoryLogId(null)}\n            />\n        </Container>\n    );\n}\n","export function authRequired({ me }) {\n    return !!me;\n}\n\nexport function unauthorizedOnly(prop) {\n    return !prop.me;\n}\n\nexport function roleAdmin({ me }) {\n    return me?.role === \"admin\";\n}\n\nexport function roleDev({ me }) {\n    return me?.role === \"dev\";\n}\n","// Pages\nimport Developers from \"../Pages/developers\";\nimport ManagerReports from \"../Pages/manager-reports\";\nimport Projects from \"../Pages/projects\";\nimport DeveloperReports from \"../Pages/developer-reports\";\nimport SignIn from \"../Pages/signin\";\nimport Home from \"../Pages/home\";\nimport ForgotPassword from \"../Pages/ForgotPassword\";\nimport ResetPassword from \"../Pages/ResetPassword\";\nimport Activity from \"../Pages/Activity\";\nimport LogItems from \"../Pages/LogItems\";\n\n// Rules\nimport { authRequired, unauthorizedOnly, roleAdmin, roleDev } from \"./rules\";\n\nexport default [\n    {\n        path: \"/\",\n        exact: true,\n        rules: [authRequired],\n        redirect: \"/signin\",\n        adminRedirect: roleAdmin,\n        devRedirect: roleDev,\n        component: Home,\n    },\n    {\n        path: \"/signin\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: SignIn,\n    },\n    {\n        path: \"/forgot-password\",\n        exact: true,\n        rules: [],\n        redirect: \"/\",\n        component: ForgotPassword,\n    },\n    {\n        path: \"/reset-password\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: ResetPassword,\n    },\n    {\n        path: \"/developer-reports\",\n        exact: true,\n        rules: [authRequired, roleDev],\n        redirect: \"/\",\n        component: DeveloperReports,\n    },\n    {\n        path: \"/manager-reports\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ManagerReports,\n    },\n    {\n        path: \"/projects\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Projects,\n    },\n    {\n        path: \"/developers\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Developers,\n    },\n    {\n        path: \"/activity\",\n        exact: true,\n        rules: [authRequired],\n        redirect: \"/\",\n        component: Activity,\n    },\n    {\n        path: \"/work-items\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: LogItems,\n    },\n];\n","// Core\nimport React from 'react'\n\nexport default function Home() {\n    return <div>best time tracker ever! ! !</div>\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\n\n// Store\nimport { useStores } from \"../../store\";\n\n// Styles\nimport { StyledContainer, StyledLink } from \"./styles\";\n\nfunction useAuthData() {\n    const {\n        authStore: { onLogin },\n    } = useStores();\n    return useObserver(() => ({\n        onLogin,\n    }));\n}\n\nexport default function SignIn() {\n    const [data, setForm] = useState({ email: \"\", password: \"\" });\n    const { onLogin } = useAuthData();\n\n    return (\n        <StyledContainer>\n            <form>\n                <Box display=\"flex\" flexDirection=\"column\" mb={1}>\n                    <Box mb={1} width=\"100%\">\n                        <TextField\n                            id=\"email-input\"\n                            label=\"Email\"\n                            fullWidth\n                            onChange={e =>\n                                setForm({ ...data, email: e.target.value })\n                            }\n                        />\n                    </Box>\n                    <Box mb={2}>\n                        <TextField\n                            id=\"password-input\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            onChange={e =>\n                                setForm({ ...data, password: e.target.value })\n                            }\n                        />\n                    </Box>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    justifyContent={\"space-between\"}\n                    alignItems={\"flex-end\"}\n                    mt={1}\n                >\n                    <Box>\n                        <StyledLink to={\"/forgot-password\"}>\n                            Forgot password\n                        </StyledLink>\n                    </Box>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onLogin(data);\n                        }}\n                    >\n                        Sign in\n                    </Button>\n                </Box>\n            </form>\n        </StyledContainer>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button, Typography } from \"@material-ui/core\";\nimport Link from \"components/Link\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onForgotPassword: authStore.onForgotPassword,\n    }));\n};\n\nexport default function ForgotPassword() {\n    const { onForgotPassword } = useStore();\n    const [success, setSuccess] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        onSubmit: async data => {\n            await onForgotPassword(data);\n            setSuccess(true);\n        },\n    });\n\n    if (success) {\n        return (\n            <Box p={4}>\n                <Typography variant=\"h6\">\n                    Follow link from your mailbox to reset password\n                </Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        onChange={formik.handleChange}\n                        defaultValue={formik.values.email}\n                    />\n                    <Box\n                        display=\"flex\"\n                        justifyContent={\"space-between\"}\n                        alignItems={\"flex-end\"}\n                        mt={3}\n                    >\n                        <Box>\n                            <Link to={\"/signin\"}>Sign in</Link>\n                        </Box>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\nimport { useLocation, Redirect } from \"react-router-dom\";\n\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onResetPassword: authStore.onResetPassword,\n    }));\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResetPassword() {\n    const { onResetPassword } = useStore();\n    const [toLogin, setToLogin] = useState(false);\n    const params = useQuery();\n\n    const formik = useFormik({\n        initialValues: {\n            token: params.get(\"token\"),\n            password: \"\",\n            password_confirmation: \"\",\n        },\n        onSubmit: async data => {\n            await onResetPassword(data);\n            setToLogin(true);\n        },\n    });\n    if (toLogin) {\n        return <Redirect to=\"/signin\" />;\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <Box display=\"flex\" flexDirection=\"column\" mb={2}>\n                        <Box mb={1}>\n                            <TextField\n                                id=\"password\"\n                                label=\"Password\"\n                                fullWidth\n                                onChange={formik.handleChange}\n                                type=\"password\"\n                                defaultValue={formik.values.password}\n                            />\n                        </Box>\n                        <Box mb={1}>\n                            <TextField\n                                id=\"password_confirmation\"\n                                label=\"Confirm password\"\n                                fullWidth\n                                onChange={formik.handleChange}\n                                type=\"password\"\n                                defaultValue={formik.values.confirmPassword}\n                            />\n                        </Box>\n                    </Box>\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} mt={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\n// UI\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport AddButton from \"components/AddButton\";\nimport WeekSelector from \"components/WeekSelector\";\nimport WeekDates from \"components/WeekDates\";\nimport ReportTable from \"Pages/developer-reports/ReportTable\";\nimport WorkItemAddEditForm from \"components/WorkItemAddEditForm\";\nimport TotalTimeInfo from \"./TotalTimeInfo\";\n\n// Utils\nimport { useStores } from \"../../store\";\nimport { getParametersForLogs } from \"utils/developerReportUtils\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        declinedLogs: logStore.declinedLogs,\n        logTypes: logStore.logTypes,\n        projectList: logStore.projectList,\n        onGetLogs: logStore.onGetLogs,\n        onGetDeclinedLogs: logStore.onGetDeclinedLogs,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onGetProjectList: logStore.onGetProjectList,\n        onAddLog: logStore.onAddLog,\n        onUpdateLog: logStore.onUpdateLog,\n        onDeleteLog: logStore.onDeleteLog,\n        setEmptyLogs: logStore.setEmptyLogs,\n    }));\n}\n\nexport default function Developers() {\n    const {\n        logs,\n        declinedLogs,\n        logTypes,\n        projectList,\n        onGetLogs,\n        onGetDeclinedLogs,\n        onGetProjectList,\n        onGetLogTypes,\n        onAddLog,\n        onUpdateLog,\n        onDeleteLog,\n        setEmptyLogs,\n    } = useStore();\n\n    const [selectedWeek, setWeek] = useState(moment().isoWeek());\n    const [selectedDay, setDay] = useState(moment(new Date()));\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [editingLog, setEditingLog] = useState();\n    const [totalWeekTime, setTotalWeekTime] = useState();\n    const [totalDayTime, setTotalDayTime] = useState();\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setEmptyLogs();\n            return;\n        }\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n            per_page: 1000,\n        });\n        onGetDeclinedLogs({\n            ...getParametersForLogs(selectedWeek),\n            per_page: 1000,\n        });\n    }, [onGetLogs, onGetDeclinedLogs, selectedWeek, setEmptyLogs]);\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetLogTypes();\n    }, [onGetLogTypes, onGetProjectList]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingLog(null);\n    };\n\n    const handleEditLog = log => {\n        setEditingLog(log);\n        showModal();\n    };\n\n    const handleSubmitForm = async (data, id) => {\n        editingLog ? await onUpdateLog(data, id) : await onAddLog(data);\n        closeModal();\n    };\n\n    const handleDeleteLog = async id => {\n        await onDeleteLog(id);\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n            per_page: 1000,\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container wrap=\"wrap\">\n                <Box width=\"10%\" m={2} minWidth={120}>\n                    <WeekSelector\n                        setWeek={setWeek}\n                        selectedWeek={selectedWeek}\n                    />\n                </Box>\n                <Box m={2}>\n                    <WeekDates\n                        selectedWeek={selectedWeek}\n                        selectedDay={selectedDay}\n                        setDay={setDay}\n                        logs={logs}\n                        declinedLogs={declinedLogs}\n                    />\n                </Box>\n                <Box\n                    m={2}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    width=\"100%\"\n                    flexWrap=\"wrap\"\n                >\n                    <Box>\n                        <AddButton handleClick={showModal}>\n                            Add work item\n                        </AddButton>\n                    </Box>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        alignItems=\"flex-end\"\n                    >\n                        <TotalTimeInfo\n                            totalDayTime={totalDayTime}\n                            totalWeekTime={totalWeekTime}\n                            selectedWeek={selectedWeek}\n                        />\n                    </Box>\n                </Box>\n                <Grid item xs={12}></Grid>\n                <ReportTable\n                    logList={logs}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    handleEditLog={handleEditLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                    setTotalWeekTime={setTotalWeekTime}\n                    setTotalDayTime={setTotalDayTime}\n                />\n                <WorkItemAddEditForm\n                    open={isModalVisible}\n                    handleClose={closeModal}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    submitForm={handleSubmitForm}\n                    deleteLog={handleDeleteLog}\n                    initialData={editingLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                />\n            </Grid>\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport CreateProjectForm from \"./CreateProjectForm\";\nimport AddButton from \"components/AddButton\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n// Styled\nimport { StyledGrid } from \"./styles\";\nimport ReportPagination from \"components/ReportPagination\";\n\nfunction useStore() {\n    const { projectStore, loadersStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        projectList: projectStore.projectList,\n        projectTypes: projectStore.projectTypes,\n        userList: projectStore.userList,\n        onGetProjectList: projectStore.onGetProjectList,\n        onGetUserList: projectStore.onGetUserList,\n        onCreateProject: projectStore.onCreateProject,\n        onUpdateProject: projectStore.onUpdateProject,\n        onDeleteProject: projectStore.onDeleteProject,\n        onGetProjectTypes: projectStore.onGetProjectTypes,\n        setEditingProjectData: projectStore.setEditingProjectData,\n        editingProjectData: projectStore.editingProjectData,\n        setLoadingPage: loadersStore.setLoadingPage,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [sort, setSort] = useState({ field: \"\", type: \"\" });\n\n    const {\n        projectList,\n        projectTypes,\n        userList,\n        onCreateProject,\n        onUpdateProject,\n        onGetProjectList,\n        onGetProjectTypes,\n        onGetUserList,\n        setEditingProjectData,\n        editingProjectData,\n        onDeleteProject,\n        page,\n        perPage,\n    } = useStore();\n\n    useEffect(() => {\n        onGetUserList();\n        onGetProjectTypes();\n    }, [onGetUserList, onGetProjectTypes]);\n\n    const updateProjects = useCallback(() => {\n        onGetProjectList({\n            page,\n            per_page: perPage,\n            sort,\n        });\n    }, [onGetProjectList, page, perPage, sort]);\n\n    useEffect(() => {\n        updateProjects();\n    }, [updateProjects]);\n\n    useEffect(() => {\n        if (editingProjectData) {\n            showModal();\n        }\n    }, [editingProjectData]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingProjectData();\n    };\n\n    const handleDeleteProject = async id => {\n        await onDeleteProject(id);\n        closeModal();\n    };\n\n    const onSubmitProject = async (data, id) => {\n        editingProjectData\n            ? await onUpdateProject(data, id)\n            : await onCreateProject(data);\n        updateProjects();\n        closeModal();\n    };\n\n    const onEditProject = data => {\n        setEditingProjectData(data);\n    };\n\n    const onSort = field => () => {\n        if (sort.type === \"desc\") {\n            return setSort({ field: \"\", type: \"\" });\n        }\n\n        return setSort({ field, type: sort.field ? \"desc\" : \"asc\" });\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Available projects:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>\n                        Create project\n                    </AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <StyledPaper>\n                            <ProjectsTable\n                                onSort={onSort}\n                                sort={sort}\n                                projectList={projectList}\n                                setEditingProjectData={onEditProject}\n                            />\n                            {projectList?.length > 0 && <ReportPagination />}\n                        </StyledPaper>\n                    </Box>\n                </Grid>\n            </Grid>\n            <CreateProjectForm\n                open={isModalVisible}\n                onClose={closeModal}\n                userList={userList}\n                projectTypes={projectTypes}\n                handleSubmit={onSubmitProject}\n                initialData={editingProjectData}\n                handleDeleteProject={handleDeleteProject}\n            />\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport DevelopersTable from \"./DevelopersTable\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport AddButton from \"components/AddButton\";\nimport ReportPagination from \"components/ReportPagination\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n//Styles\nimport { StyledGrid } from \"./styles\";\n\nfunction useStore() {\n    const { userStore, paginationStore, logStore } = useStores();\n\n    return useObserver(() => ({\n        userList: userStore.userList,\n        onGetUserList: userStore.onGetUserList,\n        setEditingUserData: userStore.setEditingUserData,\n        editingUserData: userStore.editingUserData,\n        onCreateUser: userStore.onCreateUser,\n        onUpdateUser: userStore.onUpdateUser,\n        onDeleteUser: userStore.onDeleteUser,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        onGetProjectList: logStore.onGetProjectList,\n        projectList: logStore.projectList,\n        onResendInvitationUser: userStore.onResendInvitationUser,\n        isResendingInvitation: userStore.isResendingInvitation,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        userList,\n        onGetUserList,\n        editingUserData,\n        setEditingUserData,\n        onCreateUser,\n        onUpdateUser,\n        onDeleteUser,\n        page,\n        perPage,\n        onGetProjectList,\n        projectList,\n        isResendingInvitation,\n        onResendInvitationUser,\n    } = useStore();\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingUserData();\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n    };\n\n    const handleDeleteUser = async id => {\n        await onDeleteUser(id);\n        closeModal();\n    };\n\n    const handleResendInvitation = user => {\n        onResendInvitationUser(user.id);\n        if (user.status === \"inactive\")\n            onUpdateUser({ ...user, status: \"active\" }, user.id);\n    };\n\n    useEffect(() => {\n        onGetProjectList();\n    }, [onGetProjectList]);\n\n    useEffect(() => {\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n    }, [onGetUserList, page, perPage]);\n\n    useEffect(() => {\n        if (editingUserData) {\n            showModal();\n        }\n    }, [editingUserData]);\n\n    const onSubmitUser = async (data, id) => {\n        editingUserData\n            ? await onUpdateUser(data, id)\n            : await onCreateUser(data);\n        await onGetProjectList();\n        await onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Team members:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>\n                        Add team member\n                    </AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <StyledPaper>\n                            <DevelopersTable\n                                developerList={userList}\n                                setEditingUserData={setEditingUserData}\n                                projectList={projectList}\n                            />\n                            <ReportPagination />\n                        </StyledPaper>\n                    </Box>\n                </Grid>\n            </Grid>\n            {userList.length && (\n                <CreateUserForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    handleSubmit={onSubmitUser}\n                    initialData={editingUserData}\n                    handleDeleteUser={handleDeleteUser}\n                    isResendingInvitation={isResendingInvitation}\n                    onReinviteUser={handleResendInvitation}\n                    projectList={projectList}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n// UI\nimport { Container, Box } from \"@material-ui/core\";\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\nimport ActivitiesList from \"./ActivitiesList\";\n\nfunction useStore() {\n    const { activityStore } = useStores();\n\n    return useObserver(() => ({\n        activities: activityStore.activities,\n        onGetActivities: activityStore.onGetActivities,\n        nextDate: activityStore.nextDate,\n        setInitialState: activityStore.setInitialState,\n    }));\n}\n\nexport default function ReportHistory() {\n    const [currentDate] = useState(moment().format(FULL_DATE_FORMAT));\n    const {\n        onGetActivities,\n        activities,\n        nextDate,\n        setInitialState,\n    } = useStore();\n\n    useEffect(() => {\n        onGetActivities({ date: currentDate });\n        return () => {\n            setInitialState();\n        };\n    }, [onGetActivities, currentDate, setInitialState]);\n\n    return (\n        <Container>\n            <Box my={3} width=\"100%\" maxWidth=\"1024px\" mx=\"auto\">\n                <InfiniteScroll\n                    dataLength={activities.length} //This is important field to render the next data\n                    next={() => onGetActivities({ date: nextDate })}\n                    hasMore={!!nextDate}\n                    loader={<p>Loading...</p>}\n                >\n                    {activities.map((day, i) => (\n                        <ActivitiesList\n                            key={`date-${day.date}-${i}`}\n                            activities={day.activities}\n                            date={day.date}\n                        />\n                    ))}\n                </InfiniteScroll>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n    Redirect,\n} from \"react-router-dom\";\n\n// Components\nimport NoMatch from \"components/NoMatch\";\nimport NavigationPanel from \"components/NavigationPanel\";\n\n// Routes\nimport routes from \"./routes\";\n\nconst Navigation = compProps => (\n    <Router>\n        <NavigationPanel {...compProps} />\n        <Switch>\n            {routes.map((route, index) => (\n                <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    render={props => {\n                        if (\n                            route.adminRedirect &&\n                            route.adminRedirect(compProps)\n                        ) {\n                            return (\n                                <Redirect to={{ pathname: \"/work-items\" }} />\n                            );\n                        }\n                        if (route.devRedirect && route.devRedirect(compProps)) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/developer-reports\" }}\n                                />\n                            );\n                        }\n                        return !route.rules ||\n                            route.rules.every(rule => rule(compProps)) ? (\n                            <route.component {...props} />\n                        ) : (\n                            <Redirect to={{ pathname: route.redirect }} />\n                        );\n                    }}\n                />\n            ))}\n\n            <Route component={NoMatch} />\n        </Switch>\n    </Router>\n);\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport const StyledBackdrop = styled(Backdrop)`\n    z-index: ${({ theme }) => theme.zIndex.modal + 1};\n`;\n\nexport const StyledLinearProgress = styled(LinearProgress)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n`;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// Styles\nimport { StyledBackdrop, StyledLinearProgress } from \"./styles\";\n\n// utils\nimport { useStores } from \"../../store\";\n\n// Hooks\nfunction useLoadingData() {\n    const { loadersStore } = useStores();\n\n    return useObserver(() => ({\n        isLoadingPage: loadersStore.isLoadingPage,\n    }));\n}\n\nconst PageLoader = () => {\n    const { isLoadingPage } = useLoadingData();\n\n    if (!isLoadingPage) return null;\n\n    return (\n        <StyledBackdrop open={isLoadingPage}>\n            <StyledLinearProgress color=\"secondary\" />\n        </StyledBackdrop>\n    );\n};\n\nexport default PageLoader;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport GlobalFonts from \"assets/fonts\";\nimport Notification from \"components/Notification\";\n\n// Navigation\nimport Navigation from \"./navigation\";\n\n// Store\nimport { useStores } from \"./store\";\n\n// Components\nimport PageLoader from \"./components/PageLoader\";\n\n// Hooks\nfunction useAuthData() {\n    const {\n        authStore,\n        loadersStore: { setLoadingPage },\n    } = useStores();\n\n    return useObserver(() => ({\n        addAuthHeaderInterceptor: authStore.addAuthHeaderInterceptor,\n        dispatchLoginFulfilled: authStore.dispatchLoginFulfilled,\n        setInitialState: authStore.setInitialState,\n        onGetMe: authStore.onGetMe,\n        onLogout: authStore.onLogout,\n        setLoadingPage: setLoadingPage,\n        me: authStore.me,\n        token: authStore.token,\n    }));\n}\n\nfunction App() {\n    const {\n        dispatchLoginFulfilled,\n        addAuthHeaderInterceptor,\n        setInitialState,\n        onGetMe,\n        setLoadingPage,\n        me,\n        token: myToken,\n        onLogout,\n    } = useAuthData();\n    const [userLoaded, setLoaded] = React.useState(false);\n\n    useEffect(() => {\n        async function getTokenFromLocalStorage() {\n            try {\n                const token = localStorage.getItem(\"token\") || myToken;\n\n                if (token) {\n                    setLoadingPage(true);\n                    await addAuthHeaderInterceptor(token);\n                    const responseMe = await onGetMe();\n                    const me = responseMe?.data;\n                    dispatchLoginFulfilled(me, token);\n                } else {\n                    setInitialState();\n                }\n            } catch (e) {\n                setInitialState();\n            } finally {\n                setLoadingPage(false);\n                setLoaded(true);\n            }\n        }\n        if (!me) {\n            getTokenFromLocalStorage();\n        }\n    }, [\n        addAuthHeaderInterceptor,\n        dispatchLoginFulfilled,\n        me,\n        myToken,\n        onGetMe,\n        setInitialState,\n        setLoadingPage,\n    ]);\n\n    return (\n        userLoaded && (\n            <>\n                <PageLoader />\n                <Navigation me={me} onLogout={onLogout} />\n                <CssBaseline />\n                <GlobalFonts />\n                <Notification />\n            </>\n        )\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"mobx-react\";\n// Theme\nimport ThemeProvider from \"assets/styles/ThemeProvider\";\n// Components\nimport App from \"./App\";\n// Worker\nimport * as serviceWorker from \"./serviceWorker\";\n// Stores\nimport RootStore from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider {...new RootStore()}>\n        <Router history={history}>\n            <ThemeProvider>\n                <App />\n            </ThemeProvider>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}