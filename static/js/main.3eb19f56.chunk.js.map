{"version":3,"sources":["assets/fonts/GT-America-Extended-Medium.otf","assets/fonts/GT-America-Extended-Bold.otf","components/NoMatch/img/404.png","constants/theme.js","assets/styles/ThemeProvider.js","assets/fonts/index.js","services/api/constants.js","services/api/AuthService.js","store/AuthStore.js","services/api/LogService.js","store/LogStore.js","constants/pagination.js","store/LoadersStore.js","services/api/ProjectService.js","store/ProjectStore.js","services/api/UserService.js","store/UserStore.js","store/NotificationStore.js","services/api/ExportService.js","constants/export.js","store/ExportStore.js","store/index.js","components/Notification/index.js","components/NoMatch/styles.js","components/NoMatch/index.js","components/ProfileMenu/style.js","components/ProfileMenu/index.js","components/NavigationPanel/NavigationMenu/styles.js","components/NavigationPanel/NavigationMenu/index.js","components/NavigationPanel/styles.js","components/Logo/styles.js","components/Logo/index.js","utils/routerUtils.js","components/NavigationPanel/index.js","components/TableRow/styles.js","components/TableRow/index.js","components/TableCell/styles.js","components/TableCell/index.js","constants/developers.js","Pages/developers/DevelopersTable/index.js","components/FormDialog/styles.js","components/FormDialog/index.js","Pages/developers/SkillsSelector/index.js","Pages/developers/RateInput/index.js","components/DialogActionButton/styles.js","components/DialogActionButton/index.js","Pages/developers/CreateUserForm/styles.js","Pages/developers/RoleSelector/index.js","Pages/developers/CreateUserForm/index.js","utils/developersUtils.js","components/AddButton/styles.js","components/AddButton/index.js","Pages/developers/styles.js","components/WeekSelector/index.js","utils/managerReportsUtils.js","constants/dateFormats.js","Pages/manager-reports/DateRangePicker/index.js","Pages/manager-reports/ProjectSelector/style.js","Pages/manager-reports/ProjectSelector/index.js","Pages/manager-reports/UserSelector/style.js","Pages/manager-reports/UserSelector/index.js","Pages/manager-reports/FilterSelectorPanel/index.js","Pages/manager-reports/LogStatusHandler/style.js","constants/managerReports.js","Pages/manager-reports/LogStatusHandler/index.js","components/DownloadButton/styles.js","components/DownloadButton/index.js","Pages/manager-reports/LogReportTable/index.js","constants/projects.js","utils/projectUtils.js","Pages/projects/ProjectsTable/index.js","Pages/projects/UserMultiSelect/index.js","Pages/projects/TypeSelector/index.js","Pages/projects/CreateProjectForm/styles.js","Pages/projects/CreateProjectForm/index.js","Pages/projects/styles.js","constants/reportHistory.js","Pages/report-history/ReportHistoryTable/index.js","components/WeekDates/styles.js","utils/developerReportUtils.js","components/WeekDates/index.js","constants/developerReport.js","Pages/developer-reports/ReportTable/style.js","Pages/developer-reports/ReportTable/index.js","components/TimePicker/index.js","Pages/developer-reports/Selector/styles.js","Pages/developer-reports/Selector/index.js","Pages/developer-reports/LogInfoHeader/index.js","Pages/developer-reports/ReportForm/styles.js","Pages/developer-reports/ReportForm/index.js","Pages/developer-reports/TotalTimeInfo/index.js","Pages/signin/styles.js","Pages/ForgotPassword/style.js","Pages/ResetPassword/style.js","navigation/rules.js","navigation/routes.js","Pages/home/index.js","Pages/signin/index.js","Pages/ForgotPassword/index.js","Pages/ResetPassword/index.js","Pages/developer-reports/index.js","Pages/manager-reports/index.js","Pages/projects/index.js","Pages/developers/index.js","Pages/report-history/index.js","navigation/index.js","components/PageLoader/styles.js","components/PageLoader/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","logo","success","green","error","red","info","blue","default","grey","children","StylesProvider","injectFirst","createGlobalStyle","AmericaMedium","AmericaBold","API_URL","window","authService","login","data","a","axios","post","logout","forgotPassword","body","resetPassword","getMe","get","addAuthHeaderInterceptor","token","onError","interceptors","request","use","config","headers","response","status","Promise","reject","clearInterceptor","interceptor","eject","AuthStore","rootStore","showError","message","notificationStore","showNotification","type","setInitialState","undefined","me","onLogin","showLoader","access_token","localStorage","setItem","setUserToken","console","onLogout","removeItem","authInterceptor","onGetMe","dispatchLoginFulfilled","onForgotPassword","onResetPassword","getItem","this","value","loadersStore","setLoadingPage","decorate","observable","ref","action","logService","getLogs","params","addLog","updateLog","pathId","put","deleteLog","id","delete","setLogStatus","getLogTypes","updateLogListStrategy","dataArray","newItem","map","item","filter","userList","LogStore","setEmptyLogs","logs","onGetLogs","setLoading","page","per_page","perPage","onAddLog","onUpdateLog","showMessage","onUpdateLogStatus","onDeleteLog","onGetLogTypes","logTypes","updateLogInList","setLogTypes","LoadersStore","isLoadingPage","projectService","getProjectList","getProjectTypes","getProjectUserList","createProject","updateProject","deleteProject","fetchStrategy","update","create","updateProjectListStrategy","ProjectStore","projectList","projectTypes","onGetProjectList","handleFetchProjectData","actionType","project","onCreateProject","onUpdateProject","onDeleteProject","onGetProjectTypes","onGetProjectUserList","setEditingProjectData","runInAction","editingProjectData","users","projectUserList","bound","userService","getUserList","getUser","createUser","updateUser","deleteUser","updateUserListStrategy","UserStore","onGetUserList","setIsLoading","handleFetchUserData","userData","log","onCreateUser","onUpdateUser","onDeleteUser","setEditingUserData","user","editingUserData","NotificationStore","notificationQueue","duration","length","hideNotification","exportService","download","responseType","getHistoryItems","EXCEL_TYPE","ExportStore","showErrorMessage","onDownload","downloadFile","onGetHistoryItems","historyItems","week","from_date","to_date","blob","Blob","document","createElement","href","URL","createObjectURL","click","items","useStores","React","useContext","MobXProviderContext","RootStore","authStore","logStore","projectStore","userStore","exportStore","SlideTransition","props","Slide","direction","Notification","store","useObserver","useStore","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","onClose","key","elevation","variant","severity","PageWrapper","styled","div","PageContainer","backgroundImg","Content","MainText","p","SecondaryText","NoMatch","history","onClick","push","StyledAvatar","Avatar","ProfileMenu","useState","anchorEl","setAnchorEl","event","currentTarget","firstname","lastname","Menu","keepMounted","Boolean","MenuItem","StyledLink","NavLink","dark","useStyles","makeStyles","list","width","fullList","menuButton","color","active","background","NavigationMenu","anchor","menuItems","classes","left","state","setState","toggleDrawer","IconButton","aria-label","className","Drawer","clsx","role","onKeyDown","List","path","name","to","ListItem","button","ListItemText","Divider","Shape","span","SIZE","ShapeContainer","Text","LogoContainer","Logo","ROUTES","Object","freeze","ROUTES_FOR_DEV","ROUTES_FOR_ADMIN","BY_ROLE","admin","dev","root","flexGrow","marginRight","spacing","title","NavigationPanel","routes","routesByRole","includes","getRoutesByRole","AppBar","position","Toolbar","Typography","Button","StyledTableRow","otherProps","TableRow","hover","text","StyledTableCell","noWrap","restProps","TableCell","TABLE_HEADERS","DEFAULT_FORM_VALUES","skills","email","rate","country","developerList","TableContainer","component","Paper","Table","TableHead","TableBody","developer","scope","join","projects","total_work_time","StyledDialog","Dialog","FormDialog","handleClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","EMPTY_OPTIONS","SkillMultiSelect","onChange","values","Autocomplete","multiple","options","freeSolo","toJS","e","newValue","inputValue","renderInput","TextField","label","RateInput","required","Number","target","StyledButton","DialogActionButton","StyledGridContainer","Grid","RoleSelector","RadioGroup","FormLabel","container","wrap","FormControlLabel","control","Radio","CreateUserForm","handleSubmit","initialData","handleDeleteUser","initialValues","keys","reduce","acc","getInitialFormValues","formik","useFormik","onSubmit","autoComplete","Box","mr","handleChange","defaultValue","ml","xs","setFieldValue","justify","DialogActions","StyledAddIcon","AddIcon","AddButton","handleClick","size","startIcon","StyledGrid","weeksCount","setWeek","selectedWeek","currentWeek","moment","Array","from","_","index","String","weeksOptions","getWeekNumber","date","isoWeek","getFromDate","weekNumber","isoWeekday","format","getToDate","isAfter","Date","formatToString","momentDate","getMomentInstance","checkIfWeekSelected","fromDate","toDate","fromDateWeekNumber","startOfWeek","startOf","endOfWeek","endOf","isSame","DateRangePicker","setFilter","momentFromDate","momentToDate","utils","MomentUtils","locale","display","maxDate","minDate","StyledTextField","ProjectSelector","selectedProjects","filterSelectedOptions","getOptionSelected","option","getOptionLabel","selectedUser","FilterSelectorPanel","selectedUsers","alignItems","flexWrap","mt","sm","mx","WeekSelector","selectedProject","UserSelector","StyledPopper","Popper","light","STATUS_OPTIONS","STATUS_COLORS","approved","declined","LogStatusHandler","setOpen","isLoading","setLoadingState","anchorRef","useRef","handleMenuItemClick","current","contains","ButtonGroup","disableElevation","prevOpen","CircularProgress","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","ClickAwayListener","onClickAway","MenuList","selected","StyledIcon","GetAppIcon","LogReportTable","logList","onDownloadFile","filteredLogList","setFilteredLogList","useEffect","result","projectsSet","Set","has","project_id","usersSet","user_id","getLogsParams","find","getUserName","getProjectName","descriptions","time","durationInMinutes","asMinutes","hours","minutes","formatTimeDuration","total","justifyContent","my","DownloadButton","alias","getDate","updated_at","created_at","num_of_dev","durationMin","formatTime","total_log","UserMultiSelect","idSet","getSelectedOptions","TypeSelector","LogForm","handleDeleteProject","multiline","fullWidth","rows","getDatesLabel","concatUserNames","concatProjectNames","isActive","hasLogs","secondary","from_time","to_time","log_type_id","getTotalTime","durations","totalDurations","slice","prev","cur","add","Math","floor","clone","asHours","getParametersForLogs","getStartOfWeek","setDay","selectedDay","weekDates","setWeekDates","day","some","checkLogDate","formatDate","set","month","validationErrorMessages","handleEditLog","setTotalWeekTime","setTotalDayTime","filteredLogs","setFilteredLogs","i","editLog","getLogTypeEnum","getTimeLabel","Developers","setTouched","ampm","momentTime","helperText","StyledFormControl","FormControl","Selector","labelKey","valueKey","placeholder","opts","createOptions","InputLabel","Select","LogInfoHeader","workingDay","flex","pl","align","gutterBottom","paragraph","marginBottom","zIndex","validate","errors","isBefore","submitForm","validateOnChange","validateOnBlur","touched","handleDeleteLog","onSetTouched","margin","TotalTimeInfo","totalDayTime","totalWeekTime","getDateIntervalLabel","StyledContainer","authRequired","unauthorizedOnly","prop","roleAdmin","roleDev","exact","rules","redirect","adminRedirect","devRedirect","password","setForm","useAuthData","flexDirection","setSuccess","toLogin","setToLogin","URLSearchParams","useLocation","search","password_confirmation","confirmPassword","isModalVisible","setModalVisibility","editingLog","setEditingLog","showModal","closeModal","handleSubmitForm","Container","m","minWidth","WeekDates","ReportTable","setWeekNumber","setFromDate","setToDate","setSelectedProjects","setSelectedUsers","onFilterChange","useCallback","onSubmitProject","pb","ProjectsTable","onSubmitUser","DevelopersTable","loadData","ReportHistoryTable","Navigation","compProps","route","render","pathname","every","rule","StyledBackdrop","Backdrop","modal","StyledLinearProgress","LinearProgress","PageLoader","useLoadingData","App","myToken","responseMe","getTokenFromLocalStorage","CssBaseline","location","hostname","match","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,iC,+LCwB5BC,EArBDC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,KAAM,UACNC,QAAS,CACLF,KAAMG,IAAM,MAEhBC,MAAO,CACHJ,KAAMK,IAAI,MAEdC,KAAM,CACFN,KAAMO,IAAK,MAEfC,QAAS,CACLR,KAAMS,IAAK,S,kBCZR,cAAyB,IAAbC,EAAY,EAAZA,SACvB,OACI,kBAACC,EAAA,EAAD,CAAgBC,aAAW,GACvB,kBAAC,IAAD,CAAkBhB,MAAOA,GACrB,kBAAC,IAAD,CAAeA,MAAOA,GAAQc,M,4hBCN/BG,kBAAf,IAIcC,IAOAC,K,2EChBDC,EAAUC,OAAOD,QC+CfE,EAFK,I,sCAtChBC,M,uCAAQ,WAAMC,GAAN,SAAAC,EAAA,+EACGC,IAAMC,KAAN,UAAcP,EAAd,8BACAI,KAFH,2C,2DAMRI,O,sBAAS,sBAAAH,EAAA,+EAAYC,IAAMC,KAAN,UAAcP,EAAd,kBAAZ,2C,KAETS,e,uCAAiB,WAAMC,GAAN,SAAAL,EAAA,+EACbC,IAAMC,KAAN,UAAcP,EAAd,wCAAmDU,KADtC,2C,2DAGjBC,cAAgB,SAAAD,GAAI,OAChBJ,IAAMC,KAAN,UAAcP,EAAd,uCAAkDU,K,KAEtDE,M,sBAAQ,sBAAAP,EAAA,+EAAYC,IAAMO,IAAN,UAAab,EAAb,SAAZ,2C,KAERc,yB,uCAA2B,+BAAAT,EAAA,6DAASU,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAAhB,kBAChBV,IAAMW,aAAaC,QAAQC,KAC9B,SAAAC,GAII,OAHIL,IACAK,EAAOC,QAAP,cAAkC,UAAYN,GAE3CK,KAEX,SAAAhC,GACkC,MAA1BA,EAAMkC,SAASC,QACfP,IAEJQ,QAAQC,OAAOrC,OAZA,2C,2DAiB3BsC,iBAAmB,SAAAC,GACfrB,IAAMW,aAAaC,QAAQU,MAAMD,KCnCnCE,E,WACF,WAAYC,GAAY,IAAD,gCAUvBC,UAAY,SAAAC,GACR,EAAKF,UAAUG,kBAAkBC,iBAAiB,CAC9CC,KAAM,QACNH,aAbe,KAiBvBE,iBAAmB,SAACC,EAAMH,GACtB,EAAKC,kBAAkBC,iBAAiB,CACpCF,UACAG,UApBe,KAwBvBC,gBAAkB,WACd,EAAKrB,WAAQsB,EACb,EAAKC,QAAKD,GA1BS,KA6BvBE,QA7BuB,uCA6Bb,WAAMnC,GAAN,uBAAAC,EAAA,sEAEF,EAAKmC,YAAW,GAFd,SAGqBtC,EAAYC,MAAMC,GAHvC,UAGIkB,EAHJ,SAIIP,EAJJ,OAIYO,QAJZ,IAIYA,GAJZ,UAIYA,EAAUlB,YAJtB,aAIY,EAAgBqC,cAJ5B,iCAOQC,aAAaC,QAAQ,QAAS5B,GAPtC,OAQE,EAAK6B,aAAa7B,GARpB,0DAWF8B,QAAQzD,MAAR,MACA,EAAK8C,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAZlD,yBAcF,EAAKQ,YAAW,GAdd,6EA7Ba,2DA+CvBM,SA/CuB,uCA+CZ,WAAM1C,GAAN,SAAAC,EAAA,+EAEGH,EAAYM,SAFf,uBAGGkC,aAAaK,WAAW,SAH3B,OAKH7C,EAAYwB,iBAAiB,EAAKsB,iBAClC,EAAKZ,kBANF,gDAQHS,QAAQzD,MAAR,MARG,yDA/CY,2DA2DvB6D,QA3DuB,sBA2Db,4BAAA5C,EAAA,sEACiBH,EAAYU,QAD7B,cACAU,EADA,yBAECA,EAASlB,MAFV,2CA3Da,KAgEvB8C,uBAAyB,SAACZ,EAAIvB,GAC1B,EAAKuB,GAAKA,EACV,EAAKvB,MAAQA,GAlEM,KAqEvB6B,aAAe,SAAA7B,GACX,EAAKA,MAAQA,GAtEM,KAyEvBoC,iBAzEuB,uCAyEJ,WAAMzC,GAAN,iBAAAL,EAAA,sEAEX,EAAKmC,YAAW,GAFL,SAGLtC,EAAYO,eAAeC,GAHtB,6DAKX,EAAKwB,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SALzC,8BAQX,EAAKQ,YAAW,GARL,4EAzEI,2DAqFvBY,gBArFuB,uCAqFL,WAAM1C,GAAN,iBAAAL,EAAA,sEAEV,EAAKmC,YAAW,GAFN,SAGJtC,EAAYS,cAAcD,GAHtB,OAIV,EAAKwB,iBACD,UACA,qCANM,sDASV,EAAKA,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAT5C,8BAYV,EAAKQ,YAAW,GAZN,4EArFK,2DAqGvB1B,yBArGuB,sBAqGI,4BAAAT,EAAA,sEACHqC,aAAaW,QAAQ,SADlB,cACjBtC,EADiB,gBAGMb,EAAYY,yBAAyB,CAC9DC,QACAC,QAAS,EAAKoB,kBALK,OAGvB,EAAKY,gBAHkB,kDApGvBM,KAAKxB,UAAYA,EACjBwB,KAAKhB,QAAKD,EACViB,KAAKvC,WAAQsB,E,uDAGNkB,GACPD,KAAKxB,UAAU0B,aAAaC,eAAeF,O,KAwGnDG,YAAS7B,EAAW,CAEhBS,GAAIqB,IAAWC,IACf7C,MAAO4C,IAGPvB,gBAAiByB,IACjBtB,QAASsB,IACTX,uBAAwBW,IACxBjB,aAAciB,IACd/C,yBAA0B+C,IAC1BZ,QAASY,IACTV,iBAAkBU,MAGPhC,Q,QClHAiC,EAFI,I,sCAVfC,QAAU,SAAAC,GAAM,OAAI1D,IAAMO,IAAN,UAAab,EAAb,QAA4B,CAAEgE,Y,KAClDC,OAAS,SAAAvD,GAAI,OAAIJ,IAAMC,KAAN,UAAcP,EAAd,uBAAkCU,K,KACnDwD,UAAY,SAACF,EAAQG,GAAT,OACR7D,IAAM8D,IAAN,UAAapE,EAAb,gBAA4BmE,GAA5B,eAA2CH,K,KAC/CK,UAAY,SAAAC,GAAE,OAAIhE,IAAMiE,OAAN,UAAgBvE,EAAhB,gBAA+BsE,K,KACjDE,aAAe,gBAAGF,EAAH,EAAGA,GAAI/C,EAAP,EAAOA,OAAP,OACXjB,IAAMC,KAAN,UAAcP,EAAd,gBAA6BsE,EAA7B,YAAmC/C,K,KACvCkD,YAAc,SAAAT,GAAM,OAAI1D,IAAMO,IAAN,UAAab,EAAb,4BAAsCgE,MCT5DU,EACM,SAACC,EAAWC,GAAZ,OACJD,EAAUE,KAAI,SAAAC,GAAI,OAAKA,EAAKR,KAAOM,EAAQN,GAAKM,EAAUE,MAF5DJ,EAGM,SAACC,EAAWL,GAChB,OAAOK,EAAUI,QAAO,SAAAD,GAAI,OAAIA,EAAKR,KAAOA,MAJ9CI,EAMM,SAACM,EAAUF,GAAX,4BAAwBE,GAAxB,CAAkCF,KAGxCG,E,WACF,WAAYnD,GAAY,IAAD,gCAQvBI,iBAAmB,SAACC,EAAMH,GACtB,EAAKF,UAAUG,kBAAkBC,iBAAiB,CAC9CF,UACAG,UAXe,KAmBvB+C,aAAe,WACX,EAAKC,KAAO,IApBO,KAuBvBC,UAvBuB,uCAuBX,WAAMpB,GAAN,qBAAA3D,EAAA,sEAEJ,EAAKgF,YAAW,GAFZ,SAGmBvB,EAAWC,QAAX,eAChBC,EADgB,CAEnBsB,KAAM,EAAKA,KACXC,SAAU,EAAKC,WANf,OAGElE,EAHF,OAQJ,EAAK6D,KAAL,OAAY7D,QAAZ,IAAYA,GAAZ,UAAYA,EAAUlB,YAAtB,aAAY,EAAgBA,KARxB,sDAUJ,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAVhD,8BAaJ,EAAKqD,YAAW,GAbZ,4EAvBW,2DAwCvBI,SAxCuB,uCAwCZ,WAAMzB,GAAN,qBAAA3D,EAAA,sEAEH,EAAKgF,YAAW,GAFb,SAGoBvB,EAAWG,OAAOD,GAHtC,OAGG1C,EAHH,OAIH,EAAK6D,KAAOT,EACR,EAAKS,KADG,OAER7D,QAFQ,IAERA,GAFQ,UAERA,EAAUlB,YAFF,aAER,EAAgBA,MAEpB,EAAK8B,iBAAiB,UAAW,aAR9B,sDAUH,EAAKA,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAVjD,8BAaH,EAAKqD,YAAW,GAbb,4EAxCY,2DAyDvBK,YAzDuB,uCAyDT,WAAO1B,EAAQG,GAAf,qBAAA9D,EAAA,sEAEN,EAAKgF,YAAW,GAFV,SAGiBvB,EAAWI,UAAUF,EAAQG,GAH9C,OAGA7C,EAHA,OAIN,EAAK6D,KAAOT,EACR,EAAKS,KADG,OAER7D,QAFQ,IAERA,GAFQ,UAERA,EAAUlB,YAFF,aAER,EAAgBA,MAEpB,EAAK8B,iBAAiB,UAAW,aACjC,EAAKyD,YAAY,CACb3D,QAAS,YACTG,KAAM,YAXJ,wDAcN,EAAKD,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAd9C,8BAiBN,EAAKqD,YAAW,GAjBV,6EAzDS,6DA8EvBO,kBA9EuB,uCA8EH,WAAM5B,GAAN,qBAAA3D,EAAA,sEAEZ,EAAKgF,YAAW,GAFJ,SAGWvB,EAAWU,aAAaR,GAHnC,OAGN1C,EAHM,OAIZ,EAAK6D,KAAOT,EACR,EAAKS,KADG,OAER7D,QAFQ,IAERA,GAFQ,UAERA,EAAUlB,YAFF,aAER,EAAgBA,MAEpB,EAAK8B,iBAAiB,UAAW,sBARrB,sDAUZ,EAAKA,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAVxC,8BAaZ,EAAKqD,YAAW,GAbJ,4EA9EG,2DA+FvBQ,YA/FuB,uCA+FT,WAAMvB,GAAN,iBAAAjE,EAAA,sEAEN,EAAKgF,YAAW,GAFV,SAGAvB,EAAWO,UAAUC,GAHrB,OAIN,EAAKa,KAAOT,EAAgC,EAAKS,KAAMb,GACvD,EAAKpC,iBAAiB,UAAW,eAL3B,sDAON,EAAKA,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAP9C,8BAUN,EAAKqD,YAAW,GAVV,4EA/FS,2DA6GvBS,cA7GuB,uCA6GP,WAAM1E,GAAN,iBAAAf,EAAA,sEAER,EAAKgF,YAAW,GAFR,SAGevB,EAAWW,YAAYrD,GAHtC,gBAGAhB,EAHA,EAGAA,KACR,EAAK2F,SAAL,OAAgB3F,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMA,KAJd,gDAMRyC,QAAQzD,MAAR,MANQ,yBAQR,EAAKiG,YAAW,GARR,4EA7GO,sDACnB/B,KAAKxB,UAAYA,EACjBwB,KAAK6B,KAAO,GACZ7B,KAAKyC,SAAW,GAChBzC,KAAKgC,KCnBe,EDoBpBhC,KAAKkC,QCnBmB,I,uDD6BjBjC,GACPD,KAAKxB,UAAU0B,aAAaC,eAAeF,K,6BAyGlCnD,GACTkD,KAAKyC,SAAW3F,I,yBAGX+E,GACL7B,KAAK6B,KAAOA,M,KAIpBzB,YAASuB,EAAU,CAEfE,KAAMxB,IACNoC,SAAUpC,IAGVyB,UAAWvB,IACX4B,SAAU5B,IACV6B,YAAa7B,IACbgC,YAAahC,IACb+B,kBAAmB/B,IACnBmC,gBAAiBnC,IACjBqB,aAAcrB,IACdoC,YAAapC,IACbiC,cAAejC,MAGJoB,QE/JTiB,E,iDACFC,eAAgB,E,KAEhB1C,eAAiB,SAAAlC,GACb,EAAK4E,cAAgB5E,IAI7BmC,YAASwC,EAAc,CAEnBC,cAAexC,IAGfF,eAAgBI,MAGLqC,QCDAE,GAFQ,I,sCATnBC,eAAiB,kBAAM/F,IAAMO,IAAN,UAAab,EAAb,c,KACvBsG,gBAAkB,kBAAMhG,IAAMO,IAAN,UAAab,EAAb,oB,KACxBuG,mBAAqB,SAAAjC,GAAE,OAAIhE,IAAMO,IAAN,UAAab,EAAb,oBAAgCsE,EAAhC,Y,KAC3BkC,cAAgB,SAAA9F,GAAI,OAAIJ,IAAMC,KAAN,UAAcP,EAAd,2BAAsCU,K,KAC9D+F,cAAgB,SAAC/F,EAAM4D,GAAP,OACZhE,IAAM8D,IAAN,UAAapE,EAAb,oBAAgCsE,GAAhC,eAA2C5D,K,KAC/CgG,cAAgB,SAAApC,GAAE,OAAIhE,IAAMiE,OAAN,UAAgBvE,EAAhB,oBAAmCsE,MCLvDqC,GAAgB,SAAC,GAAD,IAAGjG,EAAH,EAAGA,KAAM4D,EAAT,EAASA,GAAT,MAAmB,CACrCC,OAAQ,kBAAM6B,GAAeM,cAAcpC,IAC3CsC,OAAQ,kBAAMR,GAAeK,cAAc/F,EAAM4D,IACjDuC,OAAQ,kBAAMT,GAAeI,cAAc9F,MAGzCoG,GAA4B,CAC9BF,OAAQ,SAACjC,EAAWC,GAAZ,OACJD,EAAUE,KAAI,SAAAC,GAAI,OAAKA,EAAKR,KAAOM,EAAQN,GAAKM,EAAUE,MAC9DP,OAAQ,SAACI,EAAWC,GAAZ,OACJD,EAAUE,KAAI,SAAAC,GAAI,OAAKA,EAAKR,KAAOM,EAAQN,GAAKM,EAAUE,MAC9D+B,OAAQ,SAAC7B,EAAUF,GAAX,4BAAwBE,GAAxB,CAAkCF,MAExCiC,G,WACF,WAAYjF,GAAY,IAAD,gCAYvBI,iBAAmB,SAACC,EAAMH,GACtB,EAAKF,UAAUG,kBAAkBC,iBAAiB,CAC9CF,UACAG,UAfe,KAuBvBC,gBAAkB,WACd,EAAK4E,YAAc,GACnB,EAAKC,aAAe,IAzBD,KA4BvBC,iBA5BuB,sBA4BJ,kCAAA7G,EAAA,sEAEX,EAAKgF,YAAW,GAFL,SAGYe,GAAeC,eAAe,CACjDf,KAAM,EAAKA,KACXC,SAAU,EAAKC,UALR,OAGLlE,EAHK,OAOX,EAAK0F,YAAL,OAAmB1F,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAUlB,YAA7B,aAAmB,EAAgBA,KAPxB,sDASX,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAT3C,8BAYX,EAAKqD,YAAW,GAZL,4EA5BI,KA4CvB8B,uBA5CuB,uCA4CE,WAAOC,EAAYhH,GAAnB,qBAAAC,EAAA,sEAEjB,EAAKgF,YAAW,GAFC,SAGKsB,GAAcvG,GAAMgH,KAHzB,OAGXC,EAHW,OAIjB,EAAKL,YAAcF,GAA0BM,GACzC,EAAKJ,YADU,OAEfK,QAFe,IAEfA,GAFe,UAEfA,EAASjH,YAFM,aAEf,EAAeA,MAEnB,EAAK8B,iBAAiB,UAAW,iBARhB,sDAUjB,EAAKA,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAVrC,8BAajB,EAAKqD,YAAW,GAbC,4EA5CF,6DA6DvBiC,gBAAkB,SAAA5G,GAAI,OAAI,EAAKyG,uBAAuB,SAAU,CAAEzG,UA7D3C,KA+DvB6G,gBAAkB,SAAC7G,EAAM4D,GAAP,OACd,EAAK6C,uBAAuB,SAAU,CAAEzG,OAAM4D,QAhE3B,KAkEvBkD,gBAAkB,SAAAlD,GAAE,OAAI,EAAK6C,uBAAuB,SAAU,CAAE7C,QAlEzC,KAoEvBmD,kBApEuB,sBAoEH,kCAAApH,EAAA,sEAEZ,EAAKgF,YAAW,GAFJ,SAGWe,GAAeE,kBAH1B,OAGNhF,EAHM,OAIZ,EAAK2F,aAAL,OAAoB3F,QAApB,IAAoBA,GAApB,UAAoBA,EAAUlB,YAA9B,aAAoB,EAAgBA,KAJxB,sDAMZ,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAN1C,8BASZ,EAAKqD,YAAW,GATJ,4EApEG,KAiFvBqC,qBAjFuB,uCAiFA,WAAMpD,GAAN,qBAAAjE,EAAA,sEAEf,EAAKgF,YAAW,GAFD,SAGQe,GAAeG,mBAAmBjC,GAH1C,cAGThD,EAHS,gCAIRA,QAJQ,IAIRA,GAJQ,UAIRA,EAAUlB,YAJF,aAIR,EAAgBA,MAJR,sCAMf,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SANvC,8BASf,EAAKqD,YAAW,GATD,4EAjFA,2DA8FvBsC,sBA9FuB,uCA8FC,WAAMN,GAAN,eAAAhH,EAAA,yDACfgH,EADe,uBAEhBO,aAAY,WACR,EAAKC,mBAAqBR,KAHd,0CAOA,EAAKK,qBAAqBL,EAAQ/C,IAPlC,OAOdwD,EAPc,OAQpBF,aAAY,WACR,EAAKC,mBAAL,eACOR,EADP,CAEIS,MAAOA,EAAMjD,KAAI,SAAAC,GAAI,OAAIA,EAAKR,WAXlB,2CA9FD,sDACnBhB,KAAKxB,UAAYA,EAEjBwB,KAAK0D,YAAc,GACnB1D,KAAK2D,aAAe,GACpB3D,KAAKyE,gBAAkB,GACvBzE,KAAKuE,wBAAqBxF,EAE1BiB,KAAKgC,KH9Be,EG+BpBhC,KAAKkC,QH9BmB,I,uDGwCjBjC,GACPD,KAAKxB,UAAU0B,aAAaC,eAAeF,K,gCA0F/BnD,GACZkD,KAAK0D,YAAc5G,I,iCAGNA,GACbkD,KAAK2D,aAAe7G,I,oCAEJA,GAChBkD,KAAKyE,gBAAkB3H,M,KAI/BsD,YAASqD,GAAc,CAEnBC,YAAarD,IACbsD,aAActD,IACdoE,gBAAiBpE,IACjBkE,mBAAoBlE,IAGpBvB,gBAAiByB,IACjBqD,iBAAkBrD,IAAOmE,MACzBP,kBAAmB5D,IACnB8D,sBAAuB9D,IACvByD,gBAAiBzD,IACjB0D,gBAAiB1D,IACjB2D,gBAAiB3D,MAGNkD,UC/IAkB,GAFK,I,sCAThBC,YAAc,SAAAlE,GAAM,OAAI1D,IAAMO,IAAN,UAAab,EAAb,SAA6B,CAAEgE,Y,KACvDpD,MAAQ,kBAAMN,IAAMO,IAAN,UAAab,EAAb,S,KACdmI,QAAU,SAAA7D,GAAE,OAAIhE,IAAMO,IAAN,UAAab,EAAb,iBAA6BsE,K,KAC7C8D,WAAa,SAAA1H,GAAI,OAAIJ,IAAMC,KAAN,UAAcP,EAAd,wBAAmCU,K,KACxD2H,WAAa,SAAC3H,EAAMyD,GAAP,OACT7D,IAAM8D,IAAN,UAAapE,EAAb,iBAA6BmE,GAA7B,eAA4CzD,K,KAChD4H,WAAa,SAAAhE,GAAE,OAAIhE,IAAMiE,OAAN,UAAgBvE,EAAhB,iBAAgCsE,MCNjDqC,GAAgB,SAAC,GAAD,IAAGjG,EAAH,EAAGA,KAAM4D,EAAT,EAASA,GAAT,MAAmB,CACrCC,OAAQ,kBAAM0D,GAAYK,WAAWhE,IACrCsC,OAAQ,kBAAMqB,GAAYI,WAAW3H,EAAM4D,IAC3CuC,OAAQ,kBAAMoB,GAAYG,WAAW1H,MAGnC6H,GAAyB,CAC3B3B,OAAQ,SAACjC,EAAWC,GAAZ,OACJD,EAAUE,KAAI,SAAAC,GAAI,OAAKA,EAAKR,KAAOM,EAAQN,GAAKM,EAAUE,MAC9DP,OAAQ,SAACI,EAAWC,GAAZ,OACJD,EAAUE,KAAI,SAAAC,GAAI,OAAKA,EAAKR,KAAOM,EAAQN,GAAKM,EAAUE,MAC9D+B,OAAQ,SAAC7B,EAAUF,GAAX,4BAAwBE,GAAxB,CAAkCF,MAGxC0D,G,WACF,WAAY1G,GAAY,IAAD,gCASvBI,iBAAmB,SAACC,EAAMH,GACtB,EAAKF,UAAUG,kBAAkBC,iBAAiB,CAC9CF,UACAG,UAZe,KAoBvBsG,cApBuB,sBAoBP,kCAAApI,EAAA,sEAER,EAAKqI,cAAa,GAFV,SAGeT,GAAYC,YAAY,CAC3C5C,KAAM,EAAKA,KACXC,SAAU,EAAKC,UALX,OAGFlE,EAHE,OAOR,EAAK0D,SAAL,OAAgB1D,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAUlB,YAA1B,aAAgB,EAAgBA,KAPxB,sDASR,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAKZ,gBAApC,iBAA+B,EAAelB,YAA9C,aAA+B,EAAqB4B,SAT5C,8BAYR,EAAK0G,cAAa,GAZV,4EApBO,KAoCvBC,oBApCuB,uCAoCD,WAAOvB,EAAYhH,GAAnB,yBAAAC,EAAA,sEAEd,EAAKqI,cAAa,GAFJ,SAGS/B,GAAcvG,GAAMgH,KAH7B,OAGRwB,EAHQ,OAId,EAAK5D,SAAWuD,GAAuBnB,GACnC,EAAKpC,SADO,OAEZ4D,QAFY,IAEZA,GAFY,UAEZA,EAAUxI,YAFE,aAEZ,EAAgBA,MAEpB,EAAK8B,iBAAiB,UAAW,cARnB,sDAUdW,QAAQgG,IAAI,oBAAZ,sCAAiC,KAAOvH,gBAAxC,iBAAiC,EAAiBlB,YAAlD,aAAiC,EAAuB4B,SACxD,EAAKE,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAXxC,8BAcd,EAAK0G,cAAa,GAdJ,4EApCC,6DAsDvBI,aAAe,SAAApI,GAAI,OAAI,EAAKiI,oBAAoB,SAAU,CAAEjI,UAtDrC,KAwDvBqI,aAAe,SAACrI,EAAM4D,GAAP,OACX,EAAKqE,oBAAoB,SAAU,CAAEjI,OAAM4D,QAzDxB,KA2DvB0E,aAAe,SAAA1E,GAAE,OAAI,EAAKqE,oBAAoB,SAAU,CAAErE,QA3DnC,KAiEvB2E,mBAAqB,SAAAC,GACjB,EAAKC,gBAAkBD,GAjEvB5F,KAAKxB,UAAYA,EAEjBwB,KAAK0B,SAAW,GAChB1B,KAAK6F,qBAAkB9G,EACvBiB,KAAKgC,KL3Be,EK4BpBhC,KAAKkC,QL3BmB,I,yDKqCfjC,GACTD,KAAKxB,UAAU0B,aAAaC,eAAeF,K,6BA4ClCyB,GACT1B,KAAK0B,SAAWA,M,KAQxBtB,YAAS8E,GAAW,CAEhBxD,SAAUrB,IACVwF,gBAAiBxF,IAGjBsF,mBAAoBpF,IACpB4E,cAAe5E,IACfiF,aAAcjF,IACdkF,aAAclF,IACdmF,aAAcnF,MAGH2E,UCtGTY,G,iDACFC,kBAAoB,G,KAEpBnH,iBAAmB,SAAA9B,GACf,EAAKiJ,kBAAL,sBACO,EAAKA,mBADZ,gBAGWjJ,EAHX,CAIQkJ,SAAU,IACVhF,GAAI,EAAK+E,kBAAkBE,Y,KAIvCC,iBAAmB,SAAAlF,GACf,EAAK+E,kBAAoB,EAAKA,kBAAkBtE,QAC5C,SAAAD,GAAI,OAAIA,EAAKR,KAAOA,OAKhCZ,YAAS0F,GAAmB,CAExBC,kBAAmB1F,IAGnBzB,iBAAkB2B,IAClB2F,iBAAkB3F,MAGPuF,UCdAK,GAFO,I,sCATlBC,SAAW,SAAA1F,GAAM,OACb1D,IAAMO,IAAN,UAAab,EAAb,WAA+B,CAC3BgE,SACA2F,aAAc,U,KAEtBC,gBAAkB,SAAA5F,GAAM,OACpB1D,IAAMO,IAAN,UAAab,EAAb,mBAAuC,CAAEgE,aCbpC6F,GACT,oECOEC,G,WACF,WAAYhI,GAAY,IAAD,gCAOvBiI,iBAAmB,SAAA/H,GACf,EAAKF,UAAUG,kBAAkBC,iBAAiB,CAC9CF,UACAG,KAAM,WAVS,KA8BvB6H,WA9BuB,uCA8BV,WAAMhG,GAAN,mBAAA3D,EAAA,sEAEL,EAAKqI,cAAa,GAFb,SAGkBe,GAAcC,SAAS1F,GAHzC,QAGC1C,EAHD,QAIQD,QAAQ,kBAAoBwI,GACrC,EAAKI,aAAa3I,EAAU0C,GAE5B,EAAK+F,iBAAiB,0BAPrB,gDAUL,EAAK7H,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SACtDa,QAAQzD,MAAR,MAXK,yBAaL,EAAKsJ,cAAa,GAbb,4EA9BU,2DA+CvBwB,kBA/CuB,uCA+CH,WAAMlG,GAAN,qBAAA3D,EAAA,sEAEZ,EAAKqI,cAAa,GAFN,SAGWe,GAAcG,gBAAd,aACnBtE,KAAM,EAAKA,KACXC,SAAU,EAAKC,SACZxB,IANK,OAGN1C,EAHM,OAQZ,EAAK6I,aAAL,OAAoB7I,QAApB,IAAoBA,GAApB,UAAoBA,EAAUlB,YAA9B,aAAoB,EAAgBA,KARxB,sDAUZ,EAAK8B,iBAAiB,QAAtB,sCAA+B,KAAOZ,gBAAtC,iBAA+B,EAAiBlB,YAAhD,aAA+B,EAAuB4B,SAV1C,8BAaZ,EAAK0G,cAAa,GAbN,4EA/CG,sDACnBpF,KAAKxB,UAAYA,EACjBwB,KAAK6G,aAAe,GACpB7G,KAAKgC,KTZe,ESapBhC,KAAKkC,QTZmB,I,yDSsBfjC,GACTD,KAAKxB,UAAU0B,aAAaC,eAAeF,K,mCAGlCjC,E,GAAyC,IAA7B8I,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAChCC,EAAO,IAAIC,KAAK,CAAClJ,EAASlB,MAAO,CACnC+B,KAAM0H,KAEJxJ,EAAIoK,SAASC,cAAc,KACjCrK,EAAEsK,KAAO1K,OAAO2K,IAAIC,gBAAgBN,GACpClK,EAAEqJ,SAAF,aAAmBU,GAAc,GAAjC,YACIC,GAAaC,EAAb,UAA0BD,EAA1B,YAAuCC,GAAY,GADvD,SAGAjK,EAAEyK,U,iCAqCWC,GACbzH,KAAK6G,aAAeY,M,KAI5BrH,YAASoG,GAAa,CAElBK,aAAcxG,IACd2B,KAAM3B,IACN6B,QAAS7B,IAGTqG,WAAYnG,IACZqG,kBAAmBrG,MAGRiG,UC/DFkB,GAAY,WACrB,OAAOC,IAAMC,WAAWC,MAGbC,GAhBX,aAAe,oBACX9H,KAAK+H,UAAY,IAAIxJ,EAAUyB,MAC/BA,KAAKgI,SAAW,IAAIrG,EAAS3B,MAC7BA,KAAKE,aAAe,IAAI0C,EAAa5C,MACrCA,KAAKiI,aAAe,IAAIxE,GAAazD,MACrCA,KAAKkI,UAAY,IAAIhD,GAAUlF,MAC/BA,KAAKrB,kBAAoB,IAAImH,GAAkB9F,MAC/CA,KAAKmI,YAAc,IAAI3B,GAAYxG,OCT3C,SAASoI,GAAgBC,GACrB,OAAO,kBAACC,EAAA,EAAD,iBAAWD,EAAX,CAAkBE,UAAU,QAYxB,SAASC,KAAgB,IAAD,EATvC,WACI,IAAMC,EAAQf,KAEd,OAAOgB,aAAY,iBAAO,CACtB3C,kBAAmB0C,EAAM9J,kBAAkBoH,kBAC3CG,iBAAkBuC,EAAM9J,kBAAkBuH,qBAKEyC,GAAxC5C,EAD2B,EAC3BA,kBAAmBG,EADQ,EACRA,iBAE3B,OAAOH,EAAkBxE,KAAI,SAAAC,GAAI,OAC7B,kBAACoH,EAAA,EAAD,CACIC,MAAI,EACJC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,iBAAkBzH,EAAKwE,SACvBkD,oBAAqBd,GACrBe,QAAS,kBAAMjD,EAAiB1E,EAAKR,KACrCoI,IAAK5H,EAAKR,IAEV,kBAAC,IAAD,CAAUqI,UAAW,EAAGC,QAAQ,SAASC,SAAU/H,EAAK3C,MACnD2C,EAAK9C,a,mhCCtCf,IAAM8K,GAAcC,IAAOC,IAAV,MASXC,GAAgBF,IAAOC,IAAV,KAOJE,MAITC,GAAUJ,IAAOC,IAAV,MAOPI,GAAWL,IAAOM,EAAV,MAORC,GAAgBP,IAAOM,EAAV,MCAXE,GAzBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,kBAACV,GAAD,KACI,kBAACG,GAAD,KACI,kBAACE,GAAD,KACI,kBAACC,GAAD,+DAGA,kBAACE,GAAD,sEAIA,6BACI,4BACIG,QAAS,WACLD,EAAQE,KAAK,OAFrB,uB,kNCrBb,IAAMC,GAAeZ,YAAOa,KAAPb,CAAH,MACD,qBAAGnO,MAAkBE,QAAQG,QCMtC,SAAS4O,GAAT,GAAwC,IAAjBvL,EAAgB,EAAhBA,GAAIQ,EAAY,EAAZA,SAAY,EAClBmI,IAAM6C,SAAS,MADG,oBAC3CC,EAD2C,KACjCC,EADiC,KAWlD,OACI,oCACI,kBAACL,GAAD,CAAcF,QAVF,SAAAQ,GAChBD,EAAYC,EAAMC,iBASd,WACU,OAAF5L,QAAE,IAAFA,OAAA,EAAAA,EAAI6L,UAAU,KAAM,IAD5B,QACmC,OAAF7L,QAAE,IAAFA,OAAA,EAAAA,EAAI8L,SAAS,KAAM,KAEpD,kBAACC,GAAA,EAAD,CACIN,SAAUA,EACVO,aAAW,EACXnC,KAAMoC,QAAQR,GACdtB,QAbQ,WAChBuB,EAAY,QAcJ,kBAACQ,GAAA,EAAD,CAAUf,QAAS3K,GAAnB,Y,wLC5BT,IAAM2L,GAAa1B,YAAO2B,KAAP3B,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yDAEOA,EAAME,QAAQC,QAAQC,KAF7B,6CAIWJ,EAAME,QAAQC,QAAQ4P,KAJjC,mBCYAC,GAAYC,cAAW,SAAAjQ,GAAK,MAAK,CACnCkQ,KAAM,CACFC,MAAO,KAEXC,SAAU,CACND,MAAO,QAEXE,WAAY,CACRC,MAAO,QAEXC,OAAQ,CACJC,WAAY,WA6DLC,GAzDQ,SAAC,GAAmB,IAiB1BC,EAjBSC,EAAgB,EAAhBA,UAChBC,EAAUZ,KADsB,EAEZ3D,IAAM6C,SAAS,CACrC2B,MAAM,IAH4B,oBAE/BC,EAF+B,KAExBC,EAFwB,KAMhCC,EAAe,SAACN,EAAQnD,GAAT,OAAkB,SAAA8B,IAEhB,YAAfA,EAAM9L,MACS,QAAd8L,EAAMvB,KAA+B,UAAduB,EAAMvB,MAKlCiD,EAAS,eAAKD,EAAN,gBAAcJ,EAASnD,OAuBnC,OACI,6BACI,kBAAC0D,GAAA,EAAD,CACIC,aAAW,UACXC,UAAWP,EAAQP,WACnBxB,QAASmC,EAAa,QAAQ,IAE9B,kBAAC,KAAD,OAEJ,kBAACI,GAAA,EAAD,CACIV,OAAO,QACPnD,KAAMuD,EAAK,KACXjD,QAASmD,EAAa,QAAQ,KAhC7BN,EAkCK,OAjCd,yBACIS,UAAWE,aAAKT,EAAQV,MACxBoB,KAAK,eACLzC,QAASmC,EAAaN,GAAQ,GAC9Ba,UAAWP,EAAaN,GAAQ,IAEhC,kBAACc,GAAA,EAAD,KACKb,EAAU1K,KAAI,gBAAGwL,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,kBAAC7B,GAAD,CAAY8B,GAAE,WAAMF,GAAQ3D,IAAK2D,GAC7B,kBAACG,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc3R,QAASuR,UAKvC,kBAACK,GAAA,EAAD,W,kFC7DL,IAAMlC,GAAa1B,YAAO2B,KAAP3B,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yDAEOA,EAAME,QAAQC,QAAQ4P,KAF7B,6CAIW/P,EAAME,QAAQW,KAAK,KAJ9B,mB,+xBCHN,IAEamR,GAAQ7D,IAAO8D,KAAV,MACZ,gBAAGjS,EAAH,EAAGA,MAAH,iCAHO,GAGP,4BAEQkS,GAFR,sMAUsBlS,EAAME,QAAQG,KAVpC,+FAkBO8R,GAAiBhE,IAAOC,IAAV,KArBd,OA8BAgE,GAAOjE,IAAOC,IAAV,MAgBJiE,GAAgBlE,IAAOC,IAAV,MC1BXkE,OAhBf,WACI,OACI,kBAACD,GAAD,KACI,kBAACF,GAAD,KACI,kBAACH,GAAD,MACA,kBAACA,GAAD,OAEJ,kBAACI,GAAD,KACI,0CACA,sCACA,uCChBVG,GAASC,OAAOC,OAAO,CACzB,CACIf,KAAM,UACND,KAAM,qBAEV,CACIC,KAAM,UACND,KAAM,mBAEV,CACIC,KAAM,WACND,KAAM,YAEV,CACIC,KAAM,aACND,KAAM,cAGV,CACIC,KAAM,iBACND,KAAM,oBAIRiB,GAAiBF,OAAOC,OAAO,CAAC,sBAChCE,GAAmBH,OAAOC,OAAO,CACnC,iBACA,aACA,WACA,oBAGEG,GAAUJ,OAAOC,OAAO,CAC1BI,MAAOF,GACPG,IAAKJ,KCXH1C,GAAYC,cAAW,SAAAjQ,GAAK,MAAK,CACnC+S,KAAM,CACFC,SAAU,GAEd3C,WAAY,CACR4C,YAAajT,EAAMkT,QAAQ,IAE/BC,MAAO,CACHH,SAAU,OA6BHI,GAzBS,SAAC,GAAsB,IAApB1P,EAAmB,EAAnBA,GAAIQ,EAAe,EAAfA,SACrB0M,EAAUZ,KAEVqD,EDDqB,SAAA/B,GAC3B,IAAMgC,EAAeV,GAAQtB,GAE7B,OAAKgC,EAEEf,GAAOpM,QAAO,gBAAGsL,EAAH,EAAGA,KAAH,OAAc6B,EAAaC,SAAS9B,MAF/B,GCFX+B,CAAe,OAAC9P,QAAD,IAACA,OAAD,EAACA,EAAI4N,MAEnC,OACI,kBAACmC,GAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,MAEA,kBAACC,GAAA,EAAD,CAAY5F,QAAQ,KAAKmD,UAAWP,EAAQuC,QAE3CzP,EACG,kBAACuL,GAAD,CAAavL,GAAIA,EAAIQ,SAAUA,IAE/B,kBAAC2P,GAAA,EAAD,KACI,kBAAC,GAAD,CAAYlC,GAAG,WAAf,UAGR,kBAAC,GAAD,CAAgBhB,UAAW0C,O,sPClDpC,IAAMS,GAAiB3F,aAAO,cAAG5K,KAAH,IAAYwQ,EAAZ,gCACjC,kBAACC,GAAA,EAAaD,KADY5F,CAAH,MAGb,SAAApB,GAAK,OAAKA,EAAMkH,MAAQ,UAAY,UAEjC,gBAAG1Q,EAAH,EAAGA,KAAMvD,EAAT,EAASA,MAAT,OAAqBuD,GAAQvD,EAAME,QAAQgU,KAAK3Q,MCFlDyQ,OAJf,SAAkBjH,GACd,OAAO,kBAAC+G,GAAmB/G,I,4ICGxB,IAAMoH,GAAkBhG,aAAO,cAAGiG,OAAH,IAAcC,EAAd,kCAClC,kBAACC,GAAA,EAAcD,KADYlG,CAAH,KAGEtN,IAAK,MAChB,qBAAGuT,OAAuB,SAAW,YCJzCE,OAJf,SAAmBvH,GACf,OAAO,kBAACoH,GAAoBpH,ICJnBwH,GAAgB,CACzB,KACA,OACA,SACA,eACA,kBACA,UAGSC,GAAsB,CAC/BjF,UAAW,GACXC,SAAU,GACViF,OAAQ,GACRC,MAAO,GACPpD,KAAM,GACNqD,KAAM,EACNC,QAAS,ICCE,eAAkD,IAAtCC,EAAqC,EAArCA,cAAexK,EAAsB,EAAtBA,mBAItC,OACI,kBAACyK,GAAA,EAAD,CAAgBC,UAAWC,MACvB,kBAACC,GAAA,EAAD,CAAO/D,aAAW,gBACd,kBAACgE,GAAA,EAAD,KACI,kBAAC,GAAD,KACKX,GAActO,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CAAW4H,IAAK5H,GAAOA,QAInC,kBAACiP,GAAA,EAAD,KACKN,EAAclK,OACXkK,EAAc5O,KAAI,SAAAmP,GAAS,OACvB,kBAAC,GAAD,CACI7R,KACyB,aAArB6R,EAAUzS,OACJ,WACA,UAEVsR,OAAK,EACLnG,IAAKsH,EAAU1P,GACfmJ,QAAS,kBAAMxE,EAAmB+K,KAElC,kBAAC,GAAD,CAAWL,UAAU,KAAKM,MAAM,OAC3BD,EAAU1P,IAEf,kBAAC,GAAD,MA7BP6J,EA+Be6F,EAAU7F,UA/BdC,EAgCI4F,EAAU5F,SAhC1B,UAA4BD,EAA5B,YAAyCC,KAmCjC,kBAAC,GAAD,KACkB4F,EAAUX,OAnCRa,KAAK,OAqCzB,kBAAC,GAAD,KAAYF,EAAUG,UACtB,kBAAC,GAAD,KACKH,EAAUI,iBAEf,kBAAC,GAAD,KAAYJ,EAAUzS,SAzC7B,IADA4M,EAAWC,KA8CZ,kBAAC,GAAD,KACI,kBAAC,GAAD,KAAY,c,wRC9DjC,IAAMiG,GAAetH,YAAOuH,KAAPvH,CAAH,MCOV,SAASwH,GAAT,GAA6D,IAAvCpI,EAAsC,EAAtCA,KAAMqI,EAAgC,EAAhCA,YAAazC,EAAmB,EAAnBA,MAAOrS,EAAY,EAAZA,SAC3D,OACI,kBAAC2U,GAAD,CACIlI,KAAMA,EACNM,QAAS+H,EACTC,kBAAgB,oBAChBC,SAAU,MAEV,kBAACC,GAAA,EAAD,CAAarQ,GAAG,qBAAqByN,GACrC,kBAAC6C,GAAA,EAAD,KAAgBlV,I,cCZtBmV,GAAgB,GAEP,SAASC,GAAT,GAAqD,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,OAAQ1Q,EAAM,EAANA,GAUzD,OACI,oCACI,kBAAC2Q,GAAA,EAAD,CACIC,UAAQ,EACR5Q,GAAIA,EACJ6Q,QAASN,GACTO,UAAQ,EACR7R,MAAO8R,YAAKL,GACZD,SAjBS,SAACO,EAAGC,GACG,kBAAbA,EACPR,EAASzQ,EAAD,sBAAS0Q,GAAT,CAAiBO,KAClBA,GAAYA,EAASC,YAC5BT,EAAS,YAAIC,EAAOO,SAASC,aAEjCT,EAASzQ,EAAIiR,IAYLE,YAAa,SAAAzR,GAAM,OACf,kBAAC0R,GAAA,EAAD,iBAAe1R,EAAf,CAAuB4I,QAAQ,WAAW+I,MAAM,gBC1BrD,SAASC,GAAT,GAA6C,IAAxBb,EAAuB,EAAvBA,SAAUxR,EAAa,EAAbA,MAAOe,EAAM,EAANA,GASjD,OACI,kBAACoR,GAAA,EAAD,CACIG,UAAQ,EACRF,MAAM,OACNxT,KAAK,SACL4S,SAba,SAAAO,GACbQ,OAAOR,EAAES,OAAOxS,OAAS,EACzBwR,EAASzQ,EAAI,GAGjByQ,EAASzQ,EAAIgR,EAAES,OAAOxS,QASlBA,MAAOA,I,0FCZZ,IAAMyS,GAAejJ,aAAO,cAAG5K,KAAH,IAAYwQ,EAAZ,gCAC/B,kBAACF,GAAA,EAAWE,KADY5F,CAAH,MAGZ,kBAAG5K,EAAH,EAAGA,KAAH,mBAASvD,MAAkBE,QAAQqD,UAAnC,aAAqB,EAAqBnD,QCFxCiX,OAJf,SAA4BtK,GACxB,OAAO,kBAACqK,GAAiBrK,I,oICDtB,IAAMuK,GAAsBnJ,YAAOoJ,KAAPpJ,CAAH,M,wCCkCjBqJ,OAzBf,YAAgD,IAAxB7S,EAAuB,EAAvBA,MAAOwR,EAAgB,EAAhBA,SAAUzQ,EAAM,EAANA,GAIrC,OACI,kBAAC+R,GAAA,EAAD,CAAYvG,aAAW,OAAOvM,MAAOA,EAAOwR,SAJ3B,SAAAO,GACjBP,EAASzQ,EAAIgR,EAAES,OAAOxS,SAIlB,kBAAC+S,GAAA,EAAD,KAAY,UACZ,kBAACH,GAAA,EAAD,CAAMI,WAAS,EAACC,KAAK,UACjB,kBAACC,GAAA,EAAD,CACIlT,MAAM,MACNe,GAAIA,EACJoS,QAAS,kBAACC,GAAA,EAAD,CAAOzH,MAAO,YACvByG,MAAM,cAEV,kBAACc,GAAA,EAAD,CACIlT,MAAM,QACNe,GAAIA,EACJoS,QAAS,kBAACC,GAAA,EAAD,CAAOzH,MAAO,YACvByG,MAAM,aCZX,SAASiB,GAAT,GAMX,IALAzK,EAKD,EALCA,KACAM,EAID,EAJCA,QACAoK,EAGD,EAHCA,aACAC,EAED,EAFCA,YACAC,EACD,EADCA,iBAEMC,ECvB0B,SAAAF,GAChC,OAAKA,EAKE1F,OAAO6F,KAAK7D,IAAqB8D,QAAO,SAACC,EAAKzK,GAEjD,OADAyK,EAAIzK,GAAOoK,EAAYpK,GAChByK,IACR,IAPQ,eACA/D,IDoBWgE,CAAqBN,GAErCO,EAASC,aAAU,CACrBN,gBACAO,SAAU,SAAAnX,GACNyW,EAAazW,EAAD,OAAO0W,QAAP,IAAOA,OAAP,EAAOA,EAAaxS,OAIxC,OACI,kBAACiQ,GAAD,CAAYpI,KAAMA,EAAMqI,YAAa/H,EAASsF,MAAM,iBAChD,0BAAMyF,aAAa,OACf,kBAACtB,GAAD,KACI,kBAACC,GAAA,EAAD,CAAMI,WAAS,GACX,kBAACkB,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAChC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,YACHqR,MAAM,aACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAO7G,UAC5BqJ,aAAa,SAGrB,kBAACC,GAAA,EAAD,CAAKI,GAAI,GACL,kBAACnC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,WACHqR,MAAM,YACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAO5G,SAC5BoJ,aAAa,UAIzB,kBAACrB,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAAChD,GAAD,CACIE,OAAQqC,EAAOrC,OAAO3B,OACtB0B,SAAUsC,EAAOU,cACjBzT,GAAG,YAGX,kBAAC6R,GAAA,EAAD,CAAMI,WAAS,EAACyB,QAAS,iBACrB,kBAAC7B,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GACX,kBAACpC,GAAA,EAAD,CACIpR,GAAG,UACHqR,MAAM,UACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAOxB,WAGpC,kBAAC2C,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GACX,kBAAClC,GAAD,CACIb,SAAUsC,EAAOU,cACjBzT,GAAG,OACHf,MAAO8T,EAAOrC,OAAOzB,SAIjC,kBAAC4C,GAAA,EAAD,CAAMrR,MAAI,EAACgT,IAAE,GACT,kBAACpC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,QACHqR,MAAM,SACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAO1B,SAGpC,kBAAC6C,GAAA,EAAD,CAAMI,WAAS,EAACyB,QAAQ,YACpB,kBAAC,GAAD,CACIzU,MAAO8T,EAAOrC,OAAO9E,KACrB6E,SAAUsC,EAAOU,cACjBzT,GAAG,UAGX,kBAAC2T,GAAA,EAAD,KACKnB,GACG,kBAAC,GAAD,CACIrJ,QAAS,kBACLsJ,EAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAaxS,KAElCnC,KAAK,SAJT,UASJ,kBAAC,GAAD,CAAoBsL,QAAShB,EAAStK,KAAK,WAA3C,UAGA,kBAAC,GAAD,CACIsL,QAAS4J,EAAOR,aAChB1U,KAAK,WAFT,Y,2GE/GjB,IAAM+V,GAAgBnL,YAAOoL,KAAPpL,CAAH,MACpB,gBAAGnO,EAAH,EAAGA,MAAH,yEAIOA,EAAME,QAAQQ,KAAKN,KAJ1B,SCiBSoZ,OAZf,YAA+C,IAA1BC,EAAyB,EAAzBA,YAAa3Y,EAAY,EAAZA,SAC9B,OACI,kBAAC+S,GAAA,EAAD,CACI6F,KAAK,QACL7K,QAAS4K,EACTE,UAAW,kBAACL,GAAD,OAEVxY,I,kFCbN,IAAM8Y,GAAazL,YAAOoJ,KAAPpJ,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,kCACYA,EAAMkT,QAAQ,GAD1B,mCAEelT,EAAMkT,QAAQ,GAF7B,Y,wBCOS,mBAAsC,IAN5B2G,EAMEC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAC1BC,EAAcC,OAASzO,OADmB,EAGzB0D,oBATF2K,EAS2BG,EARzCE,MAAMC,KAAK,CAAExP,OAAQkP,IAAc5T,KAAI,SAACmU,EAAGC,GAAJ,OAC1CC,OAAOD,EAAQ,QAOZE,EAHyC,qBAS1C5V,EAAQoV,GAAgBO,OAAOP,GAErC,OACI,kBAAC1D,GAAA,EAAD,CACI1R,MAAOA,EACP4R,QAASgE,EACTpE,SAVW,SAACO,EAAG/R,GACnBmV,EAAQnV,IAUJkS,YAAa,SAAAzR,GAAM,OACf,kBAAC0R,GAAA,EAAD,iBAAe1R,EAAf,CAAuB2R,MAAM,qB,sCCpBhCyD,GAAgB,SAAAC,GAAI,OAAIR,KAAOQ,ECRZ,cDQoCC,WAEvDC,GAAc,SAAAC,GAAU,OACjCX,OAASS,QAAQE,GAAYC,WCDX,GDC8BC,OCXpB,eDanBC,GAAY,SAAAH,GACrB,IAAMH,EAAOR,OAASS,QAAQE,GAAYC,WCHxB,GDIlB,OAAIJ,EAAKO,QAAQ,IAAIC,MACVhB,OAASa,OChBQ,cDkBrBL,EAAKK,OClBgB,eDqBnBI,GAAiB,SAAAC,GAAU,OACpClB,KAAOkB,GAAYL,OCtBS,eDwBnBM,GAAoB,SAAAX,GAAI,OAAIR,KAAOQ,ECxBhB,eD8BnBY,GAAsB,SAACC,EAAUC,GAC1C,IALuBX,EAKjBY,EAAqBhB,GAAcc,GAGzC,GAAIE,IAFqBhB,GAAce,GAEM,CACzC,IAAME,EAAcL,GAAkBE,GAAUI,QAAQ,WAClDC,GAVaf,EAUkBY,EATlChB,GAAc,IAAIS,QAAYL,EAU3BX,OACAmB,GAAkBE,GAAUM,MAAM,YACxC,OACIR,GAAkBE,GAAUO,OAAOJ,EAAa,QAChDL,GAAkBG,GAAQM,OAAOF,EAAW,OAIpD,OAAO,GEUIG,OAvCf,YAA2D,IAAhCR,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQQ,EAAa,EAAbA,UASnCC,EAAiBZ,GAAkBE,GACnCW,EAAeb,GAAkBG,GAEvC,OACI,kBAAC,KAAD,CAAyBW,MAAOC,KAAaC,OAAQ,SACjD,kBAACvD,GAAA,EAAD,CAAKwD,QAAQ,QACT,kBAACxD,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,KAAD,CACInU,MAAOqX,EACPjF,MAAM,YACNuF,UAASf,GAASU,EAClB9F,SAnBG,SAAAsE,GACnBsB,EAAU,WAAYb,GAAeT,KAmBrBK,ODrCQ,gBCwChB,kBAACjC,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,KAAD,CACI/B,MAAM,UACNpS,MAAOsX,EACPM,UAASjB,GAAWU,EACpBM,QAASlB,GAAkB,IAAIH,MAC/B9E,SAzBC,SAAAsE,GACjBsB,EAAU,SAAUb,GAAeT,KAyBnBK,OD/CQ,mB,uIEGzB,IAAM0B,GAAkBrO,YAAO2I,KAAP3I,CAAH,MC4BbsO,OAzBf,YAAqE,IAA1ClH,EAAyC,EAAzCA,SAAUwG,EAA+B,EAA/BA,UAAWW,EAAoB,EAApBA,iBAS5C,OACI,kBAACrG,GAAA,EAAD,CACIC,UAAQ,EACR3R,MAAO+X,EACPnG,QAAShB,EACTY,SAbgB,SAACO,EAAG/R,GACxBoX,EAAU,mBAAoBpX,IAa1BgY,uBAAqB,EACrBC,kBAXkB,SAACC,EAAQlY,GAAT,OAAmBkY,EAAOnX,MAAP,OAAcf,QAAd,IAAcA,OAAd,EAAcA,EAAOe,KAY1DoX,eAVe,SAAAD,GAAM,OAAIA,EAAOnL,MAWhCmF,YAAa,SAAAzR,GAAM,OACf,kBAACoX,GAAD,iBAAqBpX,EAArB,CAA6B2R,MAAM,sB,uICtB5C,IAAMyF,GAAkBrO,YAAO2I,KAAP3I,CAAH,MC8BbsO,OA1Bf,YAAiE,IAAtCrW,EAAqC,EAArCA,SAAU2V,EAA2B,EAA3BA,UAAWgB,EAAgB,EAAhBA,aAQ5C,OACI,oCACI,kBAAC1G,GAAA,EAAD,CACIC,UAAQ,EACR3R,MAAOoY,EACPxG,QAASnQ,EACT+P,SAbS,SAACO,EAAG/R,GACrBoX,EAAU,gBAAiBpX,IAanBgY,uBAAqB,EACrBC,kBAXc,SAACC,EAAQlY,GAAT,OAAmBkY,EAAOnX,MAAP,OAAcf,QAAd,IAAcA,OAAd,EAAcA,EAAOe,KAYtDoX,eAXW,SAAAD,GAAM,gBAAOA,EAAOtN,UAAd,YAA2BsN,EAAOrN,WAYnDqH,YAAa,SAAAzR,GAAM,OACf,kBAAC,GAAD,iBAAqBA,EAArB,CAA6B2R,MAAM,oBCmCxCiG,OAnDf,YASI,IARAjB,EAQD,EARCA,UACA3T,EAOD,EAPCA,YACAhC,EAMD,EANCA,SACAkV,EAKD,EALCA,SACAC,EAID,EAJCA,OACAX,EAGD,EAHCA,WACA8B,EAED,EAFCA,iBACAO,EACD,EADCA,cAEA,OACI,kBAACpE,GAAA,EAAD,CAAKwD,QAAQ,OAAOa,WAAW,WAAWC,SAAS,OAAOC,GAAI,GAC1D,kBAAC7F,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GAAImE,GAAI,GACnB,kBAACxE,GAAA,EAAD,CAAKyE,GAAI,GACL,kBAAC,GAAD,CACIvB,UAAWA,EACXT,SAAUA,EACVC,OAAQA,MAIpB,kBAAChE,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GAAImE,GAAI,GACnB,kBAACxE,GAAA,EAAD,CAAKyE,GAAI,EAAGnN,MAAO,SACf,kBAACoN,GAAD,CACIzD,QAAS,SAAAnV,GAAK,OAAIoX,EAAU,aAAcpX,IAC1CoV,aAAca,MAI1B,kBAACrD,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GACX,kBAACL,GAAA,EAAD,CAAKyE,GAAI,EAAGF,GAAI,GACZ,kBAAC,GAAD,CACI7H,SAAUnN,EACV2T,UAAWA,EACXyB,gBAAiBd,MAI7B,kBAACnF,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GACX,kBAACL,GAAA,EAAD,CAAKyE,GAAI,EAAGF,GAAI,GACZ,kBAACK,GAAD,CACIR,cAAeA,EACf7W,SAAUA,EACV2V,UAAWA,Q,8VCnD5B,IAAM2B,GAAevP,YAAOwP,KAAPxP,CAAH,MAIZiJ,GAAejJ,YAAO0F,KAAP1F,CAAH,MACD,kBAAG5K,EAAH,EAAGA,KAAH,mBAASvD,MAAkBE,QAAQqD,UAAnC,aAAqB,EAAqBnD,QAItC,kBAAGmD,EAAH,EAAGA,KAAH,mBAASvD,MAAkBE,QAAQqD,UAAnC,aAAqB,EAAqBqa,SCXzDrJ,GAAgB,CACzB,OACA,YACA,eACA,cACA,YACA,iBACA,UAGSsJ,GAAiB,CAC1B,CACIlZ,MAAO,WACPoS,MAAO,WAEX,CACIpS,MAAO,WACPoS,MAAO,YAIF+G,GAAgB,CACzB,YAAa,UACbC,SAAU,UACVC,SAAU,SCLC,SAASC,GAAT,GAA8D,IAAlCtb,EAAiC,EAAjCA,OAAQ+C,EAAyB,EAAzBA,GAAIsB,EAAqB,EAArBA,kBAAqB,EAChDqF,IAAM6C,UAAS,GADiC,oBACjE3B,EADiE,KAC3D2Q,EAD2D,OAEnC7R,IAAM6C,UAAS,GAFoB,oBAEjEiP,EAFiE,KAEtDC,EAFsD,KAIlEC,EAAYhS,IAAMiS,OAAO,MAEzBC,EAAmB,uCAAG,6BAAA9c,EAAA,0DAASkD,EAAT,EAASA,SACnBhC,EADU,uBAEpBub,GAAQ,GACRE,GAAgB,GAHI,SAIdpX,EAAkB,CACpBtB,KACA/C,OAAQgC,IANQ,OAQpByZ,GAAgB,GARI,2CAAH,sDAgBnBxI,EAAc,SAAAvG,GACZgP,EAAUG,SAAWH,EAAUG,QAAQC,SAASpP,EAAM8H,SAG1D+G,GAAQ,IAKZ,OACI,kBAAC3G,GAAA,EAAD,CAAMI,WAAS,EAAC1K,UAAU,SAASiQ,WAAW,UAC1C,kBAAC3F,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAACwF,GAAA,EAAD,CAAahF,KAAK,QAAQ1L,QAAQ,YAAYhJ,IAAKqZ,GAC/C,kBAAC,GAAD,CACIM,kBAAgB,EAChBpb,KARGua,GAAcnb,GASjBkM,QApBC,WACjBqP,GAAQ,SAAAU,GAAQ,OAAKA,OAqBJT,EACG,kBAACU,GAAA,EAAD,CAAkBnF,KAAK,OAAOpJ,MAAM,YAEpC3N,IAIZ,kBAAC+a,GAAD,CACInQ,KAAMA,EACN4B,SAAUkP,EAAUG,QACpBM,YAAU,EACVC,eAAa,IAEZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACG,kBAACC,GAAA,EAAD,iBACQF,EADR,CAEIG,MAAO,CACHC,gBACkB,WAAdH,EACM,aACA,mBAGd,kBAACjK,GAAA,EAAD,KACI,kBAACqK,GAAA,EAAD,CAAmBC,YAAa1J,GAC5B,kBAAC2J,GAAA,EAAD,KACK1B,GAAe5X,KAAI,SAAA4W,GAAM,OACtB,kBAACjN,GAAA,EAAD,CACI9B,IAAK+O,EAAOlY,MACZ6a,SACI3C,EAAOlY,QAAUhC,EAErBkM,QAAS,kBACL0P,EAAoB1B,KAGvBA,EAAO9F,mB,2GC5FjD,IAAM0I,GAAatR,YAAOuR,KAAPvR,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yEAIOA,EAAME,QAAQQ,KAAKN,KAJ1B,SCaSoZ,OARf,YAA+C,IAA1BC,EAAyB,EAAzBA,YAAa3Y,EAAY,EAAZA,SAC9B,OACI,kBAAC+S,GAAA,EAAD,CAAQ6F,KAAK,QAAQ7K,QAAS4K,EAAaE,UAAW,kBAAC8F,GAAD,OACjD3e,ICWE,SAAS6e,GAAT,GAWX,IAVAC,EAUD,EAVCA,QACApZ,EASD,EATCA,UACA8U,EAQD,EARCA,SACAC,EAOD,EAPCA,OACAvU,EAMD,EANCA,kBACAZ,EAKD,EALCA,SACAgC,EAID,EAJCA,YACAsU,EAGD,EAHCA,iBACAO,EAED,EAFCA,cACA4C,EACD,EADCA,eACD,EAC+C3Q,mBAAS0Q,GADxD,oBACQE,EADR,KACyBC,EADzB,KAGCC,qBAAU,WACN,IAAIC,EAASL,EACb,GAAIlD,EAAiB/R,OAAQ,CACzB,IAAMuV,EAAc,IAAIC,IAAIzD,EAAiBzW,KAAI,SAAAC,GAAI,OAAIA,EAAKR,OAC9Dua,EAASL,EAAQzZ,QAAO,SAAA8D,GAAG,OAAIiW,EAAYE,IAAInW,EAAIoW,eAEvD,GAAIpD,EAActS,OAAQ,CACtB,IAAM2V,EAAW,IAAIH,IAAIlD,EAAchX,KAAI,SAAAC,GAAI,OAAIA,EAAKR,OACxDua,EAASA,EAAO9Z,QAAO,SAAA8D,GAAG,OAAIqW,EAASF,IAAInW,EAAIsW,YAEnD,OAAOR,EAAmBE,KAC3B,CAACL,EAASlD,EAAkBO,IAE/B+C,qBAAU,WACF1E,GAAYC,GACZ/U,EbJiB,SAAC8U,EAAUC,GACpC,MAAO,CACH9P,UAAW6P,EACX5P,QAAS6P,GaCKiF,CAAclF,EAAUC,MAEvC,CAACD,EAAU9U,EAAW+U,IAWzB,OACI,oCACI,kBAACzG,GAAA,EAAD,CAAgBC,UAAWC,MACvB,kBAACC,GAAA,EAAD,CAAO/D,aAAW,gBACd,kBAACgE,GAAA,EAAD,KACI,kBAAC,GAAD,KACKX,GAActO,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CAAW4H,IAAK5H,GAAOA,QAInC,kBAACiP,GAAA,EAAD,KACK2K,EAAgBnV,OACbmV,EAAgB7Z,KAAI,SAAAgE,GAAG,OACnB,kBAAC,GAAD,CAAUgK,OAAK,EAACnG,IAAG,cAAS7D,EAAIvE,KAC5B,kBAAC,GAAD,CAAW0O,QAAM,GAAEnK,EAAIwQ,MACvB,kBAAC,GAAD,KArBZ,SAAA/U,GAChB,IAAMsE,EAAW5D,EAASqa,MAAK,SAAAnW,GAAI,OAAIA,EAAK5E,KAAOA,KACnD,MAAM,GAAN,cAAUsE,QAAV,IAAUA,OAAV,EAAUA,EAAUuF,UAApB,mBAAiCvF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAUwF,UAoBVkR,CAAYzW,EAAIsW,UAErB,kBAAC,GAAD,KA5BT,SAAA7a,GAAO,IAAD,EACzB,iBAAO0C,EAAYqY,MAAK,SAAAhY,GAAO,OAAIA,EAAQ/C,KAAOA,YAAlD,aAAO,EAAgDgM,KA4BtBiP,CAAe1W,EAAIoW,aAExB,kBAAC,GAAD,KAAYpW,EAAI2W,cAChB,kBAAC,GAAD,CAAWxM,QAAM,GbjCnB,SAAAyM,GAC9B,IAAMC,EAAoB7G,KAAOvP,SAASmW,GAAME,YAChD,OAAID,ECjDuB,GDkDjB,GAAN,OAAUA,EAAV,QAEE,GAAN,OAAU7G,KAAOvP,SAASmW,GAAMG,QAAhC,aAA4C/G,KACvCvP,SAASmW,GACTI,UAFL,Ka6BqCC,CAAmBjX,EAAIkX,QAE5B,kBAAC,GAAD,KAAY,IACZ,kBAAC,GAAD,KACI,kBAAClD,GAAD,CACIjX,kBACIA,EAEJrE,OAAQsH,EAAItH,OACZ+C,GAAIuE,EAAIvE,UAMxB,kBAAC,GAAD,KACI,kBAACmT,GAAA,EAAD,CAAKpK,EAAG,EAAGsG,UAAU,MAChB,aAOzB,kBAAC8D,GAAA,EAAD,CAAKwD,QAAQ,OAAO+E,eAAe,WAAWC,GAAI,GAC7CvB,EAAgBnV,OAAS,GACtB,kBAAC2W,GAAD,CAAgB7H,YAAaoG,GAA7B,YCnHb,IAAMtL,GAAgB,CACzB,UACA,UACA,uBACA,eACA,OACA,oBAGSC,GAAsB,CAC/B+M,MAAO,GACP7P,KAAM,GACNkP,aAAc,GACd1X,MAAO,GACP3F,KAAM,ICYGie,GAAU,SAAA/G,GAAI,OAAIR,KAAOQ,GAAMK,OAAO,iBCHpC,eAAmD,IAAvC1S,EAAsC,EAAtCA,YAAaW,EAAyB,EAAzBA,sBACpC,OACI,kBAAC+L,GAAA,EAAD,CAAgBC,UAAWC,MACvB,kBAACC,GAAA,EAAD,CAAO/D,aAAW,gBACd,kBAACgE,GAAA,EAAD,KACI,kBAAC,GAAD,KACKX,GAActO,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CAAW4H,IAAK5H,GAAOA,QAInC,kBAACiP,GAAA,EAAD,KACK/M,EAAYuC,OACTvC,EAAYnC,KAAI,SAAAwC,GAAO,OACnB,kBAAC,GAAD,CACIwL,OAAK,EACLnG,IAAKrF,EAAQ/C,GACbmJ,QAAS,kBAAM9F,EAAsBN,KAErC,kBAAC,GAAD,KACK+Y,GAAQ/Y,EAAQgZ,aAErB,kBAAC,GAAD,KACKD,GAAQ/Y,EAAQiZ,aAErB,kBAAC,GAAD,KAAYjZ,EAAQkZ,YACpB,kBAAC,GAAD,KAAYlZ,EAAQiJ,MACpB,kBAAC,GAAD,KAAYjJ,EAAQlF,MACpB,kBAAC4Q,GAAD,KDlCN,SAAA0M,GACtB,IAAMe,EAAc3H,KAAOvP,SAASmW,GAAME,YAC1C,OAAOa,EdXoB,GcWpB,UACEA,EADF,eAEE3H,KAAOvP,SAASmW,GAAMG,QAFxB,aAEoC/G,KAChCvP,SAASmW,GACTI,UAJJ,KCiC0BY,CAAWpZ,EAAQqZ,gBAKhC,kBAAC,GAAD,KACI,kBAAC,GAAD,KAAY,cCpDzB,SAASC,GAAT,GAA8D,IAAnC3b,EAAkC,EAAlCA,SAAU+P,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,OAAQ1Q,EAAM,EAANA,GAelE,OACI,oCACI,kBAAC2Q,GAAA,EAAD,CACIC,UAAQ,EACR5Q,GAAIA,EACJ6Q,QAASnQ,EACT0W,eApBW,SAAAD,GAAM,gBAAOA,EAAOtN,UAAd,YAA2BsN,EAAOrN,WAqBnD7K,MAZe,WACvB,IAAMqd,EAAQ,IAAI7B,IAAI/J,GACtB,OAAOhQ,EAASD,QAAO,SAAAD,GAAI,OAAI8b,EAAM5B,IAAIla,EAAKR,OAU/Buc,GACPtF,uBAAqB,EACrBxG,SArBS,SAACO,EAAGlV,GACrB2U,EACIzQ,EACAlE,EAAKyE,KAAI,SAAAC,GAAI,OAAIA,EAAKR,QAmBlBmR,YAAa,SAAAzR,GAAM,OACf,kBAAC0R,GAAA,EAAD,iBACQ1R,EADR,CAEI4I,QAAQ,WACR+I,MAAM,2BCLfmL,OAlBf,YAA0D,IAAlCvd,EAAiC,EAAjCA,MAAO0D,EAA0B,EAA1BA,aAAc8N,EAAY,EAAZA,SACzC,OACI,kBAACsB,GAAA,EAAD,CAAYV,MAAM,OAAOrF,KAAK,OAAO/M,MAAOA,EAAOwR,SAAUA,GACzD,kBAACuB,GAAA,EAAD,KAAY,UACZ,kBAACH,GAAA,EAAD,CAAMI,WAAS,EAACC,KAAK,UAChBvP,EAAapC,KAAI,SAAAC,GAAI,OAClB,kBAAC2R,GAAA,EAAD,CACI/J,IAAG,uBAAkB5H,GACrBvB,MAAOuB,EACP4R,QAAS,kBAACC,GAAA,EAAD,CAAOzH,MAAO,YACvByG,MAAO7Q,U,oICnBxB,IAAMoR,GAAsBnJ,YAAOoJ,KAAPpJ,CAAH,MCgBjB,SAASgU,GAAT,GASX,IARA5U,EAQD,EARCA,KACAM,EAOD,EAPCA,QACAzH,EAMD,EANCA,SACAiC,EAKD,EALCA,aACA4P,EAID,EAJCA,aACAC,EAGD,EAHCA,YACAkK,EAED,EAFCA,oBACAtZ,EACD,EADCA,qBAEMsP,ELxB0B,SAAAF,GAChC,OAAKA,EAKE1F,OAAO6F,KAAK7D,IAAqB8D,QAAO,SAACC,EAAKzK,GAEjD,OADAyK,EAAIzK,GAAOoK,EAAYpK,GAChByK,IACR,IAPQ,eACA/D,IKqBWgE,CAAqBN,GAErCO,EAASC,aAAU,CACrBN,gBACAO,SAAU,SAAAnX,GACNyW,EAAazW,EAAD,OAAO0W,QAAP,IAAOA,OAAP,EAAOA,EAAaxS,OAIxC,OACI,kBAACiQ,GAAD,CAAYpI,KAAMA,EAAMqI,YAAa/H,EAASsF,MAAM,iBAChD,kBAAC,GAAD,KACI,kBAACoE,GAAA,EAAD,CAAMI,WAAS,GACX,kBAACJ,GAAA,EAAD,CAAMrR,MAAI,GACN,kBAAC2S,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAChC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,OACHqR,MAAM,eACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAO1E,SAIxC,kBAAC6F,GAAA,EAAD,CAAMrR,MAAI,GACN,kBAAC2S,GAAA,EAAD,CAAKI,GAAI,GACL,kBAACnC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,QACHqR,MAAM,QACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAOmL,WAK5C,kBAAChK,GAAA,EAAD,CAAMrR,MAAI,EAACgT,IAAE,GACT,kBAACpC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,eACHsT,aAAcP,EAAOrC,OAAOwK,aAC5BzK,SAAUsC,EAAOM,aACjBhC,MAAM,cACNsL,WAAS,EACTC,WAAS,EACTC,KAAM,EACNvU,QAAQ,cAGhB,kBAACuJ,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAAC6I,GAAD,CACI5L,SAAUsC,EAAOU,cACjBrQ,qBAAsBA,EACtBsN,OAAQqC,EAAOrC,OAAOlN,MACtB9C,SAAUA,EACVV,GAAI,WAGZ,kBAAC6R,GAAA,EAAD,CAAMI,WAAS,EAACyB,QAAQ,YACpB,kBAAC,GAAD,CACIzU,MAAO8T,EAAOrC,OAAO7S,KACrB8E,aAAcA,EACd8N,SAAUsC,EAAOM,gBAGzB,kBAACM,GAAA,EAAD,KACKnB,GACG,kBAAC,GAAD,CACIrJ,QAAS,kBAAMuT,EAAmB,OAAClK,QAAD,IAACA,OAAD,EAACA,EAAaxS,KAChDnC,KAAK,SAFT,UAOJ,kBAAC,GAAD,CAAoBsL,QAAShB,EAAStK,KAAK,WAA3C,UAGA,kBAAC,GAAD,CACIsL,QAAS4J,EAAOR,aAChB1U,KAAK,WAFT,W,kFCvGb,IAAMqW,GAAazL,YAAOoJ,KAAPpJ,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,kCACYA,EAAMkT,QAAQ,GAD1B,mCAEelT,EAAMkT,QAAQ,GAF7B,YCJC,IAAMqB,GAAgB,CACzB,KACA,OACA,OACA,aACA,iBCeW,eAAoD,IAAxChJ,EAAuC,EAAvCA,aAAcnF,EAAyB,EAAzBA,SAAUgC,EAAe,EAAfA,YA2B/C,OACI,kBAAC0M,GAAA,EAAD,CAAgBC,UAAWC,MACvB,kBAACC,GAAA,EAAD,CAAO/D,aAAW,gBACd,kBAACgE,GAAA,EAAD,KACI,kBAAC,GAAD,KACKX,GAActO,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CAAW4H,IAAK5H,GAAOA,QAInC,kBAACiP,GAAA,EAAD,KACK5J,EAAaZ,OACVY,EAAatF,KAAI,SAAAC,GAAI,OACjB,kBAAC,GAAD,CAAU+N,OAAK,EAACnG,IAAK5H,EAAKR,IACtB,kBAACyO,GAAD,KAAkBjO,EAAKR,IACvB,kBAACyO,GAAD,KAzCN,SAAC,GAA4B,IAA1B1I,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAChC,GAAID,GAAaC,EACb,MAAM,GAAN,OAAUD,EAAV,cAAyBC,GAwCA8W,CAActc,EAAKC,SAExB,kBAACgO,GAAD,KACKjO,EAAKC,OAAOqF,MAEjB,kBAAC2I,GAAD,KAzCJ,SAAC,GAAD,IAAGjL,EAAH,EAAGA,MAAH,OACpB9C,EACKkS,QAAO,SAACC,EAAKrS,GAIV,OAHA,OAAIgD,QAAJ,IAAIA,OAAJ,EAAIA,EAAOqK,SAAS+G,OAAOpU,EAAKR,OAC5B6S,EAAIzJ,KAAJ,UAAY5I,EAAKqJ,UAAjB,YAA8BrJ,EAAKsJ,WAEhC+I,IACR,IACFjD,KAAK,MAkCmBmN,CAAgBvc,EAAKC,SAE1B,kBAACgO,GAAD,KAlCD,SAAC,GAAD,IAAGoB,EAAH,EAAGA,SAAH,OACvBnN,EACKkQ,QAAO,SAACC,EAAKrS,GAIV,OAHA,OAAIqP,QAAJ,IAAIA,OAAJ,EAAIA,EAAUhC,SAAS+G,OAAOpU,EAAKR,OAC/B6S,EAAIzJ,KAAJ,UAAY5I,EAAKwL,OAEd6G,IACR,IACFjD,KAAK,MA2BmBoN,CAAmBxc,EAAKC,aAKrC,kBAAC,GAAD,KACI,kBAAC,GAAD,KAAY,c,8LC1EjC,IAAMiR,GAAejJ,aAAO,cAAGwU,SAAH,EAAaC,QAAb,IAAyB7O,EAAzB,8CAC/B,kBAACF,GAAA,EAAWE,KADY5F,CAAH,MAGL,qBAAGnO,MAAkBkT,QAAQ,MAC5B,qBAAGlT,MAAkBkT,QAAQ,MAC1B,YAAmC,IAAhCyP,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAAS5iB,EAAY,EAAZA,MACtC,OAAI2iB,EAAiB3iB,EAAME,QAAQC,QAAQC,KACvCwiB,EAAgB5iB,EAAME,QAAQI,QAAQF,KACnC,iBAEF,YAAmC,IAAhCuiB,EAA+B,EAA/BA,SAAmB3iB,GAAY,EAArB4iB,QAAqB,EAAZ5iB,OAC3B,OAAI2iB,EAAiB3iB,EAAME,QAAQgU,KAAK/T,QACpBH,EAAME,QAAQgU,KAAK2O,aCRlCrK,GAAuB,SAAAN,GAAW,MAAK,CAChDuC,KAAMvC,EACA+B,KAAO/B,EAAYuC,KxBVG,cwBUqBK,OxBVrB,cwBWtB,GACN8F,aAAc1I,EAAcA,EAAY0I,aAAe,GACvDkC,UAAW5K,EACL+B,KAAO/B,EAAW,UxBTD,SwBS6B4C,OxBT7B,SwBUjBb,KAAO,QxBVU,SwBUYa,OxBVZ,SwBWvBiI,QAAS7K,EACH+B,KAAO/B,EAAW,QxBZD,SwBY2B4C,OxBZ3B,SwBajBb,KAAO,QxBbU,SwBaYa,OxBbZ,SwBcvBuF,WAAYnI,EAAcA,EAAW,WAAiB,EACtD8K,YAAa9K,EAAcA,EAAW,YAAkB,IAG/C+K,GAAe,SAAAC,GACxB,IAAKA,EAAUvY,OAAQ,MAAO,GAC9B,IAAMwY,EAAiBD,EAClBE,MAAM,GACN9K,QACG,SAAC+K,EAAMC,GAAP,OAAerJ,KAAOvP,SAAS4Y,EAAInC,OAAOoC,IAAIF,KAC9CpJ,KAAOvP,SAASwY,EAAU,GAAG/B,QAG/BH,EAAQwC,KAAKC,MAAMN,EAAeO,QAAQC,WAC1C1C,EAAUuC,KAAKC,MAAMN,EAAeO,QAAQzC,WAClD,OAAKD,EAGC,GAAN,OAAUA,EAAV,aAAoBC,EAApB,KAFU,GAAN,OAAUA,EAAV,aAKK2C,GAAuB,SAAA7J,GAAY,MAAK,CACjDtO,UAAWwO,OACNS,QAAQX,GACRc,WxBjCa,GwBkCbC,OxB5CuB,cwB6C5BpP,QAASuO,OACJS,QAAQX,GACRc,WxBpCa,GwBqCbC,OxBhDuB,gBwBmDnB+I,GAAiB,SAAAjJ,GAAU,OACpCX,OAASS,QAAQE,GAAYc,QAAQ,YC7B1B,mBAAwD,IAA5C3B,EAA2C,EAA3CA,aAAcxT,EAA6B,EAA7BA,KAAMud,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAAe,EAChC7U,mBAAS,IADuB,oBAC3D8U,EAD2D,KAChDC,EADgD,KAGlEjE,qBAAU,WACN,GAAKjG,EAAL,CAIA,IAAqBa,EAQrBqJ,GARqBrJ,EAQKb,EAPfG,MAAMC,KAAK,CAAExP,OAAQ,IAAK1E,KAAI,SAACmU,EAAGC,GAAJ,OACjCJ,OACKS,QAAQE,GACRC,WAAWR,EAAQ,aAP5B4J,EAAa,MAYlB,CAAClK,IAEJ,IDe8Ba,ECdxB+H,EAAW,SAAAuB,GAAG,OAAIjK,KAAOiK,GAAKrI,OAAOkI,EAAa,QACxD,OACIhK,GACI,kBAAClB,GAAA,EAAD,CAAKwD,QAAQ,OAAOc,SAAS,QACxB6G,EAAU/d,KAAI,SAAAie,GACX,IAAMtB,EAlC1B,SAAsBrc,EAAMkU,GACxB,OAAOlU,EAAK4d,MAAK,SAAAje,GAAI,OACjB+T,KAAO/T,EAAKuU,KzBhBY,cyBgBYoB,OAChC5B,KAAOQ,EzBjBa,cyBkBpB,UA8BwB2J,CAAa7d,EAAM2d,GACnC,OACI,kBAAC,GAAD,CACIxK,KAAK,QACL7K,QAAS,kBAAMiV,EAAOI,IACtBvB,SAAUA,EAASuB,GACnBtB,QAASA,EACT5U,QAAQ,YACRF,IAAG,eAAUoW,IAdlB,SAAAA,GAAG,OAAIjK,KAAOiK,GAAKpJ,OzBtChB,MyBsDGuJ,CAAWH,OAIxB,kBAACrL,GAAA,EAAD,CAAK1I,MAAM,OAAO8I,GAAI,GAClB,kBAACrF,GAAA,EAAD,CAAY5F,QAAQ,cDNN4M,ECOUb,EDNxCE,OAASqK,IAAI,QAASrK,OAASS,QAAQE,GAAY2J,SAASzJ,OAAO,aE1D1DvG,GAAgB,CACzB,YACA,OACA,eACA,OACA,YACA,UAGSiQ,GACK,2B,0FCNX,IAAMrQ,GAAkBhG,aAAO,cAAGxL,OAAH,IAAcoR,EAAd,kCAClC,kBAACO,GAAA,EAAcP,KADY5F,CAAH,MAGf,kBAAG5K,EAAH,EAAGA,KAAH,mBAASvD,MAAkBE,QAAQqD,UAAnC,aAAqB,EAAqBnD,QCgCxC,mBASX,IARAwf,EAQD,EARCA,QACA6E,EAOD,EAPCA,cACAV,EAMD,EANCA,YACAhK,EAKD,EALCA,aACAxE,EAID,EAJCA,SACApO,EAGD,EAHCA,SACAud,EAED,EAFCA,iBACAC,EACD,EADCA,gBACD,EACyCtY,IAAM6C,SAAS,IADxD,oBACQ0V,EADR,KACsBC,EADtB,KAGCxY,IAAM2T,WAAU,WACZ,IAAIzZ,EAAOqZ,EACPmE,IACAxd,EAAOqZ,EAAQzZ,QAAO,SAAAD,GAAI,OACtB+T,KAAO/T,EAAKuU,K5BvDI,c4BuDoBoB,OAChC5B,KAAO8J,GACP,WAIPhK,IACDxT,EAAO,IAEXse,EAAgBte,KACjB,CAACqZ,EAASmE,EAAahK,IAE1B1N,IAAM2T,WAAU,WACZ0E,EAAiBzB,GAAarD,MAC/B,CAACA,EAAS8E,IAEbrY,IAAM2T,WAAU,WACZ2E,EAAgB1B,GAAa2B,MAC9B,CAACA,EAAcD,IAelB,OACI,kBAAC7P,GAAA,EAAD,CAAgBC,UAAWC,MACvB,kBAACC,GAAA,EAAD,CAAO/D,aAAW,gBACd,kBAACgE,GAAA,EAAD,KACI,kBAAC,GAAD,KACKX,GAActO,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CAAW4H,IAAK5H,GAAOA,QAInC,kBAACiP,GAAA,EAAD,KACKyP,EAAaja,OACVia,EAAa3e,KAAI,SAACgE,EAAK6a,GAAN,OACb,kBAAC,GAAD,CACI7Q,OAAK,EACLnG,IAAK7D,EAAIvE,GACTmJ,QAAS,kBA7BrB,SAAA5E,GACZwa,EAAcxa,GA4ByB8a,CAAQ9a,KAEvB,kBAAC,GAAD,CAAW8K,UAAU,KAAKM,MAAM,OAC3ByP,EAAI,GAET,kBAAC,GAAD,KACK7K,KAAOhQ,EAAIwQ,K5B9GhB,c4B8GwCK,O5B7GzC,a4BiHC,kBAAC,GAAD,KAnCL,SAAApV,GAAE,uBAAI6P,EAASkL,MAAK,SAAAva,GAAI,OAAIA,EAAKR,KAAOA,YAAtC,aAAI,EAAuCgM,KAoCnCiP,CAAe1W,EAAIoW,aAExB,kBAAC,GAAD,KArCL,SAAA3a,GAAE,uBAAIyB,EAASsZ,MAAK,SAAAva,GAAI,OAAIA,EAAKR,KAAOA,YAAtC,aAAI,EAAuCnC,KAsCnCyhB,CAAe/a,EAAI+Y,cAExB,kBAAC,GAAD,KA1FhC,SAAsBnC,GAClB,IAAIZ,EAAM,UAAMY,EAAN,UACJe,EAAc3H,KAAOvP,SAASmW,GAAME,YAI1C,OAHIa,E5BzBuB,K4B0BvB3B,EAAM,UAAM2B,EAAN,aAEH3B,EAoFiCgF,CAAahb,EAAIkX,QAC7B,kBAAC,GAAD,CAAiB5d,MAxC7BZ,EAwC2CsH,EAAItH,OAvChD,aAAXA,EACM,UACW,aAAXA,EACA,QACA,YAoCuBsH,EAAItH,SAzCrB,IAAAA,KA8CI,kBAAC,GAAD,KACI,kBAACkW,GAAA,EAAD,CAAK9D,UAAU,KAAKtG,EAAG,GAClB,gC,UCrHlB,SAASyW,GAAT,GAOX,IANAvgB,EAMD,EANCA,MACAe,EAKD,EALCA,GACAqR,EAID,EAJCA,MACAZ,EAGD,EAHCA,SACA3V,EAED,EAFCA,MACA2kB,EACD,EADCA,WAOA,OACI,oCACI,kBAAC,KAAD,CAAyBjJ,MAAOC,MAC5B,kBAAC,KAAD,CACIiJ,MAAM,EACN1f,GAAIA,EACJlF,QAASA,EACTuW,MAAOA,EACPpS,MAAOsV,KAAOtV,E7B5BP,S6B6BPwR,SAdK,SAAAkP,GACjBlP,EAASzQ,EAAI2f,GACbF,EAAWzf,IAaC4f,WAAY9kB,M,kIChCzB,IAAM+kB,GAAoBpX,YAAOqX,KAAPrX,CAAH,MCef,SAASsX,GAAT,GASX,IARAtP,EAQD,EARCA,SACA3U,EAOD,EAPCA,KAEAkE,GAKD,EANCgM,KAMD,EALChM,IACAf,EAID,EAJCA,MACA+gB,EAGD,EAHCA,SACAC,EAED,EAFCA,SACAC,EACD,EADCA,YACD,EACmBvZ,IAAM6C,SAjB5B,SAAuB1N,EAAMqkB,GACzB,OAAOrkB,EAAKyE,KAAI,SAAAC,GAAI,MAAK,CACrBvB,MAAOuB,EAAK2f,EAAKlhB,OACjBoS,MAAO7Q,EAAK2f,EAAK9O,WAejB+O,CAActkB,EAAM,CAAEuV,MAAO2O,EAAU/gB,MAAOghB,KAD3CpP,EADR,qBASC,OACI,kBAACgP,GAAD,KACI,kBAACQ,GAAA,EAAD,KAAaH,GACb,kBAACI,GAAA,EAAD,CAAQrhB,MAAOA,GAAS,GAAIwR,SAPf,SAAAO,GACjBP,EAASzQ,EAAIgR,EAAES,OAAOxS,SAOb4R,EAAQtQ,KAAI,SAAAC,GAAI,OACb,kBAAC0J,GAAA,EAAD,CAAU9B,IAAG,UAAKpI,EAAL,YAAWQ,EAAKvB,OAASA,MAAOuB,EAAKvB,OAC7CuB,EAAK6Q,YCpCf,SAASkP,GAAT,GAAsD,IAA7BC,EAA4B,EAA5BA,WAAYnM,EAAgB,EAAhBA,aAChD,OACI,kBAAClB,GAAA,EAAD,CAAKwD,QAAQ,OAAO+E,eAAe,iBAC/B,kBAACvI,GAAA,EAAD,CAAKsN,KAAM,EAAG9J,QAAQ,QAClB,kBAACzI,GAAA,EAAD,CAAY5F,QAAQ,WAAWsC,MAAM,gBAAgB8D,QAAM,GACtD,gBAEL,kBAACyE,GAAA,EAAD,CAAKuN,GAAI,GACL,kBAACxS,GAAA,EAAD,CACIyS,MAAM,QACNrY,QAAQ,YACRsY,cAAY,EACZhW,MAAM,cACN8D,QAAM,EACNmS,WAAS,GAERL,KAIb,kBAACrN,GAAA,EAAD,CAAKsN,KAAM,EAAG9J,QAAQ,OAAO+J,GAAI,GAC7B,kBAACxS,GAAA,EAAD,CAAY5F,QAAQ,WAAWsC,MAAM,iBAChC,UAEL,kBAACuI,GAAA,EAAD,CAAKuN,GAAI,GACL,kBAACxS,GAAA,EAAD,CACIyS,MAAM,QACNrY,QAAQ,YACRsY,cAAY,EACZhW,MAAM,cACNiW,WAAS,GAERxM,MCpCzB,IAae/J,GAbGC,cAAW,SAAAjQ,GACzB,MAAO,CACH+S,KAAM,CACF,kBAAmB,CACfyT,aAAcxmB,EAAMkT,QAAQ,IAEhC,uBAAwB,CACpBuT,OAAQ,QC0BxB,SAASC,GAAStQ,EAAQrJ,GACtB9I,QAAQgG,IAAI,UAAW8C,GACvB9I,QAAQgG,IAAI,WAAYmM,GACxB,IAbuB+D,EAAMxI,EAavBgV,EAAS,GAMf,OAnBuBxM,EAcA/D,EAAO0M,UAdDnR,EAcYyE,EAAO2M,QAbhD9e,QAAQgG,IAAI,SAAUgQ,KAAOE,ElCrBN,SkCqByBW,OlCrBzB,UkCsBvB7W,QAAQgG,IAAI,OAAQgQ,KAAOtI,ElCtBJ,SkCsBqBmJ,OlCtBrB,UkCuBvB7W,QAAQgG,IACJ,YACAgQ,KAAOE,ElCzBY,SkCyBOyM,SAAS3M,KAAOtI,ElCzBvB,WkC2BhBsI,KAAOE,ElC3BS,SkC2BUyM,SAAS3M,KAAOtI,ElC3B1B,YkCmCnBgV,EAAO7D,UAAY0B,GACnBmC,EAAO5D,QAAUyB,IAErBvgB,QAAQgG,IAAI,WAAY0c,GACjBA,EAGI,SAASxE,GAAT,GAUX,IATA5U,EASD,EATCA,KACAqI,EAQD,EARCA,YACAL,EAOD,EAPCA,SACApO,EAMD,EANCA,SACA0f,EAKD,EALCA,WACA3O,EAID,EAJCA,YACAzS,EAGD,EAHCA,UACAse,EAED,EAFCA,YACAhK,EACD,EADCA,aAEMnJ,EAAUZ,KAEVoI,EAAgBI,GAAqBN,GAEtCA,IACDE,EAAcqC,KAAOR,KAAO8J,ElC/DJ,ckC+DmCjJ,OlC/DnC,ekCoE5B,IAAMrC,EAASC,aAAU,CACrBN,gBACAsO,YACAI,kBAAkB,EAClBC,gBAAgB,EAChBpO,SAAU,SAAAnX,GACNqlB,EAAWrO,GAAqBhX,GAAtB,OAA6B0W,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAaxS,OAI5DzB,QAAQgG,IAAI,WAAYwO,EAAOuO,SAC/B,IAAMC,EAAe,uCAAG,sBAAAxlB,EAAA,sEACdgE,EAAUyS,EAAYxS,IADR,OAEpBkQ,IAFoB,2CAAH,qDAKfsR,EAAe,SAAAxhB,GACjB+S,EAAO0M,WAAP,eACO1M,EAAOuO,QADd,gBAEKthB,GAAK,MAIRwgB,EAAajM,KAAOxB,EAAOrC,OAAOqE,KlC3FZ,ckC2FoCK,OAC5D,WAGJ,OACI,kBAACnF,GAAD,CAAYpI,KAAMA,EAAMqI,YAAaA,EAAazC,MAAM,cACpD,kBAAC8S,GAAD,CACIC,WAAYA,EACZnM,aAAcA,IAElB,0BAAMnB,aAAa,OACf,kBAACrB,GAAA,EAAD,CAAMI,WAAS,EAACxG,UAAWP,EAAQmC,MAC/B,kBAACwE,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,GAAImE,GAAI,IACnB,kBAAC9F,GAAA,EAAD,CAAMI,WAAS,EAACC,KAAK,UACjB,kBAACiB,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,GAAD,CACIpT,GAAG,YACHqR,MAAM,eACNvW,MACIiY,EAAOuO,QAAQjE,SACftK,EAAOuO,QAAQlE,WACfrK,EAAOkO,OAAO7D,UAElBne,MAAO8T,EAAOrC,OAAP,UACPD,SAAUsC,EAAOU,cACjBgM,WAAY+B,KAGpB,kBAACrO,GAAA,EAAD,CAAKI,GAAI,GACL,kBAAC,GAAD,CACIkO,OAAO,SACPzhB,GAAG,UACHlF,MACIiY,EAAOuO,QAAQjE,SACftK,EAAOuO,QAAQlE,WACfrK,EAAOkO,OAAO5D,QAElBhM,MAAM,aACNpS,MAAO8T,EAAOrC,OAAP,QACPD,SAAUsC,EAAOU,cACjBgM,WAAY+B,OAK5B,kBAAC3P,GAAA,EAAD,CAAMI,WAAS,EAACyB,QAAQ,iBACpB,kBAACqM,GAAD,CACIjkB,KAAM2F,EACNye,YAAY,aACZF,SAAS,OACTC,SAAS,KACTxP,SAAUsC,EAAOU,cACjBzT,GAAG,cACHf,MAAO8T,EAAOrC,OAAP,cAEX,kBAACqP,GAAD,CACIG,YAAY,iBACZpkB,KAAM+T,EACNmQ,SAAS,OACTC,SAAS,KACTxP,SAAUsC,EAAOU,cACjBzT,GAAG,aACHf,MAAO8T,EAAOrC,OAAP,eAInB,kBAACmB,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAACpC,GAAA,EAAD,CACIG,UAAQ,EACRvR,GAAG,eACH4c,WAAS,EACTtJ,aAAcP,EAAOrC,OAAOwK,aAC5BzK,SAAUsC,EAAOM,aACjBhC,MAAM,cACNsL,WAAS,EACTE,KAAM,EACNvU,QAAQ,cAGhB,kBAACqL,GAAA,EAAD,KACKnB,GACG,kBAAC,GAAD,CACIrJ,QAASoY,EACT1jB,KAAK,SAFT,UAOJ,kBAAC,GAAD,CAAoBsL,QAAS+G,EAAarS,KAAK,WAA/C,UAGA,kBAAC,GAAD,CACIsL,QAAS4J,EAAOR,aAChB1U,KAAK,WAFT,WCzKL,SAAS6jB,GAAT,GAIX,IAHAC,EAGD,EAHCA,aACAC,EAED,EAFCA,cACAvN,EACD,EADCA,aAOA,OACI,oCACKA,GACG,kBAAClB,GAAA,EAAD,CAAKwD,QAAQ,QACT,kBAACxD,GAAA,EAAD,CAAKuN,GAAI,GACL,kBAACxS,GAAA,EAAD,CACIyS,MAAM,QACNrY,QAAQ,YACRsY,cAAY,EACZhW,MAAM,eAdD,SAAAyJ,GAAY,qBAC7B8J,GAAe9J,GAAce,OnCbf,WmCYe,gBXoCjBF,EWjCCJ,GXkCzBP,OAASS,QAAQE,GAAYgB,MAAM,YWlCKd,OnCfd,YwBgDF,IAAAF,EWpBC2M,CAAqBxN,MAKrCuN,GACG,kBAACzO,GAAA,EAAD,CAAKwD,QAAQ,QACT,kBAACzI,GAAA,EAAD,CAAY5F,QAAQ,WAAWsC,MAAM,iBAChC,yBAEL,kBAACuI,GAAA,EAAD,CAAKuN,GAAI,GACL,kBAACxS,GAAA,EAAD,CACIyS,MAAM,QACNrY,QAAQ,YACRsY,cAAY,EACZhW,MAAM,eAELgX,KAKhBD,GACG,kBAACxO,GAAA,EAAD,CAAKwD,QAAQ,QACT,kBAACzI,GAAA,EAAD,CAAY5F,QAAQ,WAAWsC,MAAM,iBAChC,wBAEL,kBAACuI,GAAA,EAAD,CAAKuN,GAAI,GACL,kBAACxS,GAAA,EAAD,CACIyS,MAAM,QACNrY,QAAQ,YACRsY,cAAY,EACZhW,MAAM,eAEL+W,M,+aChEtB,IAAMG,GAAkBrZ,YAAO6G,KAAP7G,CAAH,MAef0B,GAAa1B,YAAO2B,KAAP3B,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yDAEOA,EAAME,QAAQC,QAAQ4P,KAF7B,6CAIW/P,EAAME,QAAQW,KAAK,KAJ9B,mB,+aChBC,IAAM2mB,GAAkBrZ,YAAO6G,KAAP7G,CAAH,MAeFA,YAAO2B,KAAP3B,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yDAEOA,EAAME,QAAQC,QAAQ4P,KAF7B,6CAIW/P,EAAME,QAAQW,KAAK,KAJ9B,mB,+aChBC,IAAM2mB,GAAkBrZ,YAAO6G,KAAP7G,CAAH,MAeFA,YAAO2B,KAAP3B,CAAH,MACjB,gBAAGnO,EAAH,EAAGA,MAAH,yDAEOA,EAAME,QAAQC,QAAQ4P,KAF7B,6CAIW/P,EAAME,QAAQW,KAAK,KAJ9B,mBCpBC,SAAS4mB,GAAT,GACH,QADiC,EAAN/jB,GAIxB,SAASgkB,GAAiBC,GAC7B,OAAQA,EAAKjkB,GAGV,SAASkkB,GAAT,GAA4B,IAAPlkB,EAAM,EAANA,GACxB,MAAoB,WAAX,OAAFA,QAAE,IAAFA,OAAA,EAAAA,EAAI4N,MAGR,SAASuW,GAAT,GAA0B,IAAPnkB,EAAM,EAANA,GACtB,MAAoB,SAAX,OAAFA,QAAE,IAAFA,OAAA,EAAAA,EAAI4N,MCCA,QACX,CACIG,KAAM,IACNqW,OAAO,EACPC,MAAO,CAACN,IACRO,SAAU,UACVC,cAAeL,GACfM,YAAaL,GACb9S,UCnBO,WACX,OAAO,8DDoBP,CACItD,KAAM,UACNqW,OAAO,EACPC,MAAO,CAACL,IACRM,SAAU,IACVjT,UELO,WAAmB,IAAD,EACL7F,mBAAS,CAAEwF,MAAO,GAAIyT,SAAU,KAD3B,oBACtB3mB,EADsB,KAChB4mB,EADgB,KAErBzkB,EAXZ,WAAwB,IAEHA,EACbyI,KADAK,UAAa9I,QAEjB,OAAOyJ,aAAY,iBAAO,CACtBzJ,cAMgB0kB,GAAZ1kB,QAER,OACI,kBAAC6jB,GAAD,KACI,8BACI,kBAAC3O,GAAA,EAAD,CAAKwD,QAAQ,OAAOiM,cAAc,SAASjH,GAAI,GAC3C,kBAACvK,GAAA,EAAD,CACIpR,GAAG,cACHqR,MAAM,QACNZ,SAAU,SAAAO,GAAC,OACP0R,EAAQ,eAAK5mB,EAAN,CAAYkT,MAAOgC,EAAES,OAAOxS,YAG3C,kBAACmS,GAAA,EAAD,CACIpR,GAAG,iBACHqR,MAAM,WACNxT,KAAK,WACL4S,SAAU,SAAAO,GAAC,OACP0R,EAAQ,eAAK5mB,EAAN,CAAY2mB,SAAUzR,EAAES,OAAOxS,aAIlD,kBAACkU,GAAA,EAAD,CAAKwD,QAAQ,OAAO+E,eAAgB,WAAYC,GAAI,GAChD,kBAACxN,GAAA,EAAD,CACI7F,QAAQ,YACRsC,MAAM,UACNzB,QAAS,WACLlL,EAAQnC,KAJhB,YAWR,kBAACqX,GAAA,EAAD,CAAKwI,GAAI,GACL,kBAAC,GAAD,CAAY1P,GAAI,oBAAhB,uBF9BZ,CACIF,KAAM,mBACNqW,OAAO,EACPC,MAAO,GACPC,SAAU,IACVjT,UGfO,WAA2B,IAC9BxQ,EATK,WAAO,IACZkI,EAAcL,KAAdK,UAER,OAAOW,aAAY,iBAAO,CACtB7I,iBAAkBkI,EAAUlI,qBAKH8I,GAArB9I,iBAD6B,EAEP2K,oBAAS,GAFF,oBAE9B5O,EAF8B,KAErBioB,EAFqB,KAI/B9P,EAASC,aAAU,CACrBN,cAAe,CACX1D,MAAO,IAEXiE,SAAS,WAAD,4BAAE,WAAMnX,GAAN,SAAAC,EAAA,sEACA8C,EAAiB/C,GADjB,OAEN+mB,GAAW,GAFL,2CAAF,mDAAC,KAMb,OAAIjoB,EAEI,kBAACuY,GAAA,EAAD,CAAKpK,EAAG,GACJ,kBAACmF,GAAA,EAAD,CAAY5F,QAAQ,MAApB,oDAQR,oCACI,kBAAC,GAAD,KACI,8BACI,kBAAC8I,GAAA,EAAD,CACIpR,GAAG,QACHqR,MAAM,QACNZ,SAAUsC,EAAOM,aACjBC,aAAcP,EAAOrC,OAAO1B,QAEhC,kBAACmE,GAAA,EAAD,CAAKwD,QAAQ,OAAO+E,eAAgB,WAAYC,GAAI,GAChD,kBAACxN,GAAA,EAAD,CACI7F,QAAQ,YACRsC,MAAM,UACNzB,QAAS4J,EAAOoO,YAHpB,gBHlBpB,CACIpV,KAAM,kBACNqW,OAAO,EACPC,MAAO,CAACL,IACRM,SAAU,IACVjT,UIhBO,WAA0B,IAC7BvQ,EAbK,WAAO,IACZiI,EAAcL,KAAdK,UAER,OAAOW,aAAY,iBAAO,CACtB5I,gBAAiBiI,EAAUjI,oBASH6I,GAApB7I,gBAD4B,EAEN0K,oBAAS,GAFH,oBAE7BsZ,EAF6B,KAEpBC,EAFoB,KAG9BrjB,EANC,IAAIsjB,gBAAgBC,cAAcC,QAQnCnQ,EAASC,aAAU,CACrBN,cAAe,CACXjW,MAAOiD,EAAOnD,IAAI,SAClBkmB,SAAU,GACVU,sBAAuB,IAE3BlQ,SAAS,WAAD,4BAAE,WAAMnX,GAAN,SAAAC,EAAA,sEACA+C,EAAgBhD,GADhB,OAENinB,GAAW,GAFL,2CAAF,mDAAC,KAKb,OAAID,EACO,kBAAC,IAAD,CAAU7W,GAAG,YAIpB,oCACI,kBAAC,GAAD,KACI,8BACI,kBAACkH,GAAA,EAAD,CAAKwD,QAAQ,OAAOiM,cAAc,SAASjH,GAAI,GAC3C,kBAACvK,GAAA,EAAD,CACIpR,GAAG,WACHqR,MAAM,WACNZ,SAAUsC,EAAOM,aACjBxV,KAAK,WACLyV,aAAcP,EAAOrC,OAAO+R,WAEhC,kBAACrR,GAAA,EAAD,CACIpR,GAAG,wBACHqR,MAAM,mBACNZ,SAAUsC,EAAOM,aACjBxV,KAAK,WACLyV,aAAcP,EAAOrC,OAAO0S,mBAGpC,kBAACjQ,GAAA,EAAD,CAAKwD,QAAQ,OAAO+E,eAAgB,WAAYC,GAAI,GAChD,kBAACxN,GAAA,EAAD,CACI7F,QAAQ,YACRsC,MAAM,UACNzB,QAAS4J,EAAOoO,YAHpB,gBJvBpB,CACIpV,KAAM,qBACNqW,OAAO,EACPC,MAAO,CAACN,GAAcI,IACtBG,SAAU,IACVjT,UKbO,WAAuB,IAAD,EAjBrC,WACI,IAAM5H,EAAQf,KAEd,OAAOgB,aAAY,iBAAO,CACtB7G,KAAM4G,EAAMT,SAASnG,KACrBY,SAAUgG,EAAMT,SAASvF,SACzBiB,YAAa+E,EAAMR,aAAavE,YAChC5B,UAAW2G,EAAMT,SAASlG,UAC1BU,cAAeiG,EAAMT,SAASxF,cAC9BoB,iBAAkB6E,EAAMR,aAAarE,iBACrCzB,SAAUsG,EAAMT,SAAS7F,SACzBC,YAAaqG,EAAMT,SAAS5F,YAC5BG,YAAakG,EAAMT,SAASzF,YAC5BX,aAAc6G,EAAMT,SAASpG,iBAgB7B+G,GAVA9G,EAF6B,EAE7BA,KACAY,EAH6B,EAG7BA,SACAiB,EAJ6B,EAI7BA,YACA5B,EAL6B,EAK7BA,UACA8B,EAN6B,EAM7BA,iBACApB,EAP6B,EAO7BA,cACAL,EAR6B,EAQ7BA,SACAC,EAT6B,EAS7BA,YACAG,EAV6B,EAU7BA,YACAX,EAX6B,EAW7BA,aAX6B,EAcD4I,mBAAS+K,OAASS,WAdjB,oBAc1BX,EAd0B,KAcZD,EAdY,OAeH5K,qBAfG,oBAe1B6U,EAf0B,KAebD,EAfa,OAgBY5U,oBAAS,GAhBrB,oBAgB1B6Z,EAhB0B,KAgBVC,EAhBU,OAiBG9Z,qBAjBH,oBAiB1B+Z,EAjB0B,KAiBdC,EAjBc,OAkBSha,qBAlBT,oBAkB1BoY,EAlB0B,KAkBX5C,EAlBW,OAmBOxV,qBAnBP,oBAmB1BmY,EAnB0B,KAmBZ1C,EAnBY,KAqBjC3E,qBAAU,WACFjG,GACA+J,EAAOD,GAAe9J,MAE3B,CAACA,IAEJiG,qBAAU,WACDjG,EAILvT,EAAUod,GAAqB7J,IAH3BzT,MAIL,CAACE,EAAWuT,EAAczT,IAE7B0Z,qBAAU,WACN1X,IACApB,EAAc,CACV9B,OAAQ,CACJsB,KAAM,OAGf,CAACQ,EAAeoB,IAEnB,IAAM6gB,EAAY,WACdH,GAAmB,IAGjBI,EAAa,WACfJ,GAAmB,GACnBE,EAAc,OAQZG,EAAgB,uCAAG,WAAO7nB,EAAMkE,GAAb,SAAAjE,EAAA,0DACrBwnB,EADqB,gCACFniB,EAAYtF,EAAMkE,GADhB,6CAC4BmB,EAASrF,GADrC,OAErB4nB,IAFqB,2CAAH,wDAKhBnC,EAAe,uCAAG,WAAMvhB,GAAN,SAAAjE,EAAA,6DACpB2nB,IADoB,SAEdniB,EAAYvB,GAFE,uBAGdc,EAAUod,GAAqB7J,IAHjB,2CAAH,sDAMrB,OACI,kBAACuP,GAAA,EAAD,KACI,kBAAC/R,GAAA,EAAD,CAAMI,WAAS,EAACC,KAAK,QACjB,kBAACiB,GAAA,EAAD,CAAK1I,MAAM,MAAMoZ,EAAG,EAAGC,SAAU,KAC7B,kBAACjM,GAAD,CACIzD,QAASA,EACTC,aAAcA,KAGtB,kBAAClB,GAAA,EAAD,CAAK0Q,EAAG,GACJ,kBAACE,GAAD,CACI1P,aAAcA,EACdgK,YAAaA,EACbD,OAAQA,EACRvd,KAAMA,KAGd,kBAACsS,GAAA,EAAD,CACI0Q,EAAG,EACHlN,QAAQ,OACR+E,eAAe,gBACfjR,MAAM,OACNgN,SAAS,QAET,kBAACtE,GAAA,EAAD,KACI,kBAAC,GAAD,CAAWY,YAAa0P,GAAxB,kBAIJ,kBAACtQ,GAAA,EAAD,CACIwD,QAAQ,OACRiM,cAAc,SACdpL,WAAW,YAEX,kBAACkK,GAAD,CACIC,aAAcA,EACdC,cAAeA,EACfvN,aAAcA,MAI1B,kBAACxC,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,KACf,kBAACwQ,GAAD,CACI9J,QAASrZ,EACTgP,SAAUnN,EACVjB,SAAUA,EACVsd,cA9DM,SAAAxa,GAClBif,EAAcjf,GACdkf,KA6DYpF,YAAaA,EACbhK,aAAcA,EACd2K,iBAAkBA,EAClBC,gBAAiBA,IAGpBoE,GACG,kBAAC,GAAD,CACIxb,KAAMwb,EACNnT,YAAawT,EACb7T,SAAUnN,EACVjB,SAAUA,EACV0f,WAAYwC,EACZ5jB,UAAWwhB,EACX/O,YAAa+Q,EACblF,YAAaA,EACbhK,aAAcA,QLrHlC,CACItI,KAAM,mBACNqW,OAAO,EACPC,MAAO,CAACN,GAAcG,IACtBI,SAAU,IACVjT,UMvBO,WAA2B,IAAD,EAfzC,WACI,IAAM5H,EAAQf,KAEd,OAAOgB,aAAY,iBAAO,CACtB7G,KAAM4G,EAAMT,SAASnG,KACrB6B,YAAa+E,EAAMR,aAAavE,YAChChC,SAAU+G,EAAMP,UAAUxG,SAC1ByD,cAAesD,EAAMP,UAAU/C,cAC/BrD,UAAW2G,EAAMT,SAASlG,UAC1B8B,iBAAkB6E,EAAMR,aAAarE,iBACrCtB,kBAAmBmG,EAAMT,SAAS1F,kBAClCoE,WAAY+B,EAAMN,YAAYzB,eAc9BiC,GARA9G,EAFiC,EAEjCA,KACA6B,EAHiC,EAGjCA,YACAE,EAJiC,EAIjCA,iBACA9B,EALiC,EAKjCA,UACAJ,EANiC,EAMjCA,SACAyD,EAPiC,EAOjCA,cACA7C,EARiC,EAQjCA,kBACAoE,EATiC,EASjCA,WAGE4O,EAAcQ,GAAc,IAAIS,MAZD,EAcD/L,mBAAS8K,GAdR,oBAc9BY,EAd8B,KAclB+O,EAdkB,OAeLza,mBAASyL,GAAYX,IAfhB,oBAe9BsB,EAf8B,KAepBsO,EAfoB,OAgBT1a,mBAAS6L,GAAUf,IAhBV,oBAgB9BuB,EAhB8B,KAgBtBsO,EAhBsB,OAiBW3a,mBAAS,IAjBpB,oBAiB9BwN,EAjB8B,KAiBZoN,EAjBY,OAkBK5a,mBAAS,IAlBd,oBAkB9B+N,EAlB8B,KAkBf8M,EAlBe,KAoBrC/J,qBAAU,WACFpF,IACAgP,EAAYjP,GAAYC,IACxBiP,EAAU9O,GAAUH,OAEzB,CAACA,IAEJoF,qBAAU,WACF3E,GAAoBC,EAAUC,GAC9BoO,EAAcnP,GAAcc,IAGhCqO,EAAc,QACf,CAACrO,EAAUC,IAEd,IAAMyO,EAAiBC,uBAAY,SAAC1mB,EAAMoB,IAChB,CAClB2W,SAAU,kBAAMsO,EAAYjlB,IAC5B4W,OAAQ,kBAAMsO,EAAUllB,IACxBiW,WAAY,kBAAM+O,EAAchlB,IAChC+X,iBAAkB,kBAAMoN,EAAoBnlB,IAC5CsY,cAAe,kBAAM8M,EAAiBplB,MAG5BpB,OACf,IAqBH,OAnBAyc,qBAAU,WACD5X,EAAYuC,QACbrC,IAEClC,EAASuE,QACVd,MAEL,CAACvB,EAAkBuB,EAAezB,EAAahC,IAa9C,kBAACkjB,GAAA,EAAD,KACI,kBAAC,GAAD,CACIhO,SAAUA,EACVC,OAAQA,EACRX,WAAYA,EACZ8B,iBAAkBA,EAClBO,cAAeA,EACflB,UAAWiO,EACX5hB,YAAaA,EACb7B,KAAMA,EACNH,SAAUA,IAEd,kBAACyS,GAAA,EAAD,CAAKuE,GAAI,GACL,kBAAC,GAAD,CACI5W,UAAWA,EACX8U,SAAUA,EACVC,OAAQA,EACRqE,QAASrZ,EACTH,SAAUA,EACVgC,YAAaA,EACbpB,kBAAmBA,EACnB0V,iBAAkBA,EAClBO,cAAeA,EACf4C,eAlCO,WACnBzU,EAAW,CACPK,UAAW6P,EACX5P,QAAS6P,EACT/P,KAAMoP,EACN1R,MAAO+T,EAAchX,KAAI,SAAAC,GAAI,OAAIA,EAAKR,MACtC6P,SAAUmH,EAAiBzW,KAAI,SAAAC,GAAI,OAAIA,EAAKR,eNrCpD,CACI+L,KAAM,YACNqW,OAAO,EACPC,MAAO,CAACN,GAAcG,IACtBI,SAAU,IACVjT,UO9BO,WAAqB,IAAD,EACc7F,oBAAS,GADvB,oBACxB6Z,EADwB,KACRC,EADQ,OAnBnC,WAAqB,IAAD,EACkC5c,KAA1CQ,EADQ,EACRA,UAAWD,EADH,EACGA,aAAc/H,EADjB,EACiBA,aAEjC,OAAOwI,aAAY,iBAAO,CACtBhF,YAAauE,EAAavE,YAC1BC,aAAcsE,EAAatE,aAC3BjC,SAAUwG,EAAUxG,SACpBkC,iBAAkBqE,EAAarE,iBAC/BuB,cAAe+C,EAAU/C,cACzBnB,gBAAiBiE,EAAajE,gBAC9BC,gBAAiBgE,EAAahE,gBAC9BC,gBAAiB+D,EAAa/D,gBAC9BC,kBAAmB8D,EAAa9D,kBAChCE,sBAAuB4D,EAAa5D,sBACpCE,mBAAoB0D,EAAa1D,mBACjCpE,eAAgBD,EAAaC,mBAmB7BwI,GAXAjF,EAJ2B,EAI3BA,YACAC,EAL2B,EAK3BA,aACAjC,EAN2B,EAM3BA,SACAsC,EAP2B,EAO3BA,gBACAC,EAR2B,EAQ3BA,gBACAL,EAT2B,EAS3BA,iBACAO,EAV2B,EAU3BA,kBACAgB,EAX2B,EAW3BA,cACAd,EAZ2B,EAY3BA,sBACAE,EAb2B,EAa3BA,mBACAL,EAd2B,EAc3BA,gBAGJoX,qBAAU,WACD5Z,EAASuE,QACVd,MAEL,CAACA,EAAezD,EAASuE,SAE5BqV,qBAAU,WACD3X,EAAasC,QACd9B,MAEL,CAACA,EAAmBR,EAAasC,SAEpCqV,qBAAU,WACD5X,EAAYuC,QACbrC,MAEL,CAACA,EAAkBF,EAAYuC,SAElCqV,qBAAU,WACF/W,GACAkgB,MAEL,CAAClgB,IAEJ,IAAMkgB,EAAY,WACdH,GAAmB,IAGjBI,EAAa,WACfJ,GAAmB,GACnBjgB,KAQEmhB,EAAe,uCAAG,WAAO1oB,EAAMkE,GAAb,SAAAjE,EAAA,0DACpBwH,EADoB,gCAERN,EAAgBnH,EAAMkE,GAFd,6CAGRgD,EAAgBlH,GAHR,OAIpB4nB,IAJoB,2CAAH,wDAWrB,OACI,kBAACE,GAAA,EAAD,KACI,kBAAC/R,GAAA,EAAD,CAAMI,WAAS,GACX,kBAAC,GAAD,CAAYzR,MAAI,EAACgT,GAAI,IACjB,kBAACtF,GAAA,EAAD,CAAY5F,QAAQ,MAApB,wBAEJ,kBAACuJ,GAAA,EAAD,CAAMrR,MAAI,EAACgT,IAAE,GACT,kBAAC,GAAD,CAAWO,YAAa0P,GAAxB,mBAIJ,kBAAC5R,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAACL,GAAA,EAAD,CAAKsR,GAAI,GACL,kBAACC,GAAD,CACIhiB,YAAaA,EACbW,sBAnBF,SAAAvH,GAClBuH,EAAsBvH,SAuBjBunB,GACG,kBAAC,GAAD,CACIxb,KAAMwb,EACNlb,QAASub,EACThjB,SAAUA,EACViC,aAAcA,EACd4P,aAAciS,EACdhS,YAAajP,EACbmZ,oBA5CY,SAAA1c,GACxBkD,EAAgBlD,GAChB0jB,UPpBJ,CACI3X,KAAM,cACNqW,OAAO,EACPC,MAAO,CAACN,GAAcG,IACtBI,SAAU,IACVjT,UQ1CO,WAAqB,IAAD,EACc7F,oBAAS,GADvB,oBACxB6Z,EADwB,KACRC,EADQ,OAdnC,WAAqB,IACTpc,EAAcR,KAAdQ,UAER,OAAOQ,aAAY,iBAAO,CACtBhH,SAAUwG,EAAUxG,SACpByD,cAAe+C,EAAU/C,cACzBQ,mBAAoBuC,EAAUvC,mBAC9BE,gBAAiBqC,EAAUrC,gBAC3BL,aAAc0C,EAAU1C,aACxBC,aAAcyC,EAAUzC,aACxBC,aAAcwC,EAAUxC,iBAexBiD,GAPAjH,EAJ2B,EAI3BA,SACAyD,EAL2B,EAK3BA,cACAU,EAN2B,EAM3BA,gBACAF,EAP2B,EAO3BA,mBACAH,EAR2B,EAQ3BA,aACAC,EAT2B,EAS3BA,aACAC,EAV2B,EAU3BA,aAGE+e,EAAY,WACdH,GAAmB,IAGjBI,EAAa,WACfJ,GAAmB,GACnB3e,KAQJ2V,qBAAU,WACD5Z,EAASuE,QACVd,MAEL,CAACA,EAAezD,IAEnB4Z,qBAAU,WACFzV,GACA4e,MAEL,CAAC5e,IAEJ,IAAM8f,EAAY,uCAAG,WAAO7oB,EAAMkE,GAAb,SAAAjE,EAAA,0DACjB8I,EADiB,gCAELJ,EAAa3I,EAAMkE,GAFd,6CAGLwE,EAAa1I,GAHR,OAIjB4nB,IAJiB,2CAAH,wDAOlB,OACI,kBAACE,GAAA,EAAD,KACI,kBAAC/R,GAAA,EAAD,CAAMI,WAAS,GACX,kBAACiC,GAAD,CAAY1T,MAAI,EAACgT,GAAI,IACjB,kBAACtF,GAAA,EAAD,CAAY5F,QAAQ,MAApB,gBAEJ,kBAACuJ,GAAA,EAAD,CAAMrR,MAAI,EAACgT,IAAE,GACT,kBAAC,GAAD,CAAWO,YAAa0P,GAAxB,kBAEJ,kBAAC5R,GAAA,EAAD,CAAMrR,MAAI,EAACgT,GAAI,IACX,kBAACL,GAAA,EAAD,CAAKsR,GAAI,GACL,kBAACG,GAAD,CACIzV,cAAezO,EACfiE,mBAAoBA,OAKnC0e,GACG,kBAAC/Q,GAAD,CACIzK,KAAMwb,EACNlb,QAASub,EACTnR,aAAcoS,EACdnS,YAAa3N,EACb4N,iBAhDS,SAAAzS,GACrB0E,EAAa1E,GACb0jB,URoBJ,CACI3X,KAAM,kBACNqW,OAAO,EACPC,MAAO,CAACN,GAAcG,IACtBI,SAAU,IACVjT,USzDO,WAA0B,IAAD,EAdxC,WAAqB,IAAD,EAC+C3I,KAAvDS,EADQ,EACRA,YAAajI,EADL,EACKA,aAAcgI,EADnB,EACmBA,UAAWD,EAD9B,EAC8BA,aAE9C,OAAOS,aAAY,iBAAO,CACtB7B,aAAcsB,EAAYtB,aAC1BD,kBAAmBuB,EAAYvB,kBAC/BzG,eAAgBD,EAAaC,eAC7BuD,YAAauE,EAAavE,YAC1BE,iBAAkBqE,EAAarE,iBAC/BlC,SAAUwG,EAAUxG,SACpByD,cAAe+C,EAAU/C,kBAazBwD,GAPA/B,EAFgC,EAEhCA,kBACAC,EAHgC,EAGhCA,aACA1G,EAJgC,EAIhCA,eACAyD,EALgC,EAKhCA,iBACAF,EANgC,EAMhCA,YACAyB,EAPgC,EAOhCA,cACAzD,EARgC,EAQhCA,SAiCJ,OA9BAiG,IAAM2T,WAAU,WACZ,IAAMuK,EAAQ,uCAAG,sBAAA9oB,EAAA,6DACboD,GAAe,GADF,SAEPyD,IAFO,OAGbzD,GAAe,GAHF,2CAAH,qDAKTuD,EAAYuC,QACb4f,MAEL,CAACjiB,EAAkBF,EAAYuC,OAAQ9F,IAE1CwH,IAAM2T,WAAU,WACZ,IAAMuK,EAAQ,uCAAG,sBAAA9oB,EAAA,6DACboD,GAAe,GADF,SAEPgF,IAFO,OAGbhF,GAAe,GAHF,2CAAH,qDAKTuB,EAASuE,QACV4f,MAEL,CAAC1gB,EAAehF,EAAgBuB,EAASuE,SAE5C0B,IAAM2T,WAAU,YACE,uCAAG,sBAAAve,EAAA,6DACboD,GAAe,GADF,SAEPyG,IAFO,OAGbzG,GAAe,GAHF,2CAAH,qDAKd0lB,KACD,CAACjf,EAAmBzG,IAEnB,kBAACykB,GAAA,EAAD,KACI,kBAACzQ,GAAA,EAAD,CAAKwI,GAAI,GACL,kBAACzN,GAAA,EAAD,CAAY5F,QAAQ,MAApB,mBAEJ,kBAAC6K,GAAA,EAAD,CAAKwI,GAAI,GACL,kBAACmJ,GAAD,CACIpkB,SAAUA,EACVgC,YAAaA,EACbmD,aAAcA,SCbnBkf,GA1CI,SAAAC,GAAS,OACxB,kBAAC,KAAD,KACI,kBAAC,GAAoBA,GACrB,kBAAC,IAAD,KACKrX,GAAOpN,KAAI,SAAC0kB,EAAOtQ,GAAR,OACR,kBAAC,IAAD,CACIvM,IAAKuM,EACL5I,KAAMkZ,EAAMlZ,KACZqW,MAAO6C,EAAM7C,MACb8C,OAAQ,SAAA7d,GACJ,OACI4d,EAAM1C,eACN0C,EAAM1C,cAAcyC,GAGhB,kBAAC,IAAD,CACI/Y,GAAI,CAAEkZ,SAAU,sBAIxBF,EAAMzC,aAAeyC,EAAMzC,YAAYwC,GAEnC,kBAAC,IAAD,CACI/Y,GAAI,CAAEkZ,SAAU,yBAIpBF,EAAM5C,OACV4C,EAAM5C,MAAM+C,OAAM,SAAAC,GAAI,OAAIA,EAAKL,MAC/B,kBAACC,EAAM5V,UAAchI,GAErB,kBAAC,IAAD,CAAU4E,GAAI,CAAEkZ,SAAUF,EAAM3C,kBAMhD,kBAAC,IAAD,CAAOjT,UAAWpG,Q,+PCjDvB,IAAMqc,GAAiB7c,YAAO8c,KAAP9c,CAAH,MACZ,qBAAGnO,MAAkBymB,OAAOyE,MAAQ,KAGtCC,GAAuBhd,YAAOid,KAAPjd,CAAH,MCWjC,IAYekd,GAZI,WAAO,IACd9jB,EATZ,WAA2B,IACf3C,EAAiBwH,KAAjBxH,aAER,OAAOwI,aAAY,iBAAO,CACtB7F,cAAe3C,EAAa2C,kBAKN+jB,GAAlB/jB,cAER,OAAKA,EAGD,kBAACyjB,GAAD,CAAgBzd,KAAMhG,GAClB,kBAAC4jB,GAAD,CAAsB7a,MAAM,eAJT,MCsEhBib,OAxDf,WAAgB,IAAD,EAlBf,WAAwB,IAAD,EAIfnf,KAFAK,EAFe,EAEfA,UACgB5H,EAHD,EAGfD,aAAgBC,eAGpB,OAAOuI,aAAY,iBAAO,CACtBlL,yBAA0BuK,EAAUvK,yBACpCoC,uBAAwBmI,EAAUnI,uBAClCd,gBAAiBiJ,EAAUjJ,gBAC3Ba,QAASoI,EAAUpI,QACnBH,SAAUuI,EAAUvI,SACpBW,eAAgBA,EAChBnB,GAAI+I,EAAU/I,GACdvB,MAAOsK,EAAUtK,UAcjBkmB,GARA/jB,EAFO,EAEPA,uBACApC,EAHO,EAGPA,yBACAsB,EAJO,EAIPA,gBACAa,EALO,EAKPA,QACAQ,EANO,EAMPA,eACAnB,EAPO,EAOPA,GACO8nB,EARA,EAQPrpB,MACA+B,EATO,EASPA,SAoCJ,OAjCA8b,qBAAU,WAAM,4CACZ,gCAAAve,EAAA,oEAEcU,EAAQ2B,aAAaW,QAAQ,UAAY+mB,GAFvD,wBAKY3mB,GAAe,GAL3B,SAMkB3C,EAAyBC,GAN3C,uBAOqCkC,IAPrC,OAOkBonB,EAPlB,OAQkB/nB,EARlB,OAQuB+nB,QARvB,IAQuBA,OARvB,EAQuBA,EAAYjqB,KACvB8C,EAAuBZ,EAAIvB,GATvC,wBAWYqB,IAXZ,0DAcQS,QAAQzD,MAAR,MAdR,yBAgBQqE,GAAe,GAhBvB,8EADY,sBAoBPnB,GApBQ,WAAD,wBAqBRgoB,KAEL,CACCxpB,EACAoC,EACAZ,EACA8nB,EACAnnB,EACAb,EACAqB,IAIA,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYnB,GAAIA,EAAIQ,SAAUA,IAC9B,kBAACynB,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACze,GAAD,QC3EQyC,QACW,cAA7BtO,OAAOuqB,SAASC,UAEe,UAA7BxqB,OAAOuqB,SAASC,UAEhBxqB,OAAOuqB,SAASC,SAASC,MACvB,2DCHN,IAAMld,GAAUmd,cAEhBC,IAASpB,OACL,kBAAC,IAAa,IAAIpe,GACd,kBAAC,IAAD,CAAQoC,QAASA,IACb,kBAAC,EAAD,KACI,kBAAC,GAAD,SAIZ/C,SAASogB,eAAe,SD0GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhsB,GACLyD,QAAQzD,MAAMA,EAAM4C,c","file":"static/js/main.3eb19f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Medium.78b3d2f6.otf\";","module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Bold.ebbc4701.otf\";","module.exports = __webpack_public_path__ + \"static/media/404.24525eca.png\";","import { createMuiTheme } from \"@material-ui/core\";\nimport { green, red, blue, grey } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#a8bcd8\",\n        },\n        logo: \"#d1d2d4\",\n        success: {\n            main: green[200],\n        },\n        error: {\n            main: red[200],\n        },\n        info: {\n            main: blue[500],\n        },\n        default: {\n            main: grey[500],\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../../constants/theme\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nexport default function ({ children }) {\n    return (\n        <StylesProvider injectFirst>\n            <MuiThemeProvider theme={theme}>\n                <ThemeProvider theme={theme}>{children}</ThemeProvider>\n            </MuiThemeProvider>\n        </StylesProvider>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nimport AmericaMedium from \"assets/fonts/GT-America-Extended-Medium.otf\";\nimport AmericaBold from \"assets/fonts/GT-America-Extended-Bold.otf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GT-America'),\n        url(${AmericaMedium});\n        font-weight: 300;\n        font-style: normal;\n    };\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GTAmerica'),\n        url(${AmericaBold});\n        font-weight: 600;\n        font-style: normal;\n    }\n`;\n","export const API_URL = window.API_URL\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass AuthService {\n    login = async data => {\n        return axios.post(`${API_URL}/auth/login`, {\n            ...data,\n        });\n    };\n\n    logout = async () => axios.post(`${API_URL}/auth/logout`);\n\n    forgotPassword = async body =>\n        axios.post(`${API_URL}/auth/forgot-password`, { ...body });\n\n    resetPassword = body =>\n        axios.post(`${API_URL}/auth/reset-password`, { ...body });\n\n    getMe = async () => axios.get(`${API_URL}/me`);\n\n    addAuthHeaderInterceptor = async ({ token, onError }) => {\n        return axios.interceptors.request.use(\n            config => {\n                if (token) {\n                    config.headers[\"Authorization\"] = \"Bearer \" + token;\n                }\n                return config;\n            },\n            error => {\n                if (error.response.status === 401) {\n                    onError();\n                }\n                Promise.reject(error);\n            }\n        );\n    };\n\n    clearInterceptor = interceptor => {\n        axios.interceptors.request.eject(interceptor);\n    };\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\n// Services\nimport authService from \"../services/api/AuthService\";\n\nclass AuthStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n    }\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setInitialState = () => {\n        this.token = undefined;\n        this.me = undefined;\n    };\n\n    onLogin = async data => {\n        try {\n            this.showLoader(true);\n            const response = await authService.login(data);\n            const token = response?.data?.access_token;\n\n            if (token) {\n                await localStorage.setItem(\"token\", token);\n                this.setUserToken(token);\n            }\n        } catch (err) {\n            console.error(err);\n            this.showNotification(\"error\", err?.response?.data?.message);\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onLogout = async data => {\n        try {\n            await authService.logout();\n            await localStorage.removeItem(\"token\");\n\n            authService.clearInterceptor(this.authInterceptor);\n            this.setInitialState();\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    onGetMe = async () => {\n        const response = await authService.getMe();\n        return response.data;\n    };\n\n    dispatchLoginFulfilled = (me, token) => {\n        this.me = me;\n        this.token = token;\n    };\n\n    setUserToken = token => {\n        this.token = token;\n    };\n\n    onForgotPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.forgotPassword(body);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onResetPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.resetPassword(body);\n            this.showNotification(\n                \"success\",\n                \"Password was successfully changed\"\n            );\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    addAuthHeaderInterceptor = async () => {\n        const token = await localStorage.getItem(\"token\");\n\n        this.authInterceptor = await authService.addAuthHeaderInterceptor({\n            token,\n            onError: this.setInitialState,\n        });\n    };\n}\n\ndecorate(AuthStore, {\n    // state\n    me: observable.ref,\n    token: observable,\n\n    //actions\n    setInitialState: action,\n    onLogin: action,\n    dispatchLoginFulfilled: action,\n    setUserToken: action,\n    addAuthHeaderInterceptor: action,\n    onGetMe: action,\n    onForgotPassword: action,\n});\n\nexport default AuthStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass LogService {\n    getLogs = params => axios.get(`${API_URL}/log`, { params });\n    addLog = body => axios.post(`${API_URL}/log`, { ...body });\n    updateLog = (params, pathId) =>\n        axios.put(`${API_URL}/log/${pathId}`, { ...params });\n    deleteLog = id => axios.delete(`${API_URL}/log/${id}`);\n    setLogStatus = ({ id, status }) =>\n        axios.post(`${API_URL}/log/${id}/${status}`);\n    getLogTypes = params => axios.get(`${API_URL}/log-type`, { ...params });\n}\n\nconst logService = new LogService();\n\nexport default logService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\nimport logService from \"../services/api/LogService\";\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nconst updateLogListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, id) => {\n        return dataArray.filter(item => item.id !== id);\n    },\n    create: (userList, item) => [...userList, item],\n};\n\nclass LogStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.logs = [];\n        this.logTypes = [];\n        this.page = DEFAULT_PAGE;\n        this.perPage = DEFAULT_PER_PAGE;\n    }\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setEmptyLogs = () => {\n        this.logs = [];\n    };\n\n    onGetLogs = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.getLogs({\n                ...params,\n                page: this.page,\n                per_page: this.perPage,\n            });\n            this.logs = response?.data?.data;\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onAddLog = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.addLog(params);\n            this.logs = updateLogListStrategy[\"create\"](\n                this.logs,\n                response?.data?.data\n            );\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLog = async (params, pathId) => {\n        try {\n            this.setLoading(true);\n            const response = await logService.updateLog(params, pathId);\n            this.logs = updateLogListStrategy[\"update\"](\n                this.logs,\n                response?.data?.data\n            );\n            this.showNotification(\"success\", \"Log saved\");\n            this.showMessage({\n                message: \"Log saved\",\n                type: \"success\",\n            });\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLogStatus = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.setLogStatus(params);\n            this.logs = updateLogListStrategy[\"update\"](\n                this.logs,\n                response?.data?.data\n            );\n            this.showNotification(\"success\", \"Log status changed\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onDeleteLog = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLog(id);\n            this.logs = updateLogListStrategy[\"delete\"](this.logs, id);\n            this.showNotification(\"success\", \"Log deleted\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetLogTypes = async config => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.getLogTypes(config);\n            this.logTypes = data?.data;\n        } catch (err) {\n            console.error(err);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    set logTypes(data) {\n        this.logTypes = data;\n    }\n\n    set logs(logs) {\n        this.logs = logs;\n    }\n}\n\ndecorate(LogStore, {\n    // state\n    logs: observable,\n    logTypes: observable,\n\n    // actions\n    onGetLogs: action,\n    onAddLog: action,\n    onUpdateLog: action,\n    onDeleteLog: action,\n    onUpdateLogStatus: action,\n    updateLogInList: action,\n    setEmptyLogs: action,\n    setLogTypes: action,\n    onGetLogTypes: action,\n});\n\nexport default LogStore;\n","export const DEFAULT_PAGE = 1;\nexport const DEFAULT_PER_PAGE = 100;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass LoadersStore {\n    isLoadingPage = true;\n\n    setLoadingPage = status => {\n        this.isLoadingPage = status;\n    };\n}\n\ndecorate(LoadersStore, {\n    // state\n    isLoadingPage: observable,\n\n    // actions\n    setLoadingPage: action,\n});\n\nexport default LoadersStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ProjectService {\n    getProjectList = () => axios.get(`${API_URL}/project`);\n    getProjectTypes = () => axios.get(`${API_URL}/project/types`);\n    getProjectUserList = id => axios.get(`${API_URL}/project/${id}/users`);\n    createProject = body => axios.post(`${API_URL}/project`, { ...body });\n    updateProject = (body, id) =>\n        axios.put(`${API_URL}/project/${id}`, { ...body });\n    deleteProject = id => axios.delete(`${API_URL}/project/${id}`);\n}\n\nconst projectService = new ProjectService();\n\nexport default projectService;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n// Services\nimport projectService from \"../services/api/ProjectService\";\n\n// Constants\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => projectService.deleteProject(id),\n    update: () => projectService.updateProject(body, id),\n    create: () => projectService.createProject(body),\n});\n\nconst updateProjectListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    create: (userList, item) => [...userList, item],\n};\nclass ProjectStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.projectList = [];\n        this.projectTypes = [];\n        this.projectUserList = [];\n        this.editingProjectData = undefined;\n\n        this.page = DEFAULT_PAGE;\n        this.perPage = DEFAULT_PER_PAGE;\n    }\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setInitialState = () => {\n        this.projectList = [];\n        this.projectTypes = [];\n    };\n\n    onGetProjectList = async () => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectList({\n                page: this.page,\n                per_page: this.perPage,\n            });\n            this.projectList = response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    handleFetchProjectData = async (actionType, data) => {\n        try {\n            this.setLoading(true);\n            const project = await fetchStrategy(data)[actionType]();\n            this.projectList = updateProjectListStrategy[actionType](\n                this.projectList,\n                project?.data?.data\n            );\n            this.showNotification(\"success\", \"Project saved\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onCreateProject = body => this.handleFetchProjectData(\"create\", { body });\n\n    onUpdateProject = (body, id) =>\n        this.handleFetchProjectData(\"update\", { body, id });\n\n    onDeleteProject = id => this.handleFetchProjectData(\"delete\", { id });\n\n    onGetProjectTypes = async () => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectTypes();\n            this.projectTypes = response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetProjectUserList = async id => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectUserList(id);\n            return response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    setEditingProjectData = async project => {\n        if (!project) {\n            runInAction(() => {\n                this.editingProjectData = project;\n            });\n            return;\n        }\n        const users = await this.onGetProjectUserList(project.id);\n        runInAction(() => {\n            this.editingProjectData = {\n                ...project,\n                users: users.map(item => item.id),\n            };\n        });\n    };\n\n    set projectList(data) {\n        this.projectList = data;\n    }\n    s;\n    set projectTypes(data) {\n        this.projectTypes = data;\n    }\n    set projectUserList(data) {\n        this.projectUserList = data;\n    }\n}\n\ndecorate(ProjectStore, {\n    // state\n    projectList: observable,\n    projectTypes: observable,\n    projectUserList: observable,\n    editingProjectData: observable,\n\n    //actions\n    setInitialState: action,\n    onGetProjectList: action.bound,\n    onGetProjectTypes: action,\n    setEditingProjectData: action,\n    onCreateProject: action,\n    onUpdateProject: action,\n    onDeleteProject: action,\n});\n\nexport default ProjectStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass UserService {\n    getUserList = params => axios.get(`${API_URL}/user`, { params });\n    getMe = () => axios.get(`${API_URL}/me`);\n    getUser = id => axios.get(`${API_URL}/user/${id}`);\n    createUser = body => axios.post(`${API_URL}/user`, { ...body });\n    updateUser = (body, pathId) =>\n        axios.put(`${API_URL}/user/${pathId}`, { ...body });\n    deleteUser = id => axios.delete(`${API_URL}/user/${id}`);\n}\n\nconst userService = new UserService();\n\nexport default userService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\nimport userService from \"../services/api/UserService\";\n\n// Constants\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => userService.deleteUser(id),\n    update: () => userService.updateUser(body, id),\n    create: () => userService.createUser(body),\n});\n\nconst updateUserListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    create: (userList, item) => [...userList, item],\n};\n\nclass UserStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.userList = [];\n        this.editingUserData = undefined;\n        this.page = DEFAULT_PAGE;\n        this.perPage = DEFAULT_PER_PAGE;\n    }\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    onGetUserList = async () => {\n        try {\n            this.setIsLoading(true);\n            const response = await userService.getUserList({\n                page: this.page,\n                per_page: this.perPage,\n            });\n            this.userList = response?.data?.data;\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    handleFetchUserData = async (actionType, data) => {\n        try {\n            this.setIsLoading(true);\n            const userData = await fetchStrategy(data)[actionType]();\n            this.userList = updateUserListStrategy[actionType](\n                this.userList,\n                userData?.data?.data\n            );\n            this.showNotification(\"success\", \"User saved\");\n        } catch (error) {\n            console.log(\"error?.response: \", error?.response?.data?.message);\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onCreateUser = body => this.handleFetchUserData(\"create\", { body });\n\n    onUpdateUser = (body, id) =>\n        this.handleFetchUserData(\"update\", { body, id });\n\n    onDeleteUser = id => this.handleFetchUserData(\"delete\", { id });\n\n    set userList(userList) {\n        this.userList = userList;\n    }\n\n    setEditingUserData = user => {\n        this.editingUserData = user;\n    };\n}\n\ndecorate(UserStore, {\n    // state\n    userList: observable,\n    editingUserData: observable,\n\n    // actions\n    setEditingUserData: action,\n    onGetUserList: action,\n    onCreateUser: action,\n    onUpdateUser: action,\n    onDeleteUser: action,\n});\n\nexport default UserStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass NotificationStore {\n    notificationQueue = [];\n\n    showNotification = data => {\n        this.notificationQueue = [\n            ...this.notificationQueue,\n            {\n                ...data,\n                duration: 2000,\n                id: this.notificationQueue.length,\n            },\n        ];\n    };\n    hideNotification = id => {\n        this.notificationQueue = this.notificationQueue.filter(\n            item => item.id !== id\n        );\n    };\n}\n\ndecorate(NotificationStore, {\n    // state\n    notificationQueue: observable,\n\n    // actions\n    showNotification: action,\n    hideNotification: action,\n});\n\nexport default NotificationStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ExportService {\n    download = params =>\n        axios.get(`${API_URL}/export`, {\n            params,\n            responseType: \"blob\",\n        });\n    getHistoryItems = params =>\n        axios.get(`${API_URL}/export-history`, { params });\n}\n\nconst exportService = new ExportService();\n\nexport default exportService;\n","export const EXCEL_TYPE =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n","// Core\nimport { action, decorate, observable } from \"mobx\";\nimport exportService from \"../services/api/ExportService\";\n\n//constants\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\nimport { EXCEL_TYPE } from \"constants/export\";\n\nclass ExportStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.historyItems = [];\n        this.page = DEFAULT_PAGE;\n        this.perPage = DEFAULT_PER_PAGE;\n    }\n\n    showErrorMessage = message => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type: \"error\",\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    downloadFile(response, { week, from_date, to_date }) {\n        const blob = new Blob([response.data], {\n            type: EXCEL_TYPE,\n        });\n        const a = document.createElement(\"a\");\n        a.href = window.URL.createObjectURL(blob);\n        a.download = `KW_${week ? week : \"\"}_${\n            from_date && to_date ? `${from_date}-${to_date}` : \"\"\n        }.xlsx`;\n        a.click();\n    }\n\n    onDownload = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.download(params);\n            if (response.headers[\"content-type\"] === EXCEL_TYPE) {\n                this.downloadFile(response, params);\n            } else {\n                this.showErrorMessage(\"Error exporting report\");\n            }\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetHistoryItems = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.getHistoryItems({\n                page: this.page,\n                per_page: this.perPage,\n                ...params,\n            });\n            this.historyItems = response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    set historyItems(items) {\n        this.historyItems = items;\n    }\n}\n\ndecorate(ExportStore, {\n    //observables\n    historyItems: observable,\n    page: observable,\n    perPage: observable,\n\n    // actions\n    onDownload: action,\n    onGetHistoryItems: action,\n});\n\nexport default ExportStore;\n","// Core\nimport React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\n// Stores\nimport AuthStore from \"./AuthStore\";\nimport LogStore from \"./LogStore\";\nimport LoadersStore from \"./LoadersStore\";\nimport ProjectStore from \"./ProjectStore\";\nimport UserStore from \"./UserStore\";\nimport NotificationStore from \"./NotificationStore\";\nimport ExportStore from \"./ExportStore\";\n\nclass RootStore {\n    constructor() {\n        this.authStore = new AuthStore(this);\n        this.logStore = new LogStore(this);\n        this.loadersStore = new LoadersStore(this);\n        this.projectStore = new ProjectStore(this);\n        this.userStore = new UserStore(this);\n        this.notificationStore = new NotificationStore(this);\n        this.exportStore = new ExportStore(this);\n    }\n}\n\n// Hook\nexport const useStores = () => {\n    return React.useContext(MobXProviderContext);\n};\n\nexport default RootStore;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Slide from \"@material-ui/core/Slide\";\n\n// Store\nimport { useStores } from \"../../store\";\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"up\" />;\n}\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        notificationQueue: store.notificationStore.notificationQueue,\n        hideNotification: store.notificationStore.hideNotification,\n    }));\n}\n\nexport default function Notification() {\n    const { notificationQueue, hideNotification } = useStore();\n\n    return notificationQueue.map(item => (\n        <Snackbar\n            open\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n            }}\n            autoHideDuration={item.duration}\n            TransitionComponent={SlideTransition}\n            onClose={() => hideNotification(item.id)}\n            key={item.id}\n        >\n            <MuiAlert elevation={6} variant=\"filled\" severity={item.type}>\n                {item.message}\n            </MuiAlert>\n        </Snackbar>\n    ));\n}\n","import styled from 'styled-components'\nimport backgroundImg from './img/404.png'\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    padding-top: 10px;\n    box-sizing: border-box;\n`\n\nexport const PageContainer = styled.div`\n    width: 870px;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: url(${backgroundImg}) no-repeat center center;\n    background-size: 100%;\n`\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 380px;\n`\n\nexport const MainText = styled.p`\n    margin: 0;\n    font-size: 23px;\n    line-height: 35px;\n    margin-bottom: 40px;\n`\n\nexport const SecondaryText = styled.p`\n    margin: 0;\n    font-size: 18px;\n    line-height: 27px;\n    margin-bottom: 40px;\n`\n","// Core\nimport React from 'react'\n\n//Styles\nimport {\n    PageWrapper,\n    PageContainer,\n    MainText,\n    SecondaryText,\n    Content,\n} from './styles'\n\nconst NoMatch = ({ history }) => (\n    <PageWrapper>\n        <PageContainer>\n            <Content>\n                <MainText>\n                    Oops! The page you were looking for doesn’t exist\n                </MainText>\n                <SecondaryText>\n                    You may have misstyped the address or the page may have\n                    moved\n                </SecondaryText>\n                <div>\n                    <button\n                        onClick={() => {\n                            history.push('/')\n                        }}\n                    >\n                        Go to mainpage\n                    </button>\n                </div>\n            </Content>\n        </PageContainer>\n    </PageWrapper>\n)\n\nexport default NoMatch\n","import styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport const StyledAvatar = styled(Avatar)`\n    background-color: ${({ theme }) => theme.palette.logo};\n    cursor: pointer;\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n// Styles\nimport { StyledAvatar } from \"./style\";\n\nexport default function ProfileMenu({ me, onLogout }) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <StyledAvatar onClick={handleClick}>\n                {`${me?.firstname[0] || \"\"}${me?.lastname[0] || \"\"}`}\n            </StyledAvatar>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={onLogout}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.main};\n    &.active {\n        color: ${theme.palette.primary.dark};\n    }\n  `}\n`;\n","// Core\nimport React from \"react\";\nimport clsx from \"clsx\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n    },\n    menuButton: {\n        color: \"#fff\",\n    },\n    active: {\n        background: \"red\",\n    },\n}));\n\nconst NavigationMenu = ({ menuItems }) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    const toggleDrawer = (anchor, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = anchor => (\n        <div\n            className={clsx(classes.list)}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {menuItems.map(({ path, name }) => (\n                    <StyledLink to={`/${path}`} key={path}>\n                        <ListItem button>\n                            <ListItemText primary={name} />\n                        </ListItem>\n                    </StyledLink>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"primary\"\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer\n                anchor=\"right\"\n                open={state[\"left\"]}\n                onClose={toggleDrawer(\"left\", false)}\n            >\n                {list(\"left\")}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default NavigationMenu;\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\n\nconst SIZE = 40;\n\nexport const Shape = styled.span`\n    ${({ theme }) => `\n        width: ${SIZE}px;\n    height: ${SIZE / 2}px;\n    position: relative;\n    overflow: hidden;\n    &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        background-color: ${theme.palette.logo};\n        border-radius: 50%;\n        width: 100%;\n        height: 200%;\n    }\n    `}\n`;\n\nexport const ShapeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: ${SIZE}px;\n    max-height: ${SIZE};\n    cursor: pointer;\n`;\n\nexport const Text = styled.div`\n    font-family: \"GT-America\";\n    text-transform: uppercase;\n    font-size: 16px;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    padding-left: 11px;\n    user-select: none;\n    & > span {\n        line-height: 0.9em;\n        transform: scale(1, 0.9);\n        letter-spacing: -0.7px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n`;\n","// Core\nimport React from \"react\";\n\n//styles\nimport { Shape, ShapeContainer, Text, LogoContainer } from \"./styles\";\n\nfunction Logo() {\n    return (\n        <LogoContainer>\n            <ShapeContainer>\n                <Shape />\n                <Shape />\n            </ShapeContainer>\n            <Text>\n                <span>fountain</span>\n                <span>head</span>\n                <span>it</span>\n            </Text>\n        </LogoContainer>\n    );\n}\n\nexport default Logo;\n","const ROUTES = Object.freeze([\n    {\n        name: \"Reports\",\n        path: \"developer-reports\",\n    },\n    {\n        name: \"Reports\",\n        path: \"manager-reports\",\n    },\n    {\n        name: \"Projects\",\n        path: \"projects\",\n    },\n    {\n        name: \"Developers\",\n        path: \"developers\",\n    },\n\n    {\n        name: \"Report history\",\n        path: \"report-history\",\n    },\n]);\n\nconst ROUTES_FOR_DEV = Object.freeze([\"developer-reports\"]);\nconst ROUTES_FOR_ADMIN = Object.freeze([\n    \"report-history\",\n    \"developers\",\n    \"projects\",\n    \"manager-reports\",\n]);\n\nconst BY_ROLE = Object.freeze({\n    admin: ROUTES_FOR_ADMIN,\n    dev: ROUTES_FOR_DEV,\n});\n\nexport const getRoutesByRole = role => {\n    const routesByRole = BY_ROLE[role];\n\n    if (!routesByRole) return [];\n\n    return ROUTES.filter(({ path }) => routesByRole.includes(path));\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ProfileMenu from \"components/ProfileMenu\";\n// Components\nimport NavigationMenu from \"./NavigationMenu\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\n// UI\nimport Logo from \"components/Logo\";\n\n// Utils\nimport { getRoutesByRole } from \"../../utils/routerUtils\";\n\n// Hooks\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst NavigationPanel = ({ me, onLogout }) => {\n    const classes = useStyles();\n\n    const routes = getRoutesByRole(me?.role);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Logo />\n\n                <Typography variant=\"h6\" className={classes.title} />\n\n                {me ? (\n                    <ProfileMenu me={me} onLogout={onLogout} />\n                ) : (\n                    <Button>\n                        <StyledLink to=\"/signin\">Login</StyledLink>\n                    </Button>\n                )}\n                <NavigationMenu menuItems={routes} />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavigationPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"@material-ui/core\";\n\nexport const StyledTableRow = styled(({ type, ...otherProps }) => (\n    <TableRow {...otherProps} />\n))`\n    cursor: ${props => (props.hover ? \"pointer\" : \"auto\")};\n    & .MuiTableCell-body {\n        color: ${({ type, theme }) => type && theme.palette.text[type]};\n    }\n`;\n","import React from \"react\";\nimport { StyledTableRow } from \"./styles\";\n\nfunction TableRow(props) {\n    return <StyledTableRow {...props} />;\n}\n\nexport default TableRow;\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { grey } from \"@material-ui/core/colors\";\n// Styles\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport const StyledTableCell = styled(({ noWrap, ...restProps }) => (\n    <TableCell {...restProps} />\n))`\n    border-right: 1px solid ${grey[300]};\n    white-space: ${({ noWrap }) => (noWrap ? \"nowrap\" : \"normal\")};\n`;\n","import React from \"react\";\nimport { StyledTableCell } from \"./styles\";\n\nfunction TableCell(props) {\n    return <StyledTableCell {...props} />;\n}\n\nexport default TableCell;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Name\",\n    \"Skills\",\n    \"Project name\",\n    \"Total work time\",\n    \"Status\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    skills: [],\n    email: \"\",\n    role: \"\",\n    rate: 0,\n    country: \"\",\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developers\";\n\nexport default function ({ developerList, setEditingUserData }) {\n    const getFullName = (firstname, lastname) => `${firstname} ${lastname}`;\n    const concatSkills = skillsArray => skillsArray.join(\", \");\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {developerList.length ? (\n                        developerList.map(developer => (\n                            <TableRow\n                                type={\n                                    developer.status === \"inactive\"\n                                        ? \"disabled\"\n                                        : \"primary\"\n                                }\n                                hover\n                                key={developer.id}\n                                onClick={() => setEditingUserData(developer)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {developer.id}\n                                </TableCell>\n                                <TableCell>\n                                    {getFullName(\n                                        developer.firstname,\n                                        developer.lastname\n                                    )}\n                                </TableCell>\n                                <TableCell>\n                                    {concatSkills(developer.skills)}\n                                </TableCell>\n                                <TableCell>{developer.projects}</TableCell>\n                                <TableCell>\n                                    {developer.total_work_time}\n                                </TableCell>\n                                <TableCell>{developer.status}</TableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <TableCell>{\"Empty\"}</TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\n\nexport const StyledDialog = styled(Dialog)`\n    & .MuiPaper-root,\n    .MuiDialogContent-root {\n        overflow-y: visible;\n    }\n    & .MuiPaper-root {\n        max-width: 400px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// Styles\nimport { StyledDialog } from \"./styles\";\n\nexport default function FormDialog({ open, handleClose, title, children }) {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            maxWidth={\"lg\"}\n        >\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n            <DialogContent>{children}</DialogContent>\n        </StyledDialog>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { toJS } from \"mobx\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst EMPTY_OPTIONS = [];\n\nexport default function SkillMultiSelect({ onChange, values, id }) {\n    const handleChange = (e, newValue) => {\n        if (typeof newValue === \"string\") {\n            onChange(id, [...values, newValue]);\n        } else if (newValue && newValue.inputValue) {\n            onChange([...values.newValue.inputValue]);\n        }\n        onChange(id, newValue);\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={EMPTY_OPTIONS}\n                freeSolo\n                value={toJS(values)}\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField {...params} variant=\"outlined\" label=\"Skills\" />\n                )}\n            />\n        </>\n    );\n}\n","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function RateInput({ onChange, value, id }) {\n    const handleChange = e => {\n        if (Number(e.target.value) < 0) {\n            onChange(id, 0);\n            return;\n        }\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <TextField\n            required\n            label=\"Rate\"\n            type=\"number\"\n            onChange={handleChange}\n            value={value}\n        />\n    );\n}\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(({ type, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./styles\";\n\nfunction DialogActionButton(props) {\n    return <StyledButton {...props} />;\n}\n\nexport default DialogActionButton;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n} from \"@material-ui/core\";\n\nfunction RoleSelector({ value, onChange, id }) {\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n    return (\n        <RadioGroup aria-label=\"Type\" value={value} onChange={handleChange}>\n            <FormLabel>{\"Role *\"}</FormLabel>\n            <Grid container wrap=\"nowrap\">\n                <FormControlLabel\n                    value=\"dev\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Developer\"\n                />\n                <FormControlLabel\n                    value=\"admin\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Admin\"\n                />\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default RoleSelector;\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { Grid, TextField, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport SkillMultiSelect from \"../SkillsSelector\";\nimport RateInput from \"../RateInput\";\nimport DialogActionButton from \"components/DialogActionButton\";\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developersUtils\";\nimport RoleSelector from \"../RoleSelector\";\n\nexport default function CreateUserForm({\n    open,\n    onClose,\n    handleSubmit,\n    initialData,\n    handleDeleteUser,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: data => {\n            handleSubmit(data, initialData?.id);\n        },\n    });\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project Item:\">\n            <form autoComplete=\"off\">\n                <StyledGridContainer>\n                    <Grid container>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                id=\"firstname\"\n                                label=\"First name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.firstname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                id=\"lastname\"\n                                label=\"Last name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.lastname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SkillMultiSelect\n                            values={formik.values.skills}\n                            onChange={formik.setFieldValue}\n                            id=\"skills\"\n                        />\n                    </Grid>\n                    <Grid container justify={\"space-between\"}>\n                        <Grid item xs={8}>\n                            <TextField\n                                id=\"country\"\n                                label=\"Country\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.country}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <RateInput\n                                onChange={formik.setFieldValue}\n                                id=\"rate\"\n                                value={formik.values.rate}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs>\n                        <TextField\n                            required\n                            id=\"email\"\n                            label=\"e-mail\"\n                            onChange={formik.handleChange}\n                            defaultValue={formik.values.email}\n                        />\n                    </Grid>\n                    <Grid container justify=\"flex-end\">\n                        <RoleSelector\n                            value={formik.values.role}\n                            onChange={formik.setFieldValue}\n                            id=\"role\"\n                        />\n                    </Grid>\n                    <DialogActions>\n                        {initialData && (\n                            <DialogActionButton\n                                onClick={() =>\n                                    handleDeleteUser(initialData?.id)\n                                }\n                                type=\"error\"\n                            >\n                                Delete\n                            </DialogActionButton>\n                        )}\n                        <DialogActionButton onClick={onClose} type=\"default\">\n                            Cancel\n                        </DialogActionButton>\n                        <DialogActionButton\n                            onClick={formik.handleSubmit}\n                            type=\"success\"\n                        >\n                            Save\n                        </DialogActionButton>\n                    </DialogActions>\n                </StyledGridContainer>\n            </form>\n        </FormDialog>\n    );\n}\n","import { DEFAULT_FORM_VALUES } from \"constants/developers\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n","import styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nexport const StyledAddIcon = styled(AddIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledAddIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button\n            size=\"large\"\n            onClick={handleClick}\n            startIcon={<StyledAddIcon />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nfunction getWeeksOptions(weeksCount) {\n    return Array.from({ length: weeksCount }).map((_, index) =>\n        String(index + 1)\n    );\n}\n\nexport default function ({ setWeek, selectedWeek }) {\n    const currentWeek = moment().week();\n\n    const [weeksOptions] = useState(getWeeksOptions(currentWeek));\n\n    const changeWeek = (e, value) => {\n        setWeek(value);\n    };\n\n    const value = selectedWeek && String(selectedWeek);\n\n    return (\n        <Autocomplete\n            value={value}\n            options={weeksOptions}\n            onChange={changeWeek}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n","import moment from \"moment\";\nimport {\n    MONDAY,\n    SUNDAY,\n    FULL_DATE_FORMAT,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getWeekNumber = date => moment(date, FULL_DATE_FORMAT).isoWeek();\n\nexport const getFromDate = weekNumber =>\n    moment().isoWeek(weekNumber).isoWeekday(MONDAY).format(FULL_DATE_FORMAT);\n\nexport const getToDate = weekNumber => {\n    const date = moment().isoWeek(weekNumber).isoWeekday(SUNDAY);\n    if (date.isAfter(new Date())) {\n        return moment().format(FULL_DATE_FORMAT);\n    }\n    return date.format(FULL_DATE_FORMAT);\n};\n\nexport const formatToString = momentDate =>\n    moment(momentDate).format(FULL_DATE_FORMAT);\n\nexport const getMomentInstance = date => moment(date, FULL_DATE_FORMAT);\n\nconst checkIfCurrentWeek = weekNumber => {\n    return getWeekNumber(new Date()) === weekNumber;\n};\n\nexport const checkIfWeekSelected = (fromDate, toDate) => {\n    const fromDateWeekNumber = getWeekNumber(fromDate);\n    const toDateWeekNumber = getWeekNumber(toDate);\n\n    if (fromDateWeekNumber === toDateWeekNumber) {\n        const startOfWeek = getMomentInstance(fromDate).startOf(\"isoWeek\");\n        const endOfWeek = checkIfCurrentWeek(fromDateWeekNumber)\n            ? moment()\n            : getMomentInstance(fromDate).endOf(\"isoWeek\");\n        return (\n            getMomentInstance(fromDate).isSame(startOfWeek, \"day\") &&\n            getMomentInstance(toDate).isSame(endOfWeek, \"day\")\n        );\n    }\n\n    return false;\n};\n\nexport const getLogsParams = (fromDate, toDate) => {\n    return {\n        from_date: fromDate,\n        to_date: toDate,\n    };\n};\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()}h ${moment\n        .duration(time)\n        .minutes()}m`;\n};\n","export const FULL_DATE_FORMAT = \"DD-MM-YYYY\";\nexport const FULL_DATE_SHORT = \"DD-MM-YY\";\n\nexport const DATE_FORMAT = \"DD.MM\";\nexport const DAY_FORMAT = \"DD\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const DATE_AND_MONTH = \"DD MMMM\";\n\nexport const HOUR_IN_MINUTES = 60;\n\nexport const MONDAY = 1;\nexport const SUNDAY = 7;\n","// Core\nimport \"moment/locale/en-sg\";\nimport React from \"react\";\nimport MomentUtils from \"@date-io/moment\";\n\n// UI\nimport { Box } from \"@material-ui/core\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\n// constants\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Utils\nimport { formatToString, getMomentInstance } from \"utils/managerReportsUtils\";\n\nfunction DateRangePicker({ fromDate, toDate, setFilter }) {\n    const changeDateFrom = date => {\n        setFilter(\"fromDate\", formatToString(date));\n    };\n\n    const changeDateTo = date => {\n        setFilter(\"toDate\", formatToString(date));\n    };\n\n    const momentFromDate = getMomentInstance(fromDate);\n    const momentToDate = getMomentInstance(toDate);\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils} locale={\"en-sg\"}>\n            <Box display=\"flex\">\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        value={momentFromDate}\n                        label=\"From date\"\n                        maxDate={toDate ? momentToDate : false}\n                        onChange={changeDateFrom}\n                        format={FULL_DATE_FORMAT}\n                    />\n                </Box>\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        label=\"To date\"\n                        value={momentToDate}\n                        minDate={fromDate ? momentFromDate : false}\n                        maxDate={getMomentInstance(new Date())}\n                        onChange={changeDateTo}\n                        format={FULL_DATE_FORMAT}\n                    />\n                </Box>\n            </Box>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default DateRangePicker;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ projects, setFilter, selectedProjects }) {\n    const onChangeProject = (e, value) => {\n        setFilter(\"selectedProjects\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n\n    const getOptionLabel = option => option.name;\n\n    return (\n        <Autocomplete\n            multiple\n            value={selectedProjects}\n            options={projects}\n            onChange={onChangeProject}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <StyledTextField {...params} label=\"Project name\" />\n            )}\n        />\n    );\n}\n\nexport default ProjectSelector;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ userList, setFilter, selectedUser }) {\n    const onChangeUser = (e, value) => {\n        setFilter(\"selectedUsers\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                value={selectedUser}\n                options={userList}\n                onChange={onChangeUser}\n                filterSelectedOptions\n                getOptionSelected={getOptionSelected}\n                getOptionLabel={getOptionLabel}\n                renderInput={params => (\n                    <StyledTextField {...params} label=\"User name\" />\n                )}\n            />\n        </>\n    );\n}\n\nexport default ProjectSelector;\n","// core\nimport React from \"react\";\n\n// UI\nimport WeekSelector from \"components/WeekSelector\";\nimport DateRangePicker from \"../DateRangePicker\";\nimport ProjectSelector from \"../ProjectSelector\";\nimport UserSelector from \"../UserSelector\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nfunction FilterSelectorPanel({\n    setFilter,\n    projectList,\n    userList,\n    fromDate,\n    toDate,\n    weekNumber,\n    selectedProjects,\n    selectedUsers,\n}) {\n    return (\n        <Box display=\"flex\" alignItems=\"flex-end\" flexWrap=\"wrap\" mt={5}>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <DateRangePicker\n                        setFilter={setFilter}\n                        fromDate={fromDate}\n                        toDate={toDate}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3} width={\"200px\"}>\n                    <WeekSelector\n                        setWeek={value => setFilter(\"weekNumber\", value)}\n                        selectedWeek={weekNumber}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <ProjectSelector\n                        projects={projectList}\n                        setFilter={setFilter}\n                        selectedProject={selectedProjects}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <UserSelector\n                        selectedUsers={selectedUsers}\n                        userList={userList}\n                        setFilter={setFilter}\n                    />\n                </Box>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default FilterSelectorPanel;\n","import styled from \"styled-components\";\nimport { Popper, Button } from \"@material-ui/core\";\nexport const StyledPopper = styled(Popper)`\n    z-index: 1;\n`;\n\nexport const StyledButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n","export const TABLE_HEADERS = [\n    \"Date\",\n    \"Developer\",\n    \"Project name\",\n    \"Description\",\n    \"Work time\",\n    \"Last generated\",\n    \"Status\",\n];\n\nexport const STATUS_OPTIONS = [\n    {\n        value: \"approved\",\n        label: \"Approve\",\n    },\n    {\n        value: \"declined\",\n        label: \"Decline\",\n    },\n];\n\nexport const STATUS_COLORS = {\n    \"in review\": \"default\",\n    approved: \"success\",\n    declined: \"error\",\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Styles\nimport { StyledPopper, StyledButton } from \"./style\";\n\n// Constants\nimport { STATUS_OPTIONS, STATUS_COLORS } from \"constants/managerReports\";\n\nexport default function LogStatusHandler({ status, id, onUpdateLogStatus }) {\n    const [open, setOpen] = React.useState(false);\n    const [isLoading, setLoadingState] = React.useState(false);\n\n    const anchorRef = React.useRef(null);\n\n    const handleMenuItemClick = async ({ value }) => {\n        if (value !== status) {\n            setOpen(false);\n            setLoadingState(true);\n            await onUpdateLogStatus({\n                id,\n                status: value,\n            });\n            setLoadingState(false);\n        }\n    };\n\n    const handleToggle = () => {\n        setOpen(prevOpen => !prevOpen);\n    };\n\n    const handleClose = event => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const getColor = () => STATUS_COLORS[status];\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <ButtonGroup size=\"small\" variant=\"contained\" ref={anchorRef}>\n                    <StyledButton\n                        disableElevation\n                        type={getColor(status)}\n                        onClick={handleToggle}\n                    >\n                        {isLoading ? (\n                            <CircularProgress size=\"20px\" color=\"primary\" />\n                        ) : (\n                            status\n                        )}\n                    </StyledButton>\n                </ButtonGroup>\n                <StyledPopper\n                    open={open}\n                    anchorEl={anchorRef.current}\n                    transition\n                    disablePortal\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{\n                                transformOrigin:\n                                    placement === \"bottom\"\n                                        ? \"center top\"\n                                        : \"center bottom\",\n                            }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList>\n                                        {STATUS_OPTIONS.map(option => (\n                                            <MenuItem\n                                                key={option.value}\n                                                selected={\n                                                    option.value === status\n                                                }\n                                                onClick={() =>\n                                                    handleMenuItemClick(option)\n                                                }\n                                            >\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </StyledPopper>\n            </Grid>\n        </Grid>\n    );\n}\n","import styled from \"styled-components\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nexport const StyledIcon = styled(GetAppIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button size=\"large\" onClick={handleClick} startIcon={<StyledIcon />}>\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","// Core\nimport React, { useEffect, useState } from \"react\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n    Box,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport LogStatusHandler from \"../LogStatusHandler\";\nimport DownloadButton from \"components/DownloadButton\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/managerReports\";\n\n// Utils\nimport { getLogsParams, formatTimeDuration } from \"utils/managerReportsUtils\";\n\nexport default function LogReportTable({\n    logList,\n    onGetLogs,\n    fromDate,\n    toDate,\n    onUpdateLogStatus,\n    userList,\n    projectList,\n    selectedProjects,\n    selectedUsers,\n    onDownloadFile,\n}) {\n    const [filteredLogList, setFilteredLogList] = useState(logList);\n\n    useEffect(() => {\n        let result = logList;\n        if (selectedProjects.length) {\n            const projectsSet = new Set(selectedProjects.map(item => item.id));\n            result = logList.filter(log => projectsSet.has(log.project_id));\n        }\n        if (selectedUsers.length) {\n            const usersSet = new Set(selectedUsers.map(item => item.id));\n            result = result.filter(log => usersSet.has(log.user_id));\n        }\n        return setFilteredLogList(result);\n    }, [logList, selectedProjects, selectedUsers]);\n\n    useEffect(() => {\n        if (fromDate && toDate) {\n            onGetLogs(getLogsParams(fromDate, toDate));\n        }\n    }, [fromDate, onGetLogs, toDate]);\n\n    const getProjectName = id => {\n        return projectList.find(project => project.id === id)?.name;\n    };\n\n    const getUserName = id => {\n        const userData = userList.find(user => user.id === id);\n        return `${userData?.firstname} ${userData?.lastname}`;\n    };\n\n    return (\n        <>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {TABLE_HEADERS.map(item => (\n                                <TableCell key={item}>{item}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filteredLogList.length ? (\n                            filteredLogList.map(log => (\n                                <TableRow hover key={`log-${log.id}`}>\n                                    <TableCell noWrap>{log.date}</TableCell>\n                                    <TableCell>\n                                        {getUserName(log.user_id)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getProjectName(log.project_id)}\n                                    </TableCell>\n                                    <TableCell>{log.descriptions}</TableCell>\n                                    <TableCell noWrap>\n                                        {formatTimeDuration(log.total)}\n                                    </TableCell>\n                                    <TableCell>{\"\"}</TableCell>\n                                    <TableCell>\n                                        <LogStatusHandler\n                                            onUpdateLogStatus={\n                                                onUpdateLogStatus\n                                            }\n                                            status={log.status}\n                                            id={log.id}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        ) : (\n                            <TableRow>\n                                <Box p={3} component=\"td\">\n                                    {\"Empty\"}\n                                </Box>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Box display=\"flex\" justifyContent=\"flex-end\" my={3}>\n                {filteredLogList.length > 0 && (\n                    <DownloadButton handleClick={onDownloadFile}>\n                        Export\n                    </DownloadButton>\n                )}\n            </Box>\n        </>\n    );\n}\n","export const TABLE_HEADERS = [\n    \"Created\",\n    \"Updated\",\n    \"Number of developers\",\n    \"Project name\",\n    \"Type\",\n    \"Total time spend\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    alias: \"\",\n    name: \"\",\n    descriptions: \"\",\n    users: [],\n    type: \"\",\n};\n","import moment from \"moment\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/projects\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatTime = time => {\n    const durationMin = moment.duration(time).asMinutes();\n    return durationMin < HOUR_IN_MINUTES\n        ? `${durationMin}m`\n        : `${moment.duration(time).hours()}h ${moment\n              .duration(time)\n              .minutes()}m`;\n};\n\nexport const getDate = date => moment(date).format(\"DD MMMM YYYY\");\n\nexport const getTime = date => moment(date).format(\"hh:mm\");\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/projects\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Utils\nimport { formatTime, getDate } from \"utils/projectUtils\";\n\n// Styles\n\nexport default function ({ projectList, setEditingProjectData }) {\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projectList.length ? (\n                        projectList.map(project => (\n                            <TableRow\n                                hover\n                                key={project.id}\n                                onClick={() => setEditingProjectData(project)}\n                            >\n                                <TableCell>\n                                    {getDate(project.updated_at)}\n                                </TableCell>\n                                <TableCell>\n                                    {getDate(project.created_at)}\n                                </TableCell>\n                                <TableCell>{project.num_of_dev}</TableCell>\n                                <TableCell>{project.name}</TableCell>\n                                <TableCell>{project.type}</TableCell>\n                                <StyledTableCell>\n                                    {formatTime(project.total_log)}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <TableCell>{\"Empty\"}</TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserMultiSelect({ userList, onChange, values, id }) {\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    const handleChange = (e, data) => {\n        onChange(\n            id,\n            data.map(item => item.id)\n        );\n    };\n\n    const getSelectedOptions = () => {\n        const idSet = new Set(values);\n        return userList.filter(item => idSet.has(item.id));\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={userList}\n                getOptionLabel={getOptionLabel}\n                value={getSelectedOptions()}\n                filterSelectedOptions\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select developers\"\n                    />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n} from \"@material-ui/core\";\n\nfunction TypeSelector({ value, projectTypes, onChange }) {\n    return (\n        <RadioGroup label=\"Type\" name=\"type\" value={value} onChange={onChange}>\n            <FormLabel>{\"Type *\"}</FormLabel>\n            <Grid container wrap=\"nowrap\">\n                {projectTypes.map(item => (\n                    <FormControlLabel\n                        key={`project-type-${item}`}\n                        value={item}\n                        control={<Radio color={\"primary\"} />}\n                        label={item}\n                    />\n                ))}\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default TypeSelector;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport UserMultiSelect from \"../UserMultiSelect\";\nimport TypeSelector from \"../TypeSelector\";\nimport DialogActionButton from \"components/DialogActionButton\";\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/projectUtils\";\n\n// Constants\n\nexport default function LogForm({\n    open,\n    onClose,\n    userList,\n    projectTypes,\n    handleSubmit,\n    initialData,\n    handleDeleteProject,\n    onGetProjectUserList,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: data => {\n            handleSubmit(data, initialData?.id);\n        },\n    });\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project Item:\">\n            <StyledGridContainer>\n                <Grid container>\n                    <Grid item>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                id=\"name\"\n                                label=\"Project name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.name}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                id=\"alias\"\n                                label=\"Alias\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.alias}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        fullWidth\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <UserMultiSelect\n                        onChange={formik.setFieldValue}\n                        onGetProjectUserList={onGetProjectUserList}\n                        values={formik.values.users}\n                        userList={userList}\n                        id={\"users\"}\n                    />\n                </Grid>\n                <Grid container justify=\"flex-end\">\n                    <TypeSelector\n                        value={formik.values.type}\n                        projectTypes={projectTypes}\n                        onChange={formik.handleChange}\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={() => handleDeleteProject(initialData?.id)}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onClose} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </StyledGridContainer>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Date\",\n    \"Week\",\n    \"Developers\",\n    \"Project names\",\n];\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/reportHistory\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Styles\n\nexport default function ({ historyItems, userList, projectList }) {\n    const getDatesLabel = ({ from_date, to_date }) => {\n        if (from_date && to_date) {\n            return `${from_date} - ${to_date}`;\n        }\n    };\n\n    const concatUserNames = ({ users }) =>\n        userList\n            .reduce((acc, item) => {\n                if (users?.includes(String(item.id))) {\n                    acc.push(`${item.firstname} ${item.lastname}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const concatProjectNames = ({ projects }) =>\n        projectList\n            .reduce((acc, item) => {\n                if (projects?.includes(String(item.id))) {\n                    acc.push(`${item.name}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {historyItems.length ? (\n                        historyItems.map(item => (\n                            <TableRow hover key={item.id}>\n                                <StyledTableCell>{item.id}</StyledTableCell>\n                                <StyledTableCell>\n                                    {getDatesLabel(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {item.filter.week}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatUserNames(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatProjectNames(item.filter)}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <TableCell>{\"Empty\"}</TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(({ isActive, hasLogs, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    margin-right: ${({ theme }) => theme.spacing(1)}px;\n    margin-bottom: ${({ theme }) => theme.spacing(1)}px;\n    background-color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.primary.main;\n        if (hasLogs) return theme.palette.success.main;\n        return \"transparent\";\n    }};\n    color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.text.primary;\n        if (hasLogs) return theme.palette.text.secondary;\n        return theme.palette.text.secondary;\n    }};\n    border: none;\n`;\n","import moment from \"moment\";\nimport {\n    FULL_DATE_FORMAT,\n    TIME_FORMAT,\n    MONDAY,\n    SUNDAY,\n} from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => ({\n    date: initialData\n        ? moment(initialData.date, FULL_DATE_FORMAT).format(FULL_DATE_FORMAT)\n        : \"\",\n    descriptions: initialData ? initialData.descriptions : \"\",\n    from_time: initialData\n        ? moment(initialData[\"from_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    to_time: initialData\n        ? moment(initialData[\"to_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    project_id: initialData ? initialData[\"project_id\"] : 0,\n    log_type_id: initialData ? initialData[\"log_type_id\"] : 0,\n});\n\nexport const getTotalTime = durations => {\n    if (!durations.length) return \"\";\n    const totalDurations = durations\n        .slice(1)\n        .reduce(\n            (prev, cur) => moment.duration(cur.total).add(prev),\n            moment.duration(durations[0].total)\n        );\n\n    const hours = Math.floor(totalDurations.clone().asHours());\n    const minutes = Math.floor(totalDurations.clone().minutes());\n    if (!hours) {\n        return `${minutes} minutes`;\n    }\n    return `${hours}h ${minutes}m`;\n};\n\nexport const getParametersForLogs = selectedWeek => ({\n    from_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(MONDAY)\n        .format(FULL_DATE_FORMAT),\n    to_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(SUNDAY)\n        .format(FULL_DATE_FORMAT),\n});\n\nexport const getStartOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).startOf(\"isoWeek\");\n\nexport const getEndOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).endOf(\"isoWeek\");\n\nexport const getMonthNameByWeek = weekNumber =>\n    moment().set(\"month\", moment().isoWeek(weekNumber).month()).format(\"MMMM\");\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DAY_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledButton } from \"./styles\";\n\n// Utils\nimport { getMonthNameByWeek } from \"utils/developerReportUtils\";\n\nfunction checkLogDate(logs, date) {\n    return logs.some(item =>\n        moment(item.date, FULL_DATE_FORMAT).isSame(\n            moment(date, FULL_DATE_FORMAT),\n            \"day\"\n        )\n    );\n}\n\nexport default function ({ selectedWeek, logs, setDay, selectedDay }) {\n    const [weekDates, setWeekDates] = useState([]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setWeekDates([]);\n            return;\n        }\n        const getWeekDates = weekNumber => {\n            return Array.from({ length: 7 }).map((_, index) =>\n                moment()\n                    .isoWeek(weekNumber)\n                    .isoWeekday(index + 1)\n            );\n        };\n\n        setWeekDates(getWeekDates(selectedWeek));\n    }, [selectedWeek]);\n\n    const formatDate = day => moment(day).format(DAY_FORMAT);\n    const isActive = day => moment(day).isSame(selectedDay, \"day\");\n    return (\n        selectedWeek && (\n            <Box display=\"flex\" flexWrap=\"wrap\">\n                {weekDates.map(day => {\n                    const hasLogs = checkLogDate(logs, day);\n                    return (\n                        <StyledButton\n                            size=\"large\"\n                            onClick={() => setDay(day)}\n                            isActive={isActive(day)}\n                            hasLogs={hasLogs}\n                            variant=\"contained\"\n                            key={`date-${day}`}\n                        >\n                            {formatDate(day)}\n                        </StyledButton>\n                    );\n                })}\n                <Box width=\"100%\" ml={1}>\n                    <Typography variant=\"subtitle1\">\n                        {getMonthNameByWeek(selectedWeek)}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    );\n}\n","export const TABLE_HEADERS = [\n    \"Work Item\",\n    \"Date\",\n    \"Project Name\",\n    \"Type\",\n    \"Work Time\",\n    \"Status\",\n];\n\nexport const validationErrorMessages = {\n    timeInterval: \"Time interval is invalid\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableCell } from \"@material-ui/core\";\n\nexport const StyledTableCell = styled(({ status, ...otherProps }) => (\n    <TableCell {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n    Box,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developerReport\";\nimport {\n    HOUR_IN_MINUTES,\n    FULL_DATE_SHORT,\n    FULL_DATE_FORMAT,\n} from \"constants/dateFormats\";\n\n// Utils\nimport { getTotalTime } from \"utils/developerReportUtils\";\n\n// Styles\nimport { StyledTableCell } from \"./style\";\n\nfunction getTimeLabel(time) {\n    let result = `${time} hours`;\n    const durationMin = moment.duration(time).asMinutes();\n    if (durationMin < HOUR_IN_MINUTES) {\n        result = `${durationMin} minutes`;\n    }\n    return result;\n}\n\nexport default function ({\n    logList,\n    handleEditLog,\n    selectedDay,\n    selectedWeek,\n    projects,\n    logTypes,\n    setTotalWeekTime,\n    setTotalDayTime,\n}) {\n    const [filteredLogs, setFilteredLogs] = React.useState([]);\n\n    React.useEffect(() => {\n        let logs = logList;\n        if (selectedDay) {\n            logs = logList.filter(item =>\n                moment(item.date, FULL_DATE_FORMAT).isSame(\n                    moment(selectedDay),\n                    \"day\"\n                )\n            );\n        }\n        if (!selectedWeek) {\n            logs = [];\n        }\n        setFilteredLogs(logs);\n    }, [logList, selectedDay, selectedWeek]);\n\n    React.useEffect(() => {\n        setTotalWeekTime(getTotalTime(logList));\n    }, [logList, setTotalWeekTime]);\n\n    React.useEffect(() => {\n        setTotalDayTime(getTotalTime(filteredLogs));\n    }, [filteredLogs, setTotalDayTime]);\n\n    const editLog = log => {\n        handleEditLog(log);\n    };\n\n    const getProjectName = id => projects.find(item => item.id === id)?.name;\n    const getLogTypeEnum = id => logTypes.find(item => item.id === id)?.type;\n    const getType = status =>\n        status === \"approved\"\n            ? \"success\"\n            : status === \"declined\"\n            ? \"error\"\n            : \"default\";\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {filteredLogs.length ? (\n                        filteredLogs.map((log, i) => (\n                            <TableRow\n                                hover\n                                key={log.id}\n                                onClick={() => editLog(log)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {i + 1}\n                                </TableCell>\n                                <TableCell>\n                                    {moment(log.date, FULL_DATE_FORMAT).format(\n                                        FULL_DATE_SHORT\n                                    )}\n                                </TableCell>\n                                <TableCell>\n                                    {getProjectName(log.project_id)}\n                                </TableCell>\n                                <TableCell>\n                                    {getLogTypeEnum(log.log_type_id)}\n                                </TableCell>\n                                <TableCell>{getTimeLabel(log.total)}</TableCell>\n                                <StyledTableCell type={getType(log.status)}>\n                                    {log.status}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box component=\"td\" p={2}>\n                                {\"You don't have any logs\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\n// UI\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n// Constants\nimport { TIME_FORMAT } from \"constants/dateFormats\";\n\nexport default function Developers({\n    value,\n    id,\n    label,\n    onChange,\n    error,\n    setTouched,\n}) {\n    const handleChange = momentTime => {\n        onChange(id, momentTime);\n        setTouched(id);\n    };\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardTimePicker\n                    ampm={false}\n                    id={id}\n                    error={!!error}\n                    label={label}\n                    value={moment(value, TIME_FORMAT)}\n                    onChange={handleChange}\n                    helperText={error}\n                />\n            </MuiPickersUtilsProvider>\n        </>\n    );\n}\n","import styled from \"styled-components\";\nimport { FormControl } from \"@material-ui/core\";\n\nexport const StyledFormControl = styled(FormControl)`\n    min-width: 140px;\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\n// Styles\nimport { StyledFormControl } from \"./styles\";\n\nfunction createOptions(data, opts) {\n    return data.map(item => ({\n        value: item[opts.value],\n        label: item[opts.label],\n    }));\n}\n\nexport default function Selector({\n    onChange,\n    data,\n    name,\n    id,\n    value,\n    labelKey,\n    valueKey,\n    placeholder,\n}) {\n    const [options] = React.useState(\n        createOptions(data, { label: labelKey, value: valueKey })\n    );\n\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <StyledFormControl>\n            <InputLabel>{placeholder}</InputLabel>\n            <Select value={value || \"\"} onChange={handleChange}>\n                {options.map(item => (\n                    <MenuItem key={`${id}-${item.value}`} value={item.value}>\n                        {item.label}\n                    </MenuItem>\n                ))}\n            </Select>\n        </StyledFormControl>\n    );\n}\n","// core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function LogInfoHeader({ workingDay, selectedWeek }) {\n    return (\n        <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box flex={1} display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\" noWrap>\n                    {\"Working day:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        noWrap\n                        paragraph\n                    >\n                        {workingDay}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box flex={1} display=\"flex\" pl={1}>\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Week: \"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        paragraph\n                    >\n                        {selectedWeek}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => {\n    return {\n        root: {\n            \"& .MuiGrid-root\": {\n                marginBottom: theme.spacing(2),\n            },\n            \"& .MuiFormLabel-root\": {\n                zIndex: 0,\n            },\n        },\n    };\n});\n\nexport default useStyles;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TimePicker from \"components/TimePicker\";\nimport FormDialog from \"components/FormDialog\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport Box from \"@material-ui/core/Box\";\nimport Selector from \"../Selector\";\nimport LogInfoHeader from \"../LogInfoHeader\";\n\n// Styles\nimport useStyles from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developerReportUtils\";\n\n// Constants\nimport { validationErrorMessages } from \"constants/developerReport\";\nimport { FULL_DATE_FORMAT, TIME_FORMAT } from \"constants/dateFormats\";\n\nfunction validateTimeRange(from, to) {\n    console.log(\"from: \", moment(from, TIME_FORMAT).format(TIME_FORMAT));\n    console.log(\"to: \", moment(to, TIME_FORMAT).format(TIME_FORMAT));\n    console.log(\n        \"validate \",\n        moment(from, TIME_FORMAT).isBefore(moment(to, TIME_FORMAT))\n    );\n    return moment(from, TIME_FORMAT).isBefore(moment(to, TIME_FORMAT));\n}\n\nfunction validate(values, props) {\n    console.log(\"props: \", props);\n    console.log(\"values: \", values);\n    const errors = {};\n    if (!validateTimeRange(values.from_time, values.to_time)) {\n        errors.from_time = validationErrorMessages.timeInterval;\n        errors.to_time = validationErrorMessages.timeInterval;\n    }\n    console.log(\"errors: \", errors);\n    return errors;\n}\n\nexport default function LogForm({\n    open,\n    handleClose,\n    projects,\n    logTypes,\n    submitForm,\n    initialData,\n    deleteLog,\n    selectedDay,\n    selectedWeek,\n}) {\n    const classes = useStyles();\n\n    const initialValues = getInitialFormValues(initialData);\n\n    if (!initialData) {\n        initialValues.date = moment(selectedDay, FULL_DATE_FORMAT).format(\n            FULL_DATE_FORMAT\n        );\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validate,\n        validateOnChange: true,\n        validateOnBlur: false,\n        onSubmit: data => {\n            submitForm(getInitialFormValues(data), initialData?.id);\n        },\n    });\n\n    console.log(\"formik: \", formik.touched);\n    const handleDeleteLog = async () => {\n        await deleteLog(initialData.id);\n        handleClose();\n    };\n\n    const onSetTouched = id => {\n        formik.setTouched({\n            ...formik.touched,\n            [id]: true,\n        });\n    };\n\n    const workingDay = moment(formik.values.date, FULL_DATE_FORMAT).format(\n        \"DD MMMM\"\n    );\n\n    return (\n        <FormDialog open={open} handleClose={handleClose} title=\"Work Item:\">\n            <LogInfoHeader\n                workingDay={workingDay}\n                selectedWeek={selectedWeek}\n            />\n            <form autoComplete=\"off\">\n                <Grid container className={classes.root}>\n                    <Grid item xs={12} sm={12}>\n                        <Grid container wrap=\"nowrap\">\n                            <Box mr={1}>\n                                <TimePicker\n                                    id=\"from_time\"\n                                    label=\"Start time *\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.from_time\n                                    }\n                                    value={formik.values[\"from_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                            <Box ml={1}>\n                                <TimePicker\n                                    margin=\"normal\"\n                                    id=\"to_time\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.to_time\n                                    }\n                                    label=\"End time *\"\n                                    value={formik.values[\"to_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"space-between\">\n                        <Selector\n                            data={logTypes}\n                            placeholder=\"Log type *\"\n                            labelKey=\"type\"\n                            valueKey=\"id\"\n                            onChange={formik.setFieldValue}\n                            id=\"log_type_id\"\n                            value={formik.values[\"log_type_id\"]}\n                        />\n                        <Selector\n                            placeholder=\"Project name *\"\n                            data={projects}\n                            labelKey=\"name\"\n                            valueKey=\"id\"\n                            onChange={formik.setFieldValue}\n                            id=\"project_id\"\n                            value={formik.values[\"project_id\"]}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        fullWidth\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={handleDeleteLog}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={handleClose} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </form>\n        </FormDialog>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\n// Utils\nimport { getStartOfWeek, getEndOfWeek } from \"utils/developerReportUtils\";\n\n// constants\nimport { DATE_AND_MONTH } from \"constants/dateFormats\";\nimport { getWeekNumber } from \"utils/managerReportsUtils\";\n\nexport default function TotalTimeInfo({\n    totalDayTime,\n    totalWeekTime,\n    selectedWeek,\n}) {\n    const getDateIntervalLabel = selectedWeek =>\n        `From ${getStartOfWeek(selectedWeek).format(\n            DATE_AND_MONTH\n        )} to ${getEndOfWeek(getWeekNumber).format(DATE_AND_MONTH)}`;\n\n    return (\n        <>\n            {selectedWeek && (\n                <Box display=\"flex\">\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            {getDateIntervalLabel(selectedWeek)}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n            {totalWeekTime && (\n                <Box display=\"flex\">\n                    <Typography variant=\"overline\" color=\"textSecondary\">\n                        {\"Total week work time:\"}\n                    </Typography>\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            {totalWeekTime}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n            {totalDayTime && (\n                <Box display=\"flex\">\n                    <Typography variant=\"overline\" color=\"textSecondary\">\n                        {\"Total day work time:\"}\n                    </Typography>\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            {totalDayTime}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n        </>\n    );\n}\n","import { Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","export function authRequired({ me }) {\n    return !!me;\n}\n\nexport function unauthorizedOnly(prop) {\n    return !prop.me;\n}\n\nexport function roleAdmin({ me }) {\n    return me?.role === \"admin\";\n}\n\nexport function roleDev({ me }) {\n    return me?.role === \"dev\";\n}\n","// Pages\nimport Developers from \"../Pages/developers\";\nimport ManagerReports from \"../Pages/manager-reports\";\nimport Projects from \"../Pages/projects\";\nimport ReportHistory from \"../Pages/report-history\";\nimport DeveloperReports from \"../Pages/developer-reports\";\nimport SignIn from \"../Pages/signin\";\nimport Home from \"../Pages/home\";\nimport ForgotPassword from \"../Pages/ForgotPassword\";\nimport ResetPassword from \"../Pages/ResetPassword\";\n\n// Rules\nimport { authRequired, unauthorizedOnly, roleAdmin, roleDev } from \"./rules\";\n\nexport default [\n    {\n        path: \"/\",\n        exact: true,\n        rules: [authRequired],\n        redirect: \"/signin\",\n        adminRedirect: roleAdmin,\n        devRedirect: roleDev,\n        component: Home,\n    },\n    {\n        path: \"/signin\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: SignIn,\n    },\n    {\n        path: \"/forgot-password\",\n        exact: true,\n        rules: [],\n        redirect: \"/\",\n        component: ForgotPassword,\n    },\n    {\n        path: \"/reset-password\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: ResetPassword,\n    },\n    {\n        path: \"/developer-reports\",\n        exact: true,\n        rules: [authRequired, roleDev],\n        redirect: \"/\",\n        component: DeveloperReports,\n    },\n    {\n        path: \"/manager-reports\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ManagerReports,\n    },\n    {\n        path: \"/projects\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Projects,\n    },\n    {\n        path: \"/developers\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Developers,\n    },\n    {\n        path: \"/report-history\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ReportHistory,\n    },\n];\n","// Core\nimport React from 'react'\n\nexport default function Home() {\n    return <div>best time tracker ever! ! !</div>\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\n\n// Store\nimport { useStores } from \"../../store\";\n\n// Styles\nimport { StyledContainer, StyledLink } from \"./styles\";\n\nfunction useAuthData() {\n    const {\n        authStore: { onLogin },\n    } = useStores();\n    return useObserver(() => ({\n        onLogin,\n    }));\n}\n\nexport default function SignIn() {\n    const [data, setForm] = useState({ email: \"\", password: \"\" });\n    const { onLogin } = useAuthData();\n\n    return (\n        <StyledContainer>\n            <form>\n                <Box display=\"flex\" flexDirection=\"column\" my={1}>\n                    <TextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        onChange={e =>\n                            setForm({ ...data, email: e.target.value })\n                        }\n                    />\n                    <TextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={e =>\n                            setForm({ ...data, password: e.target.value })\n                        }\n                    />\n                </Box>\n                <Box display=\"flex\" justifyContent={\"flex-end\"} my={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onLogin(data);\n                        }}\n                    >\n                        Submit\n                    </Button>\n                </Box>\n            </form>\n            <Box my={1}>\n                <StyledLink to={\"/forgot-password\"}>Forgot password</StyledLink>\n            </Box>\n        </StyledContainer>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button, Typography } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onForgotPassword: authStore.onForgotPassword,\n    }));\n};\n\nexport default function ForgotPassword() {\n    const { onForgotPassword } = useStore();\n    const [success, setSuccess] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        onSubmit: async data => {\n            await onForgotPassword(data);\n            setSuccess(true);\n        },\n    });\n\n    if (success) {\n        return (\n            <Box p={4}>\n                <Typography variant=\"h6\">\n                    Follow link from your mailbox to reset password\n                </Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        onChange={formik.handleChange}\n                        defaultValue={formik.values.email}\n                    />\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} my={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\nimport { useLocation, Redirect } from \"react-router-dom\";\n\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onResetPassword: authStore.onResetPassword,\n    }));\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResetPassword() {\n    const { onResetPassword } = useStore();\n    const [toLogin, setToLogin] = useState(false);\n    const params = useQuery();\n\n    const formik = useFormik({\n        initialValues: {\n            token: params.get(\"token\"),\n            password: \"\",\n            password_confirmation: \"\",\n        },\n        onSubmit: async data => {\n            await onResetPassword(data);\n            setToLogin(true);\n        },\n    });\n    if (toLogin) {\n        return <Redirect to=\"/signin\" />;\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <Box display=\"flex\" flexDirection=\"column\" my={2}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            defaultValue={formik.values.password}\n                        />\n                        <TextField\n                            id=\"password_confirmation\"\n                            label=\"Confirm password\"\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            defaultValue={formik.values.confirmPassword}\n                        />\n                    </Box>\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} my={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\n// UI\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport AddButton from \"components/AddButton\";\nimport WeekSelector from \"components/WeekSelector\";\nimport WeekDates from \"components/WeekDates\";\nimport ReportTable from \"Pages/developer-reports/ReportTable\";\nimport ReportForm from \"Pages/developer-reports/ReportForm\";\nimport TotalTimeInfo from \"./TotalTimeInfo\";\n\n// Utils\nimport { useStores } from \"../../store\";\nimport {\n    getParametersForLogs,\n    getStartOfWeek,\n} from \"utils/developerReportUtils\";\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        logs: store.logStore.logs,\n        logTypes: store.logStore.logTypes,\n        projectList: store.projectStore.projectList,\n        onGetLogs: store.logStore.onGetLogs,\n        onGetLogTypes: store.logStore.onGetLogTypes,\n        onGetProjectList: store.projectStore.onGetProjectList,\n        onAddLog: store.logStore.onAddLog,\n        onUpdateLog: store.logStore.onUpdateLog,\n        onDeleteLog: store.logStore.onDeleteLog,\n        setEmptyLogs: store.logStore.setEmptyLogs,\n    }));\n}\n\nexport default function Developers() {\n    const {\n        logs,\n        logTypes,\n        projectList,\n        onGetLogs,\n        onGetProjectList,\n        onGetLogTypes,\n        onAddLog,\n        onUpdateLog,\n        onDeleteLog,\n        setEmptyLogs,\n    } = useStore();\n\n    const [selectedWeek, setWeek] = useState(moment().isoWeek());\n    const [selectedDay, setDay] = useState();\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [editingLog, setEditingLog] = useState();\n    const [totalWeekTime, setTotalWeekTime] = useState();\n    const [totalDayTime, setTotalDayTime] = useState();\n\n    useEffect(() => {\n        if (selectedWeek) {\n            setDay(getStartOfWeek(selectedWeek));\n        }\n    }, [selectedWeek]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setEmptyLogs();\n            return;\n        }\n        onGetLogs(getParametersForLogs(selectedWeek));\n    }, [onGetLogs, selectedWeek, setEmptyLogs]);\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetLogTypes({\n            params: {\n                page: 1,\n            },\n        });\n    }, [onGetLogTypes, onGetProjectList]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingLog(null);\n    };\n\n    const handleEditLog = log => {\n        setEditingLog(log);\n        showModal();\n    };\n\n    const handleSubmitForm = async (data, id) => {\n        editingLog ? await onUpdateLog(data, id) : await onAddLog(data);\n        closeModal();\n    };\n\n    const handleDeleteLog = async id => {\n        closeModal();\n        await onDeleteLog(id);\n        await onGetLogs(getParametersForLogs(selectedWeek));\n    };\n\n    return (\n        <Container>\n            <Grid container wrap=\"wrap\">\n                <Box width=\"10%\" m={2} minWidth={120}>\n                    <WeekSelector\n                        setWeek={setWeek}\n                        selectedWeek={selectedWeek}\n                    />\n                </Box>\n                <Box m={2}>\n                    <WeekDates\n                        selectedWeek={selectedWeek}\n                        selectedDay={selectedDay}\n                        setDay={setDay}\n                        logs={logs}\n                    />\n                </Box>\n                <Box\n                    m={2}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    width=\"100%\"\n                    flexWrap=\"wrap\"\n                >\n                    <Box>\n                        <AddButton handleClick={showModal}>\n                            Add work item\n                        </AddButton>\n                    </Box>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        alignItems=\"flex-end\"\n                    >\n                        <TotalTimeInfo\n                            totalDayTime={totalDayTime}\n                            totalWeekTime={totalWeekTime}\n                            selectedWeek={selectedWeek}\n                        />\n                    </Box>\n                </Box>\n                <Grid item xs={12}></Grid>\n                <ReportTable\n                    logList={logs}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    handleEditLog={handleEditLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                    setTotalWeekTime={setTotalWeekTime}\n                    setTotalDayTime={setTotalDayTime}\n                />\n\n                {isModalVisible && (\n                    <ReportForm\n                        open={isModalVisible}\n                        handleClose={closeModal}\n                        projects={projectList}\n                        logTypes={logTypes}\n                        submitForm={handleSubmitForm}\n                        deleteLog={handleDeleteLog}\n                        initialData={editingLog}\n                        selectedDay={selectedDay}\n                        selectedWeek={selectedWeek}\n                    />\n                )}\n            </Grid>\n        </Container>\n    );\n}\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport FilterSelectorPanel from \"./FilterSelectorPanel\";\nimport { Container, Box } from \"@material-ui/core\";\nimport LogTableReports from \"./LogReportTable\";\n\n// Store\nimport { useStores } from \"store\";\n\n// Utils\nimport {\n    getWeekNumber,\n    getFromDate,\n    getToDate,\n    checkIfWeekSelected,\n} from \"utils/managerReportsUtils\";\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        logs: store.logStore.logs,\n        projectList: store.projectStore.projectList,\n        userList: store.userStore.userList,\n        onGetUserList: store.userStore.onGetUserList,\n        onGetLogs: store.logStore.onGetLogs,\n        onGetProjectList: store.projectStore.onGetProjectList,\n        onUpdateLogStatus: store.logStore.onUpdateLogStatus,\n        onDownload: store.exportStore.onDownload,\n    }));\n}\n\nexport default function ManagerReports() {\n    const {\n        logs,\n        projectList,\n        onGetProjectList,\n        onGetLogs,\n        userList,\n        onGetUserList,\n        onUpdateLogStatus,\n        onDownload,\n    } = useStore();\n\n    const currentWeek = getWeekNumber(new Date());\n\n    const [weekNumber, setWeekNumber] = useState(currentWeek);\n    const [fromDate, setFromDate] = useState(getFromDate(currentWeek));\n    const [toDate, setToDate] = useState(getToDate(currentWeek));\n    const [selectedProjects, setSelectedProjects] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    useEffect(() => {\n        if (weekNumber) {\n            setFromDate(getFromDate(weekNumber));\n            setToDate(getToDate(weekNumber));\n        }\n    }, [weekNumber]);\n\n    useEffect(() => {\n        if (checkIfWeekSelected(fromDate, toDate)) {\n            setWeekNumber(getWeekNumber(fromDate));\n            return;\n        }\n        setWeekNumber(null);\n    }, [fromDate, toDate]);\n\n    const onFilterChange = useCallback((type, value) => {\n        const setValueTypes = {\n            fromDate: () => setFromDate(value),\n            toDate: () => setToDate(value),\n            weekNumber: () => setWeekNumber(value),\n            selectedProjects: () => setSelectedProjects(value),\n            selectedUsers: () => setSelectedUsers(value),\n        };\n\n        setValueTypes[type]();\n    }, []);\n\n    useEffect(() => {\n        if (!projectList.length) {\n            onGetProjectList();\n        }\n        if (!userList.length) {\n            onGetUserList();\n        }\n    }, [onGetProjectList, onGetUserList, projectList, userList]);\n\n    const onDownloadFile = () => {\n        onDownload({\n            from_date: fromDate,\n            to_date: toDate,\n            week: weekNumber,\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n        });\n    };\n\n    return (\n        <Container>\n            <FilterSelectorPanel\n                fromDate={fromDate}\n                toDate={toDate}\n                weekNumber={weekNumber}\n                selectedProjects={selectedProjects}\n                selectedUsers={selectedUsers}\n                setFilter={onFilterChange}\n                projectList={projectList}\n                logs={logs}\n                userList={userList}\n            />\n            <Box mt={4}>\n                <LogTableReports\n                    onGetLogs={onGetLogs}\n                    fromDate={fromDate}\n                    toDate={toDate}\n                    logList={logs}\n                    userList={userList}\n                    projectList={projectList}\n                    onUpdateLogStatus={onUpdateLogStatus}\n                    selectedProjects={selectedProjects}\n                    selectedUsers={selectedUsers}\n                    onDownloadFile={onDownloadFile}\n                />\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport CreateProjectForm from \"./CreateProjectForm\";\nimport AddButton from \"components/AddButton\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n// Styled\nimport { StyledGrid } from \"./styles\";\n\nfunction useStore() {\n    const { userStore, projectStore, loadersStore } = useStores();\n\n    return useObserver(() => ({\n        projectList: projectStore.projectList,\n        projectTypes: projectStore.projectTypes,\n        userList: userStore.userList,\n        onGetProjectList: projectStore.onGetProjectList,\n        onGetUserList: userStore.onGetUserList,\n        onCreateProject: projectStore.onCreateProject,\n        onUpdateProject: projectStore.onUpdateProject,\n        onDeleteProject: projectStore.onDeleteProject,\n        onGetProjectTypes: projectStore.onGetProjectTypes,\n        setEditingProjectData: projectStore.setEditingProjectData,\n        editingProjectData: projectStore.editingProjectData,\n        setLoadingPage: loadersStore.setLoadingPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        projectList,\n        projectTypes,\n        userList,\n        onCreateProject,\n        onUpdateProject,\n        onGetProjectList,\n        onGetProjectTypes,\n        onGetUserList,\n        setEditingProjectData,\n        editingProjectData,\n        onDeleteProject,\n    } = useStore();\n\n    useEffect(() => {\n        if (!userList.length) {\n            onGetUserList();\n        }\n    }, [onGetUserList, userList.length]);\n\n    useEffect(() => {\n        if (!projectTypes.length) {\n            onGetProjectTypes();\n        }\n    }, [onGetProjectTypes, projectTypes.length]);\n\n    useEffect(() => {\n        if (!projectList.length) {\n            onGetProjectList();\n        }\n    }, [onGetProjectList, projectList.length]);\n\n    useEffect(() => {\n        if (editingProjectData) {\n            showModal();\n        }\n    }, [editingProjectData]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingProjectData();\n    };\n\n    const handleDeleteProject = id => {\n        onDeleteProject(id);\n        closeModal();\n    };\n\n    const onSubmitProject = async (data, id) => {\n        editingProjectData\n            ? await onUpdateProject(data, id)\n            : await onCreateProject(data);\n        closeModal();\n    };\n\n    const onEditProject = data => {\n        setEditingProjectData(data);\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Available projects:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>\n                        Create project\n                    </AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <ProjectsTable\n                            projectList={projectList}\n                            setEditingProjectData={onEditProject}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n            {isModalVisible && (\n                <CreateProjectForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    userList={userList}\n                    projectTypes={projectTypes}\n                    handleSubmit={onSubmitProject}\n                    initialData={editingProjectData}\n                    handleDeleteProject={handleDeleteProject}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport DevelopersTable from \"./DevelopersTable\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport AddButton from \"components/AddButton\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n//Styles\nimport { StyledGrid } from \"./styles\";\n\nfunction useStore() {\n    const { userStore } = useStores();\n\n    return useObserver(() => ({\n        userList: userStore.userList,\n        onGetUserList: userStore.onGetUserList,\n        setEditingUserData: userStore.setEditingUserData,\n        editingUserData: userStore.editingUserData,\n        onCreateUser: userStore.onCreateUser,\n        onUpdateUser: userStore.onUpdateUser,\n        onDeleteUser: userStore.onDeleteUser,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        userList,\n        onGetUserList,\n        editingUserData,\n        setEditingUserData,\n        onCreateUser,\n        onUpdateUser,\n        onDeleteUser,\n    } = useStore();\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingUserData();\n    };\n\n    const handleDeleteUser = id => {\n        onDeleteUser(id);\n        closeModal();\n    };\n\n    useEffect(() => {\n        if (!userList.length) {\n            onGetUserList();\n        }\n    }, [onGetUserList, userList]);\n\n    useEffect(() => {\n        if (editingUserData) {\n            showModal();\n        }\n    }, [editingUserData]);\n\n    const onSubmitUser = async (data, id) => {\n        editingUserData\n            ? await onUpdateUser(data, id)\n            : await onCreateUser(data);\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Developers:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>Add developer</AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <DevelopersTable\n                            developerList={userList}\n                            setEditingUserData={setEditingUserData}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n            {isModalVisible && (\n                <CreateUserForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    handleSubmit={onSubmitUser}\n                    initialData={editingUserData}\n                    handleDeleteUser={handleDeleteUser}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport ReportHistoryTable from \"./ReportHistoryTable\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n\nfunction useStore() {\n    const { exportStore, loadersStore, userStore, projectStore } = useStores();\n\n    return useObserver(() => ({\n        historyItems: exportStore.historyItems,\n        onGetHistoryItems: exportStore.onGetHistoryItems,\n        setLoadingPage: loadersStore.setLoadingPage,\n        projectList: projectStore.projectList,\n        onGetProjectList: projectStore.onGetProjectList,\n        userList: userStore.userList,\n        onGetUserList: userStore.onGetUserList,\n    }));\n}\n\nexport default function ReportHistory() {\n    const {\n        onGetHistoryItems,\n        historyItems,\n        setLoadingPage,\n        onGetProjectList,\n        projectList,\n        onGetUserList,\n        userList,\n    } = useStore();\n\n    React.useEffect(() => {\n        const loadData = async () => {\n            setLoadingPage(true);\n            await onGetProjectList();\n            setLoadingPage(false);\n        };\n        if (!projectList.length) {\n            loadData();\n        }\n    }, [onGetProjectList, projectList.length, setLoadingPage]);\n\n    React.useEffect(() => {\n        const loadData = async () => {\n            setLoadingPage(true);\n            await onGetUserList();\n            setLoadingPage(false);\n        };\n        if (!userList.length) {\n            loadData();\n        }\n    }, [onGetUserList, setLoadingPage, userList.length]);\n\n    React.useEffect(() => {\n        const loadData = async () => {\n            setLoadingPage(true);\n            await onGetHistoryItems();\n            setLoadingPage(false);\n        };\n        loadData();\n    }, [onGetHistoryItems, setLoadingPage]);\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Export history</Typography>\n            </Box>\n            <Box my={3}>\n                <ReportHistoryTable\n                    userList={userList}\n                    projectList={projectList}\n                    historyItems={historyItems}\n                />\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n    Redirect,\n} from \"react-router-dom\";\n\n// Components\nimport NoMatch from \"components/NoMatch\";\nimport NavigationPanel from \"components/NavigationPanel\";\n\n// Routes\nimport routes from \"./routes\";\n\nconst Navigation = compProps => (\n    <Router>\n        <NavigationPanel {...compProps} />\n        <Switch>\n            {routes.map((route, index) => (\n                <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    render={props => {\n                        if (\n                            route.adminRedirect &&\n                            route.adminRedirect(compProps)\n                        ) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/manager-reports\" }}\n                                />\n                            );\n                        }\n                        if (route.devRedirect && route.devRedirect(compProps)) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/developer-reports\" }}\n                                />\n                            );\n                        }\n                        return !route.rules ||\n                            route.rules.every(rule => rule(compProps)) ? (\n                            <route.component {...props} />\n                        ) : (\n                            <Redirect to={{ pathname: route.redirect }} />\n                        );\n                    }}\n                />\n            ))}\n\n            <Route component={NoMatch} />\n        </Switch>\n    </Router>\n);\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport const StyledBackdrop = styled(Backdrop)`\n    z-index: ${({ theme }) => theme.zIndex.modal + 1};\n`;\n\nexport const StyledLinearProgress = styled(LinearProgress)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n`;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// Styles\nimport { StyledBackdrop, StyledLinearProgress } from \"./styles\";\n\n// utils\nimport { useStores } from \"../../store\";\n\n// Hooks\nfunction useLoadingData() {\n    const { loadersStore } = useStores();\n\n    return useObserver(() => ({\n        isLoadingPage: loadersStore.isLoadingPage,\n    }));\n}\n\nconst PageLoader = () => {\n    const { isLoadingPage } = useLoadingData();\n\n    if (!isLoadingPage) return null;\n\n    return (\n        <StyledBackdrop open={isLoadingPage}>\n            <StyledLinearProgress color=\"secondary\" />\n        </StyledBackdrop>\n    );\n};\n\nexport default PageLoader;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport GlobalFonts from \"assets/fonts\";\nimport Notification from \"components/Notification\";\n// Navigation\nimport Navigation from \"./navigation\";\n\n// Store\nimport { useStores } from \"./store\";\n\n// Components\nimport PageLoader from \"./components/PageLoader\";\n\n// Hooks\nfunction useAuthData() {\n    const {\n        authStore,\n        loadersStore: { setLoadingPage },\n    } = useStores();\n\n    return useObserver(() => ({\n        addAuthHeaderInterceptor: authStore.addAuthHeaderInterceptor,\n        dispatchLoginFulfilled: authStore.dispatchLoginFulfilled,\n        setInitialState: authStore.setInitialState,\n        onGetMe: authStore.onGetMe,\n        onLogout: authStore.onLogout,\n        setLoadingPage: setLoadingPage,\n        me: authStore.me,\n        token: authStore.token,\n    }));\n}\n\nfunction App() {\n    const {\n        dispatchLoginFulfilled,\n        addAuthHeaderInterceptor,\n        setInitialState,\n        onGetMe,\n        setLoadingPage,\n        me,\n        token: myToken,\n        onLogout,\n    } = useAuthData();\n\n    useEffect(() => {\n        async function getTokenFromLocalStorage() {\n            try {\n                const token = localStorage.getItem(\"token\") || myToken;\n\n                if (token) {\n                    setLoadingPage(true);\n                    await addAuthHeaderInterceptor(token);\n                    const responseMe = await onGetMe();\n                    const me = responseMe?.data;\n                    dispatchLoginFulfilled(me, token);\n                } else {\n                    setInitialState();\n                }\n            } catch (e) {\n                console.error(e);\n            } finally {\n                setLoadingPage(false);\n            }\n        }\n        if (!me) {\n            getTokenFromLocalStorage();\n        }\n    }, [\n        addAuthHeaderInterceptor,\n        dispatchLoginFulfilled,\n        me,\n        myToken,\n        onGetMe,\n        setInitialState,\n        setLoadingPage,\n    ]);\n\n    return (\n        <>\n            <PageLoader />\n            <Navigation me={me} onLogout={onLogout} />\n            <CssBaseline />\n            <GlobalFonts />\n            <Notification />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"mobx-react\";\n// Theme\nimport ThemeProvider from \"assets/styles/ThemeProvider\";\n// Components\nimport App from \"./App\";\n// Worker\nimport * as serviceWorker from \"./serviceWorker\";\n// Stores\nimport RootStore from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider {...new RootStore()}>\n        <Router history={history}>\n            <ThemeProvider>\n                <App />\n            </ThemeProvider>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}