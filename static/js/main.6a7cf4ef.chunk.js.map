{"version":3,"sources":["assets/fonts/GT-America-Extended-Medium.otf","assets/fonts/GT-America-Extended-Bold.otf","components/NoMatch/img/404.png","constants/theme.js","assets/styles/ThemeProvider.js","assets/fonts/index.js","services/api/constants.js","services/api/AuthService.js","store/AuthStore.js","services/api/LogService.js","services/api/ProjectService.js","services/api/UserService.js","constants/pagination.js","store/LogStore.js","store/LoadersStore.js","store/ProjectStore.js","store/UserStore.js","store/NotificationStore.js","services/api/ExportService.js","constants/export.js","store/ExportStore.js","store/PaginationStore.js","store/index.js","components/Notification/index.js","components/NoMatch/styles.js","components/NoMatch/index.js","components/ProfileMenu/style.js","components/ProfileMenu/index.js","components/NavigationPanel/NavigationMenu/styles.js","components/NavigationPanel/NavigationMenu/index.js","components/NavigationPanel/styles.js","components/Logo/styles.js","components/Logo/index.js","utils/routerUtils.js","components/NavigationPanel/index.js","components/TableRow/styles.js","components/TableRow/index.js","components/TableCell/styles.js","components/TableCell/index.js","constants/developers.js","Pages/developers/DevelopersTable/index.js","utils/developersUtils.js","constants/dateFormats.js","components/FormDialog/styles.js","components/FormDialog/index.js","Pages/developers/SkillsSelector/index.js","Pages/developers/RateInput/index.js","components/DialogActionButton/styles.js","components/DialogActionButton/index.js","Pages/developers/CreateUserForm/styles.js","Pages/developers/RoleSelector/index.js","Pages/developers/CreateUserForm/index.js","components/AddButton/styles.js","components/AddButton/index.js","components/ReportPagination/index.js","Pages/developers/styles.js","components/WeekSelector/index.js","utils/managerReportsUtils.js","Pages/manager-reports/DateRangePicker/index.js","Pages/manager-reports/ProjectSelector/style.js","Pages/manager-reports/ProjectSelector/index.js","Pages/manager-reports/UserSelector/style.js","Pages/manager-reports/UserSelector/index.js","Pages/manager-reports/FilterSelectorPanel/index.js","Pages/manager-reports/LogStatusHandler/style.js","constants/managerReports.js","Pages/manager-reports/LogStatusHandler/index.js","Pages/manager-reports/LogReportTable/index.js","components/DownloadButton/styles.js","components/DownloadButton/index.js","constants/projects.js","utils/projectUtils.js","Pages/projects/ProjectsTable/index.js","Pages/projects/UserMultiSelect/index.js","Pages/projects/TypeSelector/index.js","Pages/projects/CreateProjectForm/styles.js","Pages/projects/CreateProjectForm/index.js","Pages/projects/styles.js","constants/reportHistory.js","Pages/report-history/ReportHistoryTable/index.js","components/WeekDates/styles.js","utils/developerReportUtils.js","components/WeekDates/index.js","constants/developerReport.js","Pages/developer-reports/ReportTable/style.js","Pages/developer-reports/ReportTable/index.js","components/TimePicker/index.js","Pages/developer-reports/Selector/styles.js","Pages/developer-reports/Selector/index.js","Pages/developer-reports/LogInfoHeader/index.js","Pages/developer-reports/ReportForm/styles.js","Pages/developer-reports/ReportForm/index.js","Pages/developer-reports/TotalTimeInfo/index.js","Pages/signin/styles.js","Pages/ForgotPassword/style.js","Pages/ResetPassword/style.js","navigation/rules.js","navigation/routes.js","Pages/home/index.js","Pages/signin/index.js","Pages/ForgotPassword/index.js","Pages/ResetPassword/index.js","Pages/developer-reports/index.js","Pages/manager-reports/index.js","Pages/projects/index.js","Pages/developers/index.js","Pages/report-history/index.js","navigation/index.js","components/PageLoader/styles.js","components/PageLoader/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","logo","success","green","error","red","info","blue","default","grey","children","StylesProvider","injectFirst","createGlobalStyle","AmericaMedium","AmericaBold","API_URL","window","authService","login","data","a","axios","post","logout","forgotPassword","body","resetPassword","getMe","get","addAuthHeaderInterceptor","token","onError","interceptors","request","use","config","headers","response","status","Promise","reject","clearInterceptor","interceptor","eject","AuthStore","rootStore","showError","message","notificationStore","showNotification","type","setInitialState","undefined","me","onLogin","showLoader","access_token","localStorage","setItem","setUserToken","console","onLogout","removeItem","authInterceptor","onGetMe","dispatchLoginFulfilled","onForgotPassword","onResetPassword","getItem","this","value","loadersStore","setLoadingPage","decorate","observable","ref","action","logService","getLogs","params","addLog","updateLog","pathId","put","deleteLog","id","delete","setLogStatus","getLogTypes","projectService","getProjectList","getProjectTypes","getProjectUserList","createProject","updateProject","deleteProject","userService","getUserList","getUser","createUser","updateUser","deleteUser","ROWS_PER_PAGE","updateLogListStrategy","dataArray","newItem","map","item","filter","userList","LogStore","setPaginationMeta","paginationStore","setMeta","setEmptyLogs","logs","onGetLogs","setLoading","runInAction","meta","onAddLog","onUpdateLog","onUpdateLogStatus","onDeleteLog","onGetLogTypes","logTypes","onGetProjectList","per_page","projectList","onGetUserList","updateLogInList","setLogTypes","LoadersStore","isLoadingPage","fetchStrategy","update","create","ProjectStore","projectTypes","handleFetchProjectData","actionType","onCreateProject","onUpdateProject","onDeleteProject","onGetProjectTypes","onGetProjectUserList","setEditingProjectData","project","editingProjectData","users","projectUserList","UserStore","setIsLoading","handleFetchUserData","log","onCreateUser","onUpdateUser","onDeleteUser","setEditingUserData","user","editingUserData","NotificationStore","notificationQueue","duration","length","hideNotification","exportService","download","responseType","getHistoryItems","EXCEL_TYPE","ExportStore","showErrorMessage","onDownload","downloadFile","onGetHistoryItems","page","perPage","historyItems","week","from_date","to_date","blob","Blob","document","createElement","href","URL","createObjectURL","click","PaginationStore","setInitialValues","initialValues","setPage","number","setPerPage","useStores","React","useContext","MobXProviderContext","RootStore","authStore","logStore","projectStore","userStore","exportStore","SlideTransition","props","Slide","direction","Notification","store","useObserver","useStore","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","onClose","key","elevation","variant","severity","PageWrapper","styled","div","PageContainer","backgroundImg","Content","MainText","p","SecondaryText","NoMatch","history","onClick","push","StyledAvatar","Avatar","ProfileMenu","useState","anchorEl","setAnchorEl","event","currentTarget","firstname","lastname","Menu","keepMounted","Boolean","MenuItem","StyledLink","NavLink","dark","useStyles","makeStyles","list","width","fullList","menuButton","color","active","background","NavigationMenu","anchor","menuItems","classes","left","state","setState","toggleDrawer","IconButton","aria-label","className","Drawer","clsx","role","onKeyDown","List","path","name","to","ListItem","button","ListItemText","Divider","Shape","span","SIZE","ShapeContainer","Text","LogoContainer","Logo","ROUTES","Object","freeze","ROUTES_FOR_DEV","ROUTES_FOR_ADMIN","BY_ROLE","admin","dev","root","flexGrow","marginRight","spacing","title","NavigationPanel","routes","routesByRole","includes","getRoutesByRole","AppBar","position","Toolbar","Typography","Button","StyledTableRow","otherProps","TableRow","hover","text","StyledTableCell","noWrap","minWidth","restProps","TableCell","TABLE_HEADERS","DEFAULT_FORM_VALUES","skills","email","rate","country","developerList","Table","TableHead","TableBody","developer","component","scope","join","projects","durationInMinutes","total_work_time","Number","moment","hours","minutes","StyledDialog","Dialog","FormDialog","handleClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","EMPTY_OPTIONS","SkillMultiSelect","onChange","values","Autocomplete","multiple","options","freeSolo","toJS","e","newValue","inputValue","renderInput","TextField","label","RateInput","required","target","StyledButton","DialogActionButton","StyledGridContainer","Grid","RoleSelector","RadioGroup","FormLabel","container","wrap","FormControlLabel","control","Radio","CreateUserForm","handleSubmit","initialData","handleDeleteUser","keys","reduce","acc","getInitialFormValues","formik","useFormik","onSubmit","autoComplete","Box","mr","handleChange","defaultValue","ml","xs","setFieldValue","justify","DialogActions","StyledAddIcon","AddIcon","AddButton","handleClick","size","startIcon","ReportPagination","useEffect","display","alignItems","justifyContent","TablePagination","rowsPerPageOptions","count","total","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","Pagination","last_page","current_page","StyledGrid","weeksCount","setWeek","selectedWeek","currentWeek","Array","from","_","index","String","weeksOptions","getWeekNumber","date","isoWeek","getFromDate","weekNumber","isoWeekday","format","getToDate","isAfter","Date","formatToString","momentDate","getMomentInstance","checkIfWeekSelected","fromDate","toDate","fromDateWeekNumber","startOfWeek","startOf","endOfWeek","endOf","isSame","DateRangePicker","setFilter","momentFromDate","momentToDate","utils","MomentUtils","locale","maxDate","minDate","StyledTextField","ProjectSelector","selectedProjects","filterSelectedOptions","getOptionSelected","option","getOptionLabel","selectedUser","FilterSelectorPanel","selectedUsers","flexWrap","mt","sm","mx","WeekSelector","selectedProject","UserSelector","StyledPopper","Popper","light","STATUS_OPTIONS","STATUS_COLORS","approved","declined","LogStatusHandler","setOpen","isLoading","setLoadingState","anchorRef","useRef","handleMenuItemClick","current","contains","ButtonGroup","disableElevation","prevOpen","CircularProgress","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","selected","LogReportTable","logList","userData","find","getUserName","user_id","getProjectName","project_id","descriptions","time","asMinutes","formatTimeDuration","StyledIcon","GetAppIcon","alias","getDate","TableContainer","updated_at","created_at","num_of_dev","durationMin","formatTime","total_log","UserMultiSelect","idSet","Set","has","getSelectedOptions","TypeSelector","LogForm","handleDeleteProject","multiline","fullWidth","rows","getDatesLabel","concatUserNames","concatProjectNames","isActive","hasLogs","secondary","from_time","to_time","log_type_id","getTotalTime","durations","totalDurations","slice","prev","cur","add","Math","floor","clone","asHours","getParametersForLogs","getStartOfWeek","setDay","selectedDay","weekDates","setWeekDates","day","some","checkLogDate","formatDate","set","month","validationErrorMessages","handleEditLog","setTotalWeekTime","setTotalDayTime","filteredLogs","setFilteredLogs","i","editLog","getLogTypeEnum","result","getTimeLabel","Developers","setTouched","ampm","momentTime","helperText","StyledFormControl","FormControl","Selector","labelKey","valueKey","placeholder","opts","createOptions","InputLabel","Select","LogInfoHeader","workingDay","flex","pl","align","gutterBottom","paragraph","marginBottom","zIndex","validate","errors","isBefore","submitForm","validateOnChange","validateOnBlur","handleDeleteLog","onSetTouched","touched","margin","TotalTimeInfo","totalDayTime","totalWeekTime","getDateIntervalLabel","StyledContainer","authRequired","unauthorizedOnly","prop","roleAdmin","roleDev","exact","rules","redirect","adminRedirect","devRedirect","password","setForm","useAuthData","flexDirection","my","setSuccess","toLogin","setToLogin","URLSearchParams","useLocation","search","password_confirmation","confirmPassword","isModalVisible","setModalVisibility","editingLog","setEditingLog","showModal","closeModal","handleSubmitForm","Container","m","WeekDates","ReportTable","setInitialPagination","setWeekNumber","setFromDate","setToDate","setSelectedProjects","setSelectedUsers","getLogsParams","onFilterChange","useCallback","DownloadButton","onSubmitProject","pb","ProjectsTable","onSubmitUser","DevelopersTable","ReportHistoryTable","Navigation","compProps","route","render","pathname","every","rule","StyledBackdrop","Backdrop","modal","StyledLinearProgress","LinearProgress","PageLoader","useLoadingData","App","myToken","responseMe","getTokenFromLocalStorage","CssBaseline","location","hostname","match","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6a7cf4ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Medium.78b3d2f6.otf\";","module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Bold.ebbc4701.otf\";","module.exports = __webpack_public_path__ + \"static/media/404.24525eca.png\";","import { createMuiTheme } from \"@material-ui/core\";\nimport { green, red, blue, grey } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#a8bcd8\",\n        },\n        logo: \"#d1d2d4\",\n        success: {\n            main: green[200],\n        },\n        error: {\n            main: red[200],\n        },\n        info: {\n            main: blue[500],\n        },\n        default: {\n            main: grey[500],\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../../constants/theme\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nexport default function ({ children }) {\n    return (\n        <StylesProvider injectFirst>\n            <MuiThemeProvider theme={theme}>\n                <ThemeProvider theme={theme}>{children}</ThemeProvider>\n            </MuiThemeProvider>\n        </StylesProvider>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nimport AmericaMedium from \"assets/fonts/GT-America-Extended-Medium.otf\";\nimport AmericaBold from \"assets/fonts/GT-America-Extended-Bold.otf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GT-America'),\n        url(${AmericaMedium});\n        font-weight: 300;\n        font-style: normal;\n    };\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GTAmerica'),\n        url(${AmericaBold});\n        font-weight: 600;\n        font-style: normal;\n    }\n`;\n","export const API_URL = window.API_URL\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass AuthService {\n    login = async data => {\n        return axios.post(`${API_URL}/auth/login`, {\n            ...data,\n        });\n    };\n\n    logout = async () => axios.post(`${API_URL}/auth/logout`);\n\n    forgotPassword = async body =>\n        axios.post(`${API_URL}/auth/forgot-password`, { ...body });\n\n    resetPassword = body =>\n        axios.post(`${API_URL}/auth/reset-password`, { ...body });\n\n    getMe = async () => axios.get(`${API_URL}/me`);\n\n    addAuthHeaderInterceptor = async ({ token, onError }) => {\n        return axios.interceptors.request.use(\n            config => {\n                if (token) {\n                    config.headers[\"Authorization\"] = \"Bearer \" + token;\n                }\n                return config;\n            },\n            error => {\n                if (error.response.status === 401) {\n                    onError();\n                }\n                Promise.reject(error);\n            }\n        );\n    };\n\n    clearInterceptor = interceptor => {\n        axios.interceptors.request.eject(interceptor);\n    };\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\n// Services\nimport authService from \"../services/api/AuthService\";\n\nclass AuthStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n    }\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setInitialState = () => {\n        this.token = undefined;\n        this.me = undefined;\n    };\n\n    onLogin = async data => {\n        try {\n            this.showLoader(true);\n            const response = await authService.login(data);\n            const token = response?.data?.access_token;\n\n            if (token) {\n                await localStorage.setItem(\"token\", token);\n                this.setUserToken(token);\n            }\n        } catch (err) {\n            console.error(err);\n            this.showNotification(\"error\", err?.response?.data?.message);\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onLogout = async data => {\n        try {\n            await authService.logout();\n            await localStorage.removeItem(\"token\");\n\n            authService.clearInterceptor(this.authInterceptor);\n            this.setInitialState();\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    onGetMe = async () => {\n        const response = await authService.getMe();\n        return response.data;\n    };\n\n    dispatchLoginFulfilled = (me, token) => {\n        this.me = me;\n        this.token = token;\n    };\n\n    setUserToken = token => {\n        this.token = token;\n    };\n\n    onForgotPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.forgotPassword(body);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onResetPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.resetPassword(body);\n            this.showNotification(\n                \"success\",\n                \"Password was successfully changed\"\n            );\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    addAuthHeaderInterceptor = async () => {\n        const token = await localStorage.getItem(\"token\");\n\n        this.authInterceptor = await authService.addAuthHeaderInterceptor({\n            token,\n            onError: this.setInitialState,\n        });\n    };\n}\n\ndecorate(AuthStore, {\n    // state\n    me: observable.ref,\n    token: observable,\n\n    //actions\n    setInitialState: action,\n    onLogin: action,\n    dispatchLoginFulfilled: action,\n    setUserToken: action,\n    addAuthHeaderInterceptor: action,\n    onGetMe: action,\n    onForgotPassword: action,\n});\n\nexport default AuthStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass LogService {\n    getLogs = params => axios.get(`${API_URL}/log`, { params });\n    addLog = body => axios.post(`${API_URL}/log`, { ...body });\n    updateLog = (params, pathId) =>\n        axios.put(`${API_URL}/log/${pathId}`, { ...params });\n    deleteLog = id => axios.delete(`${API_URL}/log/${id}`);\n    setLogStatus = ({ id, status }) =>\n        axios.post(`${API_URL}/log/${id}/${status}`);\n    getLogTypes = params => axios.get(`${API_URL}/log-type`, { ...params });\n}\n\nconst logService = new LogService();\n\nexport default logService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ProjectService {\n    getProjectList = params => axios.get(`${API_URL}/project`, { params });\n    getProjectTypes = () => axios.get(`${API_URL}/project/types`);\n    getProjectUserList = id => axios.get(`${API_URL}/project/${id}/users`);\n    createProject = body => axios.post(`${API_URL}/project`, { ...body });\n    updateProject = (body, id) =>\n        axios.put(`${API_URL}/project/${id}`, { ...body });\n    deleteProject = id => axios.delete(`${API_URL}/project/${id}`);\n}\n\nconst projectService = new ProjectService();\n\nexport default projectService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass UserService {\n    getUserList = params => axios.get(`${API_URL}/user`, { params });\n    getMe = () => axios.get(`${API_URL}/me`);\n    getUser = id => axios.get(`${API_URL}/user/${id}`);\n    createUser = body => axios.post(`${API_URL}/user`, { ...body });\n    updateUser = (body, pathId) =>\n        axios.put(`${API_URL}/user/${pathId}`, { ...body });\n    deleteUser = id => axios.delete(`${API_URL}/user/${id}`);\n}\n\nconst userService = new UserService();\n\nexport default userService;\n","export const DEFAULT_PAGE = 1;\nexport const DEFAULT_PER_PAGE = 5;\nexport const MAX_PER_PAGE = 50;\nexport const ROWS_PER_PAGE = [5, 10, 20, 50];\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport logService from \"services/api/LogService\";\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\nconst updateLogListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, id) => {\n        return dataArray.filter(item => item.id !== id);\n    },\n    create: (userList, item) => [...userList, item],\n};\n\nclass LogStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.logs = [];\n        this.logTypes = [];\n\n        this.projectList = [];\n        this.userList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setEmptyLogs = () => {\n        this.logs = [];\n    };\n\n    onGetLogs = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.getLogs(params);\n            runInAction(\"setLogList\", () => {\n                this.logs = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onAddLog = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.addLog(params);\n            runInAction(\"addLogItem\", () => {\n                this.logs = updateLogListStrategy[\"create\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLog = async (params, pathId) => {\n        try {\n            this.setLoading(true);\n            const response = await logService.updateLog(params, pathId);\n            runInAction(\"updateLogItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLogStatus = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.setLogStatus(params);\n            runInAction(\"updateLogStatusItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log status changed\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onDeleteLog = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLog(id);\n            runInAction(\"selectLogItem\", () => {\n                this.logs = updateLogListStrategy[\"delete\"](this.logs, id);\n            });\n            this.showNotification(\"success\", \"Log deleted\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetLogTypes = async config => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.getLogTypes(config);\n            runInAction(\"setLogTypes\", () => {\n                this.logTypes = data?.data;\n            });\n        } catch (err) {\n            console.error(err);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetProjectList = async () => {\n        try {\n            this.setLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    set logTypes(data) {\n        this.logTypes = data;\n    }\n\n    set logs(logs) {\n        this.logs = logs;\n    }\n}\n\ndecorate(LogStore, {\n    // state\n    logs: observable,\n    logTypes: observable,\n    projectList: observable,\n    userList: observable,\n\n    // actions\n    onGetLogs: action,\n    onAddLog: action,\n    onUpdateLog: action,\n    onDeleteLog: action,\n    onUpdateLogStatus: action,\n    updateLogInList: action,\n    setEmptyLogs: action,\n    setLogTypes: action,\n    onGetLogTypes: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n});\n\nexport default LogStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass LoadersStore {\n    isLoadingPage = true;\n\n    setLoadingPage = status => {\n        this.isLoadingPage = status;\n    };\n}\n\ndecorate(LoadersStore, {\n    // state\n    isLoadingPage: observable,\n\n    // actions\n    setLoadingPage: action,\n});\n\nexport default LoadersStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n\n// Services\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => projectService.deleteProject(id),\n    update: () => projectService.updateProject(body, id),\n    create: () => projectService.createProject(body),\n});\n\nclass ProjectStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.projectList = [];\n        this.projectTypes = [];\n        this.projectUserList = [];\n        this.editingProjectData = undefined;\n        this.userList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setInitialState = () => {\n        this.projectList = [];\n        this.projectTypes = [];\n    };\n\n    onGetProjectList = async params => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectList(params);\n            runInAction(\"setProjectList\", () => {\n                this.projectList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    handleFetchProjectData = async (actionType, data) => {\n        try {\n            this.setLoading(true);\n            await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"Project saved\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onCreateProject = body => this.handleFetchProjectData(\"create\", { body });\n\n    onUpdateProject = (body, id) =>\n        this.handleFetchProjectData(\"update\", { body, id });\n\n    onDeleteProject = id => this.handleFetchProjectData(\"delete\", { id });\n\n    onGetProjectTypes = async () => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectTypes();\n            runInAction(\"setProjectTypes\", () => {\n                this.projectTypes = response?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetProjectUserList = async id => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectUserList(id);\n            return response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    setEditingProjectData = async project => {\n        if (!project) {\n            runInAction(() => {\n                this.editingProjectData = project;\n            });\n            return;\n        }\n        const users = await this.onGetProjectUserList(project.id);\n        runInAction(() => {\n            this.editingProjectData = {\n                ...project,\n                users: users.map(item => item.id),\n            };\n        });\n    };\n\n    set projectList(data) {\n        this.projectList = data;\n    }\n    set projectTypes(data) {\n        this.projectTypes = data;\n    }\n    set projectUserList(data) {\n        this.projectUserList = data;\n    }\n}\n\ndecorate(ProjectStore, {\n    // state\n    projectList: observable,\n    projectTypes: observable,\n    projectUserList: observable,\n    editingProjectData: observable,\n    userList: observable,\n\n    //actions\n    setInitialState: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n    onGetProjectTypes: action,\n    setEditingProjectData: action,\n    onCreateProject: action,\n    onUpdateProject: action,\n    onDeleteProject: action,\n});\n\nexport default ProjectStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport userService from \"../services/api/UserService\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => userService.deleteUser(id),\n    update: () => userService.updateUser(body, id),\n    create: () => userService.createUser(body),\n});\n\nclass UserStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.userList = [];\n        this.editingUserData = undefined;\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    onGetUserList = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await userService.getUserList(params);\n            runInAction(\"setUserList\", () => {\n                this.userList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    handleFetchUserData = async (actionType, data) => {\n        try {\n            this.setIsLoading(true);\n            await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"User saved\");\n        } catch (error) {\n            console.log(\"error?.response: \", error?.response?.data?.message);\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onCreateUser = body => this.handleFetchUserData(\"create\", { body });\n\n    onUpdateUser = (body, id) =>\n        this.handleFetchUserData(\"update\", { body, id });\n\n    onDeleteUser = id => this.handleFetchUserData(\"delete\", { id });\n\n    setEditingUserData = user => {\n        this.editingUserData = user;\n    };\n}\n\ndecorate(UserStore, {\n    // state\n    userList: observable,\n    editingUserData: observable,\n\n    // actions\n    setEditingUserData: action,\n    onGetUserList: action,\n    onCreateUser: action,\n    onUpdateUser: action,\n    onDeleteUser: action,\n});\n\nexport default UserStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass NotificationStore {\n    notificationQueue = [];\n\n    showNotification = data => {\n        this.notificationQueue = [\n            ...this.notificationQueue,\n            {\n                ...data,\n                duration: 2000,\n                id: this.notificationQueue.length,\n            },\n        ];\n    };\n    hideNotification = id => {\n        this.notificationQueue = this.notificationQueue.filter(\n            item => item.id !== id\n        );\n    };\n}\n\ndecorate(NotificationStore, {\n    // state\n    notificationQueue: observable,\n\n    // actions\n    showNotification: action,\n    hideNotification: action,\n});\n\nexport default NotificationStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ExportService {\n    download = params =>\n        axios.get(`${API_URL}/export`, {\n            params,\n            responseType: \"blob\",\n        });\n    getHistoryItems = params =>\n        axios.get(`${API_URL}/export-history`, { params });\n}\n\nconst exportService = new ExportService();\n\nexport default exportService;\n","export const EXCEL_TYPE =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n","// Core\nimport { action, decorate, observable, runInAction } from \"mobx\";\nimport exportService from \"../services/api/ExportService\";\n\n//constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\nimport { EXCEL_TYPE } from \"constants/export\";\nimport userService from \"services/api/UserService\";\nimport projectService from \"services/api/ProjectService\";\n\nclass ExportStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.historyItems = [];\n        this.userList = [];\n        this.projectList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showErrorMessage = message => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type: \"error\",\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    downloadFile(response, { week, from_date, to_date }) {\n        const blob = new Blob([response.data], {\n            type: EXCEL_TYPE,\n        });\n        const a = document.createElement(\"a\");\n        a.href = window.URL.createObjectURL(blob);\n        a.download = `KW_${week ? week : \"\"}_${\n            from_date && to_date ? `${from_date}-${to_date}` : \"\"\n        }.xlsx`;\n        a.click();\n    }\n\n    onDownload = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.download(params);\n            if (response.headers[\"content-type\"] === EXCEL_TYPE) {\n                this.downloadFile(response, params);\n            } else {\n                this.showErrorMessage(\"Error exporting report\");\n            }\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetHistoryItems = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.getHistoryItems({\n                page: this.page,\n                per_page: this.perPage,\n                ...params,\n            });\n            runInAction(\"setHistoryItems\", () => {\n                this.historyItems = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetProjectList = async () => {\n        try {\n            this.setIsLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetUserList = async () => {\n        try {\n            this.setIsLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n}\n\ndecorate(ExportStore, {\n    //observables\n    historyItems: observable,\n    page: observable,\n    perPage: observable,\n    userList: observable,\n    projectList: observable,\n\n    // actions\n    onDownload: action,\n    onGetHistoryItems: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n});\n\nexport default ExportStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nclass PaginationStore {\n    page = DEFAULT_PAGE;\n    perPage = DEFAULT_PER_PAGE;\n    meta = undefined;\n\n    setInitialValues = initialValues => {\n        this.page = initialValues?.page || DEFAULT_PAGE;\n        this.perPage = initialValues?.perPage || this.perPage;\n        this.meta = undefined;\n    };\n\n    setPage = number => {\n        this.page = number;\n    };\n\n    setPerPage = number => {\n        this.page = DEFAULT_PAGE;\n        this.perPage = number;\n    };\n\n    setMeta = data => {\n        this.meta = data;\n    };\n}\n\ndecorate(PaginationStore, {\n    // state\n    page: observable,\n    perPage: observable,\n    meta: observable,\n\n    // actions\n    setInitialValues: action,\n    setPage: action,\n    setPerPage: action,\n    setMeta: action,\n});\n\nexport default PaginationStore;\n","// Core\nimport React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\n// Stores\nimport AuthStore from \"./AuthStore\";\nimport LogStore from \"./LogStore\";\nimport LoadersStore from \"./LoadersStore\";\nimport ProjectStore from \"./ProjectStore\";\nimport UserStore from \"./UserStore\";\nimport NotificationStore from \"./NotificationStore\";\nimport ExportStore from \"./ExportStore\";\nimport PaginationStore from \"./PaginationStore\";\n\nclass RootStore {\n    constructor() {\n        this.authStore = new AuthStore(this);\n        this.logStore = new LogStore(this);\n        this.loadersStore = new LoadersStore(this);\n        this.projectStore = new ProjectStore(this);\n        this.userStore = new UserStore(this);\n        this.notificationStore = new NotificationStore(this);\n        this.exportStore = new ExportStore(this);\n        this.paginationStore = new PaginationStore(this);\n    }\n}\n\n// Hook\nexport const useStores = () => {\n    return React.useContext(MobXProviderContext);\n};\n\nexport default RootStore;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Slide from \"@material-ui/core/Slide\";\n\n// Store\nimport { useStores } from \"../../store\";\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"up\" />;\n}\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        notificationQueue: store.notificationStore.notificationQueue,\n        hideNotification: store.notificationStore.hideNotification,\n    }));\n}\n\nexport default function Notification() {\n    const { notificationQueue, hideNotification } = useStore();\n\n    return notificationQueue.map(item => (\n        <Snackbar\n            open\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n            }}\n            autoHideDuration={item.duration}\n            TransitionComponent={SlideTransition}\n            onClose={() => hideNotification(item.id)}\n            key={item.id}\n        >\n            <MuiAlert elevation={6} variant=\"filled\" severity={item.type}>\n                {item.message}\n            </MuiAlert>\n        </Snackbar>\n    ));\n}\n","import styled from 'styled-components'\nimport backgroundImg from './img/404.png'\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    padding-top: 10px;\n    box-sizing: border-box;\n`\n\nexport const PageContainer = styled.div`\n    width: 870px;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: url(${backgroundImg}) no-repeat center center;\n    background-size: 100%;\n`\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 380px;\n`\n\nexport const MainText = styled.p`\n    margin: 0;\n    font-size: 23px;\n    line-height: 35px;\n    margin-bottom: 40px;\n`\n\nexport const SecondaryText = styled.p`\n    margin: 0;\n    font-size: 18px;\n    line-height: 27px;\n    margin-bottom: 40px;\n`\n","// Core\nimport React from 'react'\n\n//Styles\nimport {\n    PageWrapper,\n    PageContainer,\n    MainText,\n    SecondaryText,\n    Content,\n} from './styles'\n\nconst NoMatch = ({ history }) => (\n    <PageWrapper>\n        <PageContainer>\n            <Content>\n                <MainText>\n                    Oops! The page you were looking for doesn’t exist\n                </MainText>\n                <SecondaryText>\n                    You may have misstyped the address or the page may have\n                    moved\n                </SecondaryText>\n                <div>\n                    <button\n                        onClick={() => {\n                            history.push('/')\n                        }}\n                    >\n                        Go to mainpage\n                    </button>\n                </div>\n            </Content>\n        </PageContainer>\n    </PageWrapper>\n)\n\nexport default NoMatch\n","import styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport const StyledAvatar = styled(Avatar)`\n    background-color: ${({ theme }) => theme.palette.logo};\n    cursor: pointer;\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n// Styles\nimport { StyledAvatar } from \"./style\";\n\nexport default function ProfileMenu({ me, onLogout }) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <StyledAvatar onClick={handleClick}>\n                {`${me?.firstname[0] || \"\"}${me?.lastname[0] || \"\"}`}\n            </StyledAvatar>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={onLogout}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.main};\n    &.active {\n        color: ${theme.palette.primary.dark};\n    }\n  `}\n`;\n","// Core\nimport React from \"react\";\nimport clsx from \"clsx\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n    },\n    menuButton: {\n        color: \"#fff\",\n    },\n    active: {\n        background: \"red\",\n    },\n}));\n\nconst NavigationMenu = ({ menuItems }) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    const toggleDrawer = (anchor, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = anchor => (\n        <div\n            className={clsx(classes.list)}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {menuItems.map(({ path, name }) => (\n                    <StyledLink to={`/${path}`} key={path}>\n                        <ListItem button>\n                            <ListItemText primary={name} />\n                        </ListItem>\n                    </StyledLink>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"primary\"\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer\n                anchor=\"right\"\n                open={state[\"left\"]}\n                onClose={toggleDrawer(\"left\", false)}\n            >\n                {list(\"left\")}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default NavigationMenu;\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\n\nconst SIZE = 40;\n\nexport const Shape = styled.span`\n    ${({ theme }) => `\n        width: ${SIZE}px;\n    height: ${SIZE / 2}px;\n    position: relative;\n    overflow: hidden;\n    &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        background-color: ${theme.palette.logo};\n        border-radius: 50%;\n        width: 100%;\n        height: 200%;\n    }\n    `}\n`;\n\nexport const ShapeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: ${SIZE}px;\n    max-height: ${SIZE};\n    cursor: pointer;\n`;\n\nexport const Text = styled.div`\n    font-family: \"GT-America\";\n    text-transform: uppercase;\n    font-size: 16px;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    padding-left: 11px;\n    user-select: none;\n    & > span {\n        line-height: 0.9em;\n        transform: scale(1, 0.9);\n        letter-spacing: -0.7px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n`;\n","// Core\nimport React from \"react\";\n\n//styles\nimport { Shape, ShapeContainer, Text, LogoContainer } from \"./styles\";\n\nfunction Logo() {\n    return (\n        <LogoContainer>\n            <ShapeContainer>\n                <Shape />\n                <Shape />\n            </ShapeContainer>\n            <Text>\n                <span>fountain</span>\n                <span>head</span>\n                <span>it</span>\n            </Text>\n        </LogoContainer>\n    );\n}\n\nexport default Logo;\n","const ROUTES = Object.freeze([\n    {\n        name: \"Reports\",\n        path: \"developer-reports\",\n    },\n    {\n        name: \"Reports\",\n        path: \"manager-reports\",\n    },\n    {\n        name: \"Projects\",\n        path: \"projects\",\n    },\n    {\n        name: \"Developers\",\n        path: \"developers\",\n    },\n\n    {\n        name: \"Report history\",\n        path: \"report-history\",\n    },\n]);\n\nconst ROUTES_FOR_DEV = Object.freeze([\"developer-reports\"]);\nconst ROUTES_FOR_ADMIN = Object.freeze([\n    \"report-history\",\n    \"developers\",\n    \"projects\",\n    \"manager-reports\",\n]);\n\nconst BY_ROLE = Object.freeze({\n    admin: ROUTES_FOR_ADMIN,\n    dev: ROUTES_FOR_DEV,\n});\n\nexport const getRoutesByRole = role => {\n    const routesByRole = BY_ROLE[role];\n\n    if (!routesByRole) return [];\n\n    return ROUTES.filter(({ path }) => routesByRole.includes(path));\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ProfileMenu from \"components/ProfileMenu\";\n// Components\nimport NavigationMenu from \"./NavigationMenu\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\n// UI\nimport Logo from \"components/Logo\";\n\n// Utils\nimport { getRoutesByRole } from \"../../utils/routerUtils\";\n\n// Hooks\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst NavigationPanel = ({ me, onLogout }) => {\n    const classes = useStyles();\n\n    const routes = getRoutesByRole(me?.role);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Logo />\n\n                <Typography variant=\"h6\" className={classes.title} />\n\n                {me ? (\n                    <ProfileMenu me={me} onLogout={onLogout} />\n                ) : (\n                    <Button>\n                        <StyledLink to=\"/signin\">Login</StyledLink>\n                    </Button>\n                )}\n                <NavigationMenu menuItems={routes} />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavigationPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"@material-ui/core\";\n\nexport const StyledTableRow = styled(({ type, ...otherProps }) => (\n    <TableRow {...otherProps} />\n))`\n    cursor: ${props => (props.hover ? \"pointer\" : \"auto\")};\n    & .MuiTableCell-body {\n        color: ${({ type, theme }) => type && theme.palette.text[type]};\n    }\n`;\n","import React from \"react\";\nimport { StyledTableRow } from \"./styles\";\n\nfunction TableRow(props) {\n    return <StyledTableRow {...props} />;\n}\n\nexport default TableRow;\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { grey } from \"@material-ui/core/colors\";\n// Styles\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport const StyledTableCell = styled(({ noWrap, minWidth, ...restProps }) => (\n    <TableCell {...restProps} />\n))`\n    border-right: 1px solid ${grey[300]};\n    min-width: ${({ minWidth }) => minWidth};\n    white-space: ${({ noWrap }) => (noWrap ? \"nowrap\" : \"normal\")};\n`;\n","import React from \"react\";\nimport { StyledTableCell } from \"./styles\";\n\nfunction TableCell(props) {\n    return <StyledTableCell {...props} />;\n}\n\nexport default TableCell;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Name\",\n    \"Skills\",\n    \"Project name\",\n    \"Total work time\",\n    \"Status\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    skills: [],\n    email: \"\",\n    role: \"\",\n    rate: 0,\n    country: \"\",\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport { TableHead, TableBody, Table } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developers\";\nimport { formatFromMinutes } from \"utils/developersUtils\";\n\nexport default function ({ developerList, setEditingUserData }) {\n    const getFullName = (firstname, lastname) => `${firstname} ${lastname}`;\n    const concatSkills = skillsArray => skillsArray.join(\", \");\n\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell key={item}>{item}</TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {developerList.length ? (\n                    developerList.map(developer => (\n                        <TableRow\n                            type={\n                                developer.status === \"inactive\"\n                                    ? \"disabled\"\n                                    : \"primary\"\n                            }\n                            hover\n                            key={developer.id}\n                            onClick={() => setEditingUserData(developer)}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {developer.id}\n                            </TableCell>\n                            <TableCell>\n                                {getFullName(\n                                    developer.firstname,\n                                    developer.lastname\n                                )}\n                            </TableCell>\n                            <TableCell>\n                                {concatSkills(developer.skills)}\n                            </TableCell>\n                            <TableCell>{developer.projects}</TableCell>\n                            <TableCell>\n                                {formatFromMinutes(developer.total_work_time)}\n                            </TableCell>\n                            <TableCell>{developer.status}</TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <TableCell>{\"Empty\"}</TableCell>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import moment from \"moment\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/developers\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatFromMinutes = durationInMinutes => {\n    if (Number(durationInMinutes) === 0) {\n        return durationInMinutes;\n    }\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} minutes`;\n    }\n    return `${moment\n        .duration(durationInMinutes, \"seconds\")\n        .hours()}h ${moment.duration(durationInMinutes, \"seconds\").minutes()}m`;\n};\n","export const FULL_DATE_FORMAT = \"DD-MM-YYYY\";\nexport const FULL_DATE_SHORT = \"DD-MM-YY\";\n\nexport const DATE_FORMAT = \"DD.MM\";\nexport const DAY_FORMAT = \"DD\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const DATE_AND_MONTH = \"DD MMMM\";\n\nexport const HOUR_IN_MINUTES = 60;\n\nexport const MONDAY = 1;\nexport const SUNDAY = 7;\n","import styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\n\nexport const StyledDialog = styled(Dialog)`\n    & .MuiPaper-root,\n    .MuiDialogContent-root {\n        overflow-y: visible;\n    }\n    & .MuiPaper-root {\n        max-width: 400px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// Styles\nimport { StyledDialog } from \"./styles\";\n\nexport default function FormDialog({ open, handleClose, title, children }) {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            maxWidth={\"lg\"}\n        >\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n            <DialogContent>{children}</DialogContent>\n        </StyledDialog>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { toJS } from \"mobx\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst EMPTY_OPTIONS = [];\n\nexport default function SkillMultiSelect({ onChange, values, id }) {\n    const handleChange = (e, newValue) => {\n        if (typeof newValue === \"string\") {\n            onChange(id, [...values, newValue]);\n        } else if (newValue && newValue.inputValue) {\n            onChange([...values.newValue.inputValue]);\n        }\n        onChange(id, newValue);\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={EMPTY_OPTIONS}\n                freeSolo\n                value={toJS(values)}\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField {...params} variant=\"outlined\" label=\"Skills\" />\n                )}\n            />\n        </>\n    );\n}\n","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function RateInput({ onChange, value, id }) {\n    const handleChange = e => {\n        if (Number(e.target.value) < 0) {\n            onChange(id, 0);\n            return;\n        }\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <TextField\n            required\n            label=\"Rate\"\n            type=\"number\"\n            onChange={handleChange}\n            value={value}\n        />\n    );\n}\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(({ type, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./styles\";\n\nfunction DialogActionButton(props) {\n    return <StyledButton {...props} />;\n}\n\nexport default DialogActionButton;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n} from \"@material-ui/core\";\n\nfunction RoleSelector({ value, onChange, id }) {\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n    return (\n        <RadioGroup aria-label=\"Type\" value={value} onChange={handleChange}>\n            <FormLabel>{\"Role *\"}</FormLabel>\n            <Grid container wrap=\"nowrap\">\n                <FormControlLabel\n                    value=\"dev\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Developer\"\n                />\n                <FormControlLabel\n                    value=\"admin\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Admin\"\n                />\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default RoleSelector;\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { Grid, TextField, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport SkillMultiSelect from \"../SkillsSelector\";\nimport RateInput from \"../RateInput\";\nimport DialogActionButton from \"components/DialogActionButton\";\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developersUtils\";\nimport RoleSelector from \"../RoleSelector\";\n\nexport default function CreateUserForm({\n    open,\n    onClose,\n    handleSubmit,\n    initialData,\n    handleDeleteUser,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: data => {\n            handleSubmit(data, initialData?.id);\n        },\n    });\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project Item:\">\n            <form autoComplete=\"off\">\n                <StyledGridContainer>\n                    <Grid container>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                id=\"firstname\"\n                                label=\"First name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.firstname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                id=\"lastname\"\n                                label=\"Last name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.lastname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SkillMultiSelect\n                            values={formik.values.skills}\n                            onChange={formik.setFieldValue}\n                            id=\"skills\"\n                        />\n                    </Grid>\n                    <Grid container justify={\"space-between\"}>\n                        <Grid item xs={8}>\n                            <TextField\n                                id=\"country\"\n                                label=\"Country\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.country}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <RateInput\n                                onChange={formik.setFieldValue}\n                                id=\"rate\"\n                                value={formik.values.rate}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs>\n                        <TextField\n                            required\n                            id=\"email\"\n                            label=\"e-mail\"\n                            onChange={formik.handleChange}\n                            defaultValue={formik.values.email}\n                        />\n                    </Grid>\n                    <Grid container justify=\"flex-end\">\n                        <RoleSelector\n                            value={formik.values.role}\n                            onChange={formik.setFieldValue}\n                            id=\"role\"\n                        />\n                    </Grid>\n                    <DialogActions>\n                        {initialData && (\n                            <DialogActionButton\n                                onClick={() =>\n                                    handleDeleteUser(initialData?.id)\n                                }\n                                type=\"error\"\n                            >\n                                Delete\n                            </DialogActionButton>\n                        )}\n                        <DialogActionButton onClick={onClose} type=\"default\">\n                            Cancel\n                        </DialogActionButton>\n                        <DialogActionButton\n                            onClick={formik.handleSubmit}\n                            type=\"success\"\n                        >\n                            Save\n                        </DialogActionButton>\n                    </DialogActions>\n                </StyledGridContainer>\n            </form>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nexport const StyledAddIcon = styled(AddIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledAddIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button\n            size=\"large\"\n            onClick={handleClick}\n            startIcon={<StyledAddIcon />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport { TablePagination, Box } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\n\n// constants\nimport { ROWS_PER_PAGE } from \"constants/pagination\";\n\n// Store\nimport { useStores } from \"store\";\n\nfunction useStore() {\n    const { paginationStore } = useStores();\n\n    return useObserver(() => ({\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setPage: paginationStore.setPage,\n        setPerPage: paginationStore.setPerPage,\n        meta: paginationStore.meta,\n        setInitialValues: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function ReportPagination() {\n    const {\n        meta,\n        page,\n        perPage,\n        setPage,\n        setPerPage,\n        setInitialValues,\n    } = useStore();\n\n    useEffect(() => setInitialValues(), [setInitialValues]);\n\n    if (!meta) {\n        return null;\n    }\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n            <TablePagination\n                rowsPerPageOptions={ROWS_PER_PAGE}\n                component={\"div\"}\n                count={meta.total}\n                rowsPerPage={perPage}\n                page={page - 1}\n                onChangePage={(e, newPage) => setPage(newPage + 1)}\n                onChangeRowsPerPage={e => setPerPage(e.target.value)}\n            />\n            <Pagination\n                count={meta.last_page}\n                color=\"primary\"\n                page={meta.current_page}\n                onChange={(e, newPage) => setPage(newPage)}\n            />\n        </Box>\n    );\n}\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nfunction getWeeksOptions(weeksCount) {\n    return Array.from({ length: weeksCount }).map((_, index) =>\n        String(index + 1)\n    );\n}\n\nexport default function ({ setWeek, selectedWeek }) {\n    const currentWeek = moment().week();\n\n    const [weeksOptions] = useState(getWeeksOptions(currentWeek));\n\n    const changeWeek = (e, value) => {\n        setWeek(value);\n    };\n\n    const value = selectedWeek && String(selectedWeek);\n\n    return (\n        <Autocomplete\n            value={value}\n            options={weeksOptions}\n            onChange={changeWeek}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n","import moment from \"moment\";\nimport {\n    MONDAY,\n    SUNDAY,\n    FULL_DATE_FORMAT,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getWeekNumber = date => moment(date, FULL_DATE_FORMAT).isoWeek();\n\nexport const getFromDate = weekNumber =>\n    moment().isoWeek(weekNumber).isoWeekday(MONDAY).format(FULL_DATE_FORMAT);\n\nexport const getToDate = weekNumber => {\n    const date = moment().isoWeek(weekNumber).isoWeekday(SUNDAY);\n    if (date.isAfter(new Date())) {\n        return moment().format(FULL_DATE_FORMAT);\n    }\n    return date.format(FULL_DATE_FORMAT);\n};\n\nexport const formatToString = momentDate =>\n    moment(momentDate).format(FULL_DATE_FORMAT);\n\nexport const getMomentInstance = date => moment(date, FULL_DATE_FORMAT);\n\nconst checkIfCurrentWeek = weekNumber => {\n    return getWeekNumber(new Date()) === weekNumber;\n};\n\nexport const checkIfWeekSelected = (fromDate, toDate) => {\n    const fromDateWeekNumber = getWeekNumber(fromDate);\n    const toDateWeekNumber = getWeekNumber(toDate);\n\n    if (fromDateWeekNumber === toDateWeekNumber) {\n        const startOfWeek = getMomentInstance(fromDate).startOf(\"isoWeek\");\n        const endOfWeek = checkIfCurrentWeek(fromDateWeekNumber)\n            ? moment()\n            : getMomentInstance(fromDate).endOf(\"isoWeek\");\n        return (\n            getMomentInstance(fromDate).isSame(startOfWeek, \"day\") &&\n            getMomentInstance(toDate).isSame(endOfWeek, \"day\")\n        );\n    }\n\n    return false;\n};\n\nexport const getLogsParams = (fromDate, toDate, users, projects) => {\n    return {\n        from_date: fromDate,\n        to_date: toDate,\n        users: users.map(item => item.id),\n        projects: projects.map(item => item.id),\n    };\n};\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()}h ${moment\n        .duration(time)\n        .minutes()}m`;\n};\n","// Core\nimport \"moment/locale/en-sg\";\nimport React from \"react\";\nimport MomentUtils from \"@date-io/moment\";\n\n// UI\nimport { Box } from \"@material-ui/core\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\n// constants\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Utils\nimport { formatToString, getMomentInstance } from \"utils/managerReportsUtils\";\n\nfunction DateRangePicker({ fromDate, toDate, setFilter }) {\n    const changeDateFrom = date => {\n        setFilter(\"fromDate\", formatToString(date));\n    };\n\n    const changeDateTo = date => {\n        setFilter(\"toDate\", formatToString(date));\n    };\n\n    const momentFromDate = getMomentInstance(fromDate);\n    const momentToDate = getMomentInstance(toDate);\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils} locale={\"en-sg\"}>\n            <Box display=\"flex\">\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        value={momentFromDate}\n                        label=\"From date\"\n                        maxDate={toDate ? momentToDate : false}\n                        onChange={changeDateFrom}\n                        format={FULL_DATE_FORMAT}\n                    />\n                </Box>\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        label=\"To date\"\n                        value={momentToDate}\n                        minDate={fromDate ? momentFromDate : false}\n                        maxDate={getMomentInstance(new Date())}\n                        onChange={changeDateTo}\n                        format={FULL_DATE_FORMAT}\n                    />\n                </Box>\n            </Box>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default DateRangePicker;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ projects, setFilter, selectedProjects }) {\n    const onChangeProject = (e, value) => {\n        setFilter(\"selectedProjects\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n\n    const getOptionLabel = option => option.name;\n\n    return (\n        <Autocomplete\n            multiple\n            value={selectedProjects}\n            options={projects}\n            onChange={onChangeProject}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <StyledTextField {...params} label=\"Project name\" />\n            )}\n        />\n    );\n}\n\nexport default ProjectSelector;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ userList, setFilter, selectedUser }) {\n    const onChangeUser = (e, value) => {\n        setFilter(\"selectedUsers\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                value={selectedUser}\n                options={userList}\n                onChange={onChangeUser}\n                filterSelectedOptions\n                getOptionSelected={getOptionSelected}\n                getOptionLabel={getOptionLabel}\n                renderInput={params => (\n                    <StyledTextField {...params} label=\"User name\" />\n                )}\n            />\n        </>\n    );\n}\n\nexport default ProjectSelector;\n","// core\nimport React from \"react\";\n\n// UI\nimport WeekSelector from \"components/WeekSelector\";\nimport DateRangePicker from \"../DateRangePicker\";\nimport ProjectSelector from \"../ProjectSelector\";\nimport UserSelector from \"../UserSelector\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nfunction FilterSelectorPanel({\n    setFilter,\n    projectList,\n    userList,\n    fromDate,\n    toDate,\n    weekNumber,\n    selectedProjects,\n    selectedUsers,\n}) {\n    return (\n        <Box display=\"flex\" alignItems=\"flex-end\" flexWrap=\"wrap\" mt={5}>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <DateRangePicker\n                        setFilter={setFilter}\n                        fromDate={fromDate}\n                        toDate={toDate}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3} width={\"200px\"}>\n                    <WeekSelector\n                        setWeek={value => setFilter(\"weekNumber\", value)}\n                        selectedWeek={weekNumber}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <ProjectSelector\n                        projects={projectList}\n                        setFilter={setFilter}\n                        selectedProject={selectedProjects}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <UserSelector\n                        selectedUsers={selectedUsers}\n                        userList={userList}\n                        setFilter={setFilter}\n                    />\n                </Box>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default FilterSelectorPanel;\n","import styled from \"styled-components\";\nimport { Popper, Button } from \"@material-ui/core\";\nexport const StyledPopper = styled(Popper)`\n    z-index: 1;\n`;\n\nexport const StyledButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n","export const TABLE_HEADERS = [\n    \"Date\",\n    \"Developer\",\n    \"Project name\",\n    \"Description\",\n    \"Work time\",\n    \"Last generated\",\n    \"Status\",\n];\n\nexport const STATUS_OPTIONS = [\n    {\n        value: \"approved\",\n        label: \"Approve\",\n    },\n    {\n        value: \"declined\",\n        label: \"Decline\",\n    },\n];\n\nexport const STATUS_COLORS = {\n    \"in review\": \"default\",\n    approved: \"success\",\n    declined: \"error\",\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Styles\nimport { StyledPopper, StyledButton } from \"./style\";\n\n// Constants\nimport { STATUS_OPTIONS, STATUS_COLORS } from \"constants/managerReports\";\n\nexport default function LogStatusHandler({ status, id, onUpdateLogStatus }) {\n    const [open, setOpen] = React.useState(false);\n    const [isLoading, setLoadingState] = React.useState(false);\n\n    const anchorRef = React.useRef(null);\n\n    const handleMenuItemClick = async ({ value }) => {\n        if (value !== status) {\n            setOpen(false);\n            setLoadingState(true);\n            await onUpdateLogStatus({\n                id,\n                status: value,\n            });\n            setLoadingState(false);\n        }\n    };\n\n    const handleToggle = () => {\n        setOpen(prevOpen => !prevOpen);\n    };\n\n    const handleClose = event => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const getColor = () => STATUS_COLORS[status];\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item xs={12}>\n                <ButtonGroup size=\"small\" variant=\"contained\" ref={anchorRef}>\n                    <StyledButton\n                        disableElevation\n                        type={getColor(status)}\n                        onClick={handleToggle}\n                    >\n                        {isLoading ? (\n                            <CircularProgress size=\"20px\" color=\"primary\" />\n                        ) : (\n                            status\n                        )}\n                    </StyledButton>\n                </ButtonGroup>\n                <StyledPopper\n                    open={open}\n                    anchorEl={anchorRef.current}\n                    transition\n                    disablePortal\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{\n                                transformOrigin:\n                                    placement === \"bottom\"\n                                        ? \"center top\"\n                                        : \"center bottom\",\n                            }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList>\n                                        {STATUS_OPTIONS.map(option => (\n                                            <MenuItem\n                                                key={option.value}\n                                                selected={\n                                                    option.value === status\n                                                }\n                                                onClick={() =>\n                                                    handleMenuItemClick(option)\n                                                }\n                                            >\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </StyledPopper>\n            </Grid>\n        </Grid>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport { TableHead, TableBody, Table, Box } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport LogStatusHandler from \"../LogStatusHandler\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/managerReports\";\n\n// Utils\nimport { formatTimeDuration } from \"utils/managerReportsUtils\";\n\nexport default function LogReportTable({\n    logList,\n    userList,\n    projectList,\n    onUpdateLogStatus,\n}) {\n    const getProjectName = id => {\n        return projectList.find(project => project.id === id)?.name;\n    };\n\n    const getUserName = id => {\n        const userData = userList.find(user => user.id === id);\n        return `${userData?.firstname} ${userData?.lastname}`;\n    };\n\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell noWrap key={item}>\n                            {item}\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {logList.length ? (\n                    logList.map(log => (\n                        <TableRow hover key={`log-${log.id}`}>\n                            <TableCell noWrap>{log.date}</TableCell>\n                            <TableCell>{getUserName(log.user_id)}</TableCell>\n                            <TableCell>\n                                {getProjectName(log.project_id)}\n                            </TableCell>\n                            <TableCell>{log.descriptions}</TableCell>\n                            <TableCell noWrap>\n                                {formatTimeDuration(log.total)}\n                            </TableCell>\n                            <TableCell>{\"\"}</TableCell>\n                            <TableCell>\n                                <LogStatusHandler\n                                    onUpdateLogStatus={onUpdateLogStatus}\n                                    status={log.status}\n                                    id={log.id}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <Box p={3} component=\"td\">\n                            {\"Empty\"}\n                        </Box>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import styled from \"styled-components\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nexport const StyledIcon = styled(GetAppIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button size=\"large\" onClick={handleClick} startIcon={<StyledIcon />}>\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","export const TABLE_HEADERS = [\n    \"Created\",\n    \"Updated\",\n    \"Number of developers\",\n    \"Project name\",\n    \"Type\",\n    \"Total time spend\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    alias: \"\",\n    name: \"\",\n    descriptions: \"\",\n    users: [],\n    type: \"\",\n};\n","import moment from \"moment\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/projects\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatTime = time => {\n    const durationMin = moment.duration(time).asMinutes();\n    return durationMin < HOUR_IN_MINUTES\n        ? `${durationMin}m`\n        : `${moment.duration(time).hours()}h ${moment\n              .duration(time)\n              .minutes()}m`;\n};\n\nexport const getDate = date => moment(date).format(\"DD MMMM YYYY\");\n\nexport const getTime = date => moment(date).format(\"hh:mm\");\n","// Core\nimport React from \"react\";\n\n// UI\nimport { TableContainer, TableHead, TableBody, Table } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/projects\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Utils\nimport { formatTime, getDate } from \"utils/projectUtils\";\n\n// Styles\n\nexport default function ({ projectList, setEditingProjectData }) {\n    return (\n        <TableContainer>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projectList.length ? (\n                        projectList.map(project => (\n                            <TableRow\n                                hover\n                                key={project.id}\n                                onClick={() => setEditingProjectData(project)}\n                            >\n                                <TableCell>\n                                    {getDate(project.updated_at)}\n                                </TableCell>\n                                <TableCell>\n                                    {getDate(project.created_at)}\n                                </TableCell>\n                                <TableCell>{project.num_of_dev}</TableCell>\n                                <TableCell>{project.name}</TableCell>\n                                <TableCell>{project.type}</TableCell>\n                                <StyledTableCell>\n                                    {formatTime(project.total_log)}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <TableCell>{\"Empty\"}</TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserMultiSelect({ userList, onChange, values, id }) {\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    const handleChange = (e, data) => {\n        onChange(\n            id,\n            data.map(item => item.id)\n        );\n    };\n\n    const getSelectedOptions = () => {\n        const idSet = new Set(values);\n        return userList.filter(item => idSet.has(item.id));\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={userList}\n                getOptionLabel={getOptionLabel}\n                value={getSelectedOptions()}\n                filterSelectedOptions\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select developers\"\n                    />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n} from \"@material-ui/core\";\n\nfunction TypeSelector({ value, projectTypes, onChange }) {\n    return (\n        <RadioGroup label=\"Type\" name=\"type\" value={value} onChange={onChange}>\n            <FormLabel>{\"Type *\"}</FormLabel>\n            <Grid container wrap=\"nowrap\">\n                {projectTypes.map(item => (\n                    <FormControlLabel\n                        key={`project-type-${item}`}\n                        value={item}\n                        control={<Radio color={\"primary\"} />}\n                        label={item}\n                    />\n                ))}\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default TypeSelector;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport UserMultiSelect from \"../UserMultiSelect\";\nimport TypeSelector from \"../TypeSelector\";\nimport DialogActionButton from \"components/DialogActionButton\";\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/projectUtils\";\n\n// Constants\n\nexport default function LogForm({\n    open,\n    onClose,\n    userList,\n    projectTypes,\n    handleSubmit,\n    initialData,\n    handleDeleteProject,\n    onGetProjectUserList,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: data => {\n            handleSubmit(data, initialData?.id);\n        },\n    });\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project Item:\">\n            <StyledGridContainer>\n                <Grid container>\n                    <Grid item>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                id=\"name\"\n                                label=\"Project name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.name}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                id=\"alias\"\n                                label=\"Alias\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.alias}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        fullWidth\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <UserMultiSelect\n                        onChange={formik.setFieldValue}\n                        onGetProjectUserList={onGetProjectUserList}\n                        values={formik.values.users}\n                        userList={userList}\n                        id={\"users\"}\n                    />\n                </Grid>\n                <Grid container justify=\"flex-end\">\n                    <TypeSelector\n                        value={formik.values.type}\n                        projectTypes={projectTypes}\n                        onChange={formik.handleChange}\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={() => handleDeleteProject(initialData?.id)}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onClose} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </StyledGridContainer>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Date\",\n    \"Week\",\n    \"Developers\",\n    \"Project names\",\n];\n","// Core\nimport React from \"react\";\n\n// UI\nimport { TableHead, TableBody, Table } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/reportHistory\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Styles\n\nexport default function ({ historyItems, userList, projectList }) {\n    const getDatesLabel = ({ from_date, to_date }) => {\n        if (from_date && to_date) {\n            return `${from_date} - ${to_date}`;\n        }\n    };\n\n    const concatUserNames = ({ users }) =>\n        userList\n            .reduce((acc, item) => {\n                if (users?.includes(String(item.id))) {\n                    acc.push(`${item.firstname} ${item.lastname}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const concatProjectNames = ({ projects }) =>\n        projectList\n            .reduce((acc, item) => {\n                if (projects?.includes(String(item.id))) {\n                    acc.push(`${item.name}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell key={item}>{item}</TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {historyItems.length ? (\n                    historyItems.map(item => (\n                        <TableRow hover key={item.id}>\n                            <StyledTableCell>{item.id}</StyledTableCell>\n                            <StyledTableCell>\n                                {getDatesLabel(item.filter)}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {item.filter.week}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {concatUserNames(item.filter)}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {concatProjectNames(item.filter)}\n                            </StyledTableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <TableCell>{\"Empty\"}</TableCell>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(({ isActive, hasLogs, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    margin-right: ${({ theme }) => theme.spacing(1)}px;\n    margin-bottom: ${({ theme }) => theme.spacing(1)}px;\n    background-color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.primary.main;\n        if (hasLogs) return theme.palette.success.main;\n        return \"transparent\";\n    }};\n    color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.text.primary;\n        if (hasLogs) return theme.palette.text.secondary;\n        return theme.palette.text.secondary;\n    }};\n    border: none;\n`;\n","import moment from \"moment\";\nimport {\n    FULL_DATE_FORMAT,\n    TIME_FORMAT,\n    MONDAY,\n    SUNDAY,\n} from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => ({\n    date: initialData\n        ? moment(initialData.date, FULL_DATE_FORMAT).format(FULL_DATE_FORMAT)\n        : \"\",\n    descriptions: initialData ? initialData.descriptions : \"\",\n    from_time: initialData\n        ? moment(initialData[\"from_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    to_time: initialData\n        ? moment(initialData[\"to_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    project_id: initialData ? initialData[\"project_id\"] : 0,\n    log_type_id: initialData ? initialData[\"log_type_id\"] : 0,\n});\n\nexport const getTotalTime = durations => {\n    if (!durations.length) return \"0\";\n    const totalDurations = durations\n        .slice(1)\n        .reduce(\n            (prev, cur) => moment.duration(cur.total).add(prev),\n            moment.duration(durations[0].total)\n        );\n\n    const hours = Math.floor(totalDurations.clone().asHours());\n    const minutes = Math.floor(totalDurations.clone().minutes());\n    if (!hours) {\n        return `${minutes} minutes`;\n    }\n    return `${hours}h ${minutes}m`;\n};\n\nexport const getParametersForLogs = selectedWeek => ({\n    from_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(MONDAY)\n        .format(FULL_DATE_FORMAT),\n    to_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(SUNDAY)\n        .format(FULL_DATE_FORMAT),\n});\n\nexport const getStartOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).startOf(\"isoWeek\");\n\nexport const getEndOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).endOf(\"isoWeek\");\n\nexport const getMonthNameByWeek = weekNumber =>\n    moment().set(\"month\", moment().isoWeek(weekNumber).month()).format(\"MMMM\");\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DAY_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledButton } from \"./styles\";\n\n// Utils\nimport { getMonthNameByWeek } from \"utils/developerReportUtils\";\n\nfunction checkLogDate(logs, date) {\n    return logs.some(item =>\n        moment(item.date, FULL_DATE_FORMAT).isSame(\n            moment(date, FULL_DATE_FORMAT),\n            \"day\"\n        )\n    );\n}\n\nexport default function ({ selectedWeek, logs, setDay, selectedDay }) {\n    const [weekDates, setWeekDates] = useState([]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setWeekDates([]);\n            return;\n        }\n        const getWeekDates = weekNumber => {\n            return Array.from({ length: 7 }).map((_, index) =>\n                moment()\n                    .isoWeek(weekNumber)\n                    .isoWeekday(index + 1)\n            );\n        };\n\n        setWeekDates(getWeekDates(selectedWeek));\n    }, [selectedWeek]);\n\n    const formatDate = day => moment(day).format(DAY_FORMAT);\n    const isActive = day => moment(day).isSame(selectedDay, \"day\");\n    return (\n        selectedWeek && (\n            <Box display=\"flex\" flexWrap=\"wrap\">\n                {weekDates.map(day => {\n                    const hasLogs = checkLogDate(logs, day);\n                    return (\n                        <StyledButton\n                            size=\"large\"\n                            onClick={() => setDay(day)}\n                            isActive={isActive(day)}\n                            hasLogs={hasLogs}\n                            variant=\"contained\"\n                            key={`date-${day}`}\n                        >\n                            {formatDate(day)}\n                        </StyledButton>\n                    );\n                })}\n                <Box width=\"100%\" ml={1}>\n                    <Typography variant=\"subtitle1\">\n                        {getMonthNameByWeek(selectedWeek)}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    );\n}\n","export const TABLE_HEADERS = [\n    \"Work Item\",\n    \"Date\",\n    \"Project Name\",\n    \"Type\",\n    \"Work Time\",\n    \"Status\",\n];\n\nexport const validationErrorMessages = {\n    timeInterval: \"Time interval is invalid\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableCell } from \"@material-ui/core\";\n\nexport const StyledTableCell = styled(({ status, ...otherProps }) => (\n    <TableCell {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport {\n    TableContainer,\n    TableHead,\n    TableBody,\n    Paper,\n    Table,\n    Box,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developerReport\";\nimport {\n    HOUR_IN_MINUTES,\n    FULL_DATE_SHORT,\n    FULL_DATE_FORMAT,\n} from \"constants/dateFormats\";\n\n// Utils\nimport { getTotalTime } from \"utils/developerReportUtils\";\n\n// Styles\nimport { StyledTableCell } from \"./style\";\n\nfunction getTimeLabel(time) {\n    let result = `${time} hours`;\n    const durationMin = moment.duration(time).asMinutes();\n    if (durationMin < HOUR_IN_MINUTES) {\n        result = `${durationMin} minutes`;\n    }\n    return result;\n}\n\nexport default function ({\n    logList,\n    handleEditLog,\n    selectedDay,\n    selectedWeek,\n    projects,\n    logTypes,\n    setTotalWeekTime,\n    setTotalDayTime,\n}) {\n    const [filteredLogs, setFilteredLogs] = React.useState([]);\n\n    React.useEffect(() => {\n        let logs = logList;\n        if (selectedDay) {\n            logs = logList.filter(item =>\n                moment(item.date, FULL_DATE_FORMAT).isSame(\n                    moment(selectedDay),\n                    \"day\"\n                )\n            );\n        }\n        if (!selectedWeek) {\n            logs = [];\n        }\n        setFilteredLogs(logs);\n    }, [logList, selectedDay, selectedWeek]);\n\n    React.useEffect(() => {\n        setTotalWeekTime(getTotalTime(logList));\n    }, [logList, setTotalWeekTime]);\n\n    React.useEffect(() => {\n        setTotalDayTime(getTotalTime(filteredLogs));\n    }, [filteredLogs, setTotalDayTime]);\n\n    const editLog = log => {\n        handleEditLog(log);\n    };\n\n    const getProjectName = id => projects.find(item => item.id === id)?.name;\n    const getLogTypeEnum = id => logTypes.find(item => item.id === id)?.type;\n    const getType = status =>\n        status === \"approved\"\n            ? \"success\"\n            : status === \"declined\"\n            ? \"error\"\n            : \"default\";\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {filteredLogs.length ? (\n                        filteredLogs.map((log, i) => (\n                            <TableRow\n                                hover\n                                key={log.id}\n                                onClick={() => editLog(log)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {i + 1}\n                                </TableCell>\n                                <TableCell>\n                                    {moment(log.date, FULL_DATE_FORMAT).format(\n                                        FULL_DATE_SHORT\n                                    )}\n                                </TableCell>\n                                <TableCell>\n                                    {getProjectName(log.project_id)}\n                                </TableCell>\n                                <TableCell>\n                                    {getLogTypeEnum(log.log_type_id)}\n                                </TableCell>\n                                <TableCell>{getTimeLabel(log.total)}</TableCell>\n                                <StyledTableCell type={getType(log.status)}>\n                                    {log.status}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box component=\"td\" p={2}>\n                                {\"You don't have any logs\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\n// UI\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n// Constants\nimport { TIME_FORMAT } from \"constants/dateFormats\";\n\nexport default function Developers({\n    value,\n    id,\n    label,\n    onChange,\n    error,\n    setTouched,\n}) {\n    const handleChange = momentTime => {\n        onChange(id, momentTime);\n        setTouched(id);\n    };\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardTimePicker\n                    ampm={false}\n                    id={id}\n                    error={!!error}\n                    label={label}\n                    value={moment(value, TIME_FORMAT)}\n                    onChange={handleChange}\n                    helperText={error}\n                />\n            </MuiPickersUtilsProvider>\n        </>\n    );\n}\n","import styled from \"styled-components\";\nimport { FormControl } from \"@material-ui/core\";\n\nexport const StyledFormControl = styled(FormControl)`\n    min-width: 140px;\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\n// Styles\nimport { StyledFormControl } from \"./styles\";\n\nfunction createOptions(data, opts) {\n    return data.map(item => ({\n        value: item[opts.value],\n        label: item[opts.label],\n    }));\n}\n\nexport default function Selector({\n    onChange,\n    data,\n    name,\n    id,\n    value,\n    labelKey,\n    valueKey,\n    placeholder,\n}) {\n    const [options] = React.useState(\n        createOptions(data, { label: labelKey, value: valueKey })\n    );\n\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <StyledFormControl>\n            <InputLabel>{placeholder}</InputLabel>\n            <Select value={value || \"\"} onChange={handleChange}>\n                {options.map(item => (\n                    <MenuItem key={`${id}-${item.value}`} value={item.value}>\n                        {item.label}\n                    </MenuItem>\n                ))}\n            </Select>\n        </StyledFormControl>\n    );\n}\n","// core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function LogInfoHeader({ workingDay, selectedWeek }) {\n    return (\n        <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box flex={1} display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\" noWrap>\n                    {\"Working day:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        noWrap\n                        paragraph\n                    >\n                        {workingDay}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box flex={1} display=\"flex\" pl={1}>\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Week: \"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        paragraph\n                    >\n                        {selectedWeek}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => {\n    return {\n        root: {\n            \"& .MuiGrid-root\": {\n                marginBottom: theme.spacing(2),\n            },\n            \"& .MuiFormLabel-root\": {\n                zIndex: 0,\n            },\n        },\n    };\n});\n\nexport default useStyles;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TimePicker from \"components/TimePicker\";\nimport FormDialog from \"components/FormDialog\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport Box from \"@material-ui/core/Box\";\nimport Selector from \"../Selector\";\nimport LogInfoHeader from \"../LogInfoHeader\";\n\n// Styles\nimport useStyles from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developerReportUtils\";\n\n// Constants\nimport { validationErrorMessages } from \"constants/developerReport\";\nimport { FULL_DATE_FORMAT, TIME_FORMAT } from \"constants/dateFormats\";\n\nfunction validateTimeRange(from, to) {\n    return moment(from, TIME_FORMAT).isBefore(moment(to, TIME_FORMAT));\n}\n\nfunction validate(values, props) {\n    const errors = {};\n    if (!validateTimeRange(values.from_time, values.to_time)) {\n        errors.from_time = validationErrorMessages.timeInterval;\n        errors.to_time = validationErrorMessages.timeInterval;\n    }\n    return errors;\n}\n\nexport default function LogForm({\n    open,\n    handleClose,\n    projects,\n    logTypes,\n    submitForm,\n    initialData,\n    deleteLog,\n    selectedDay,\n    selectedWeek,\n}) {\n    const classes = useStyles();\n\n    const initialValues = getInitialFormValues(initialData);\n\n    if (!initialData) {\n        initialValues.date = moment(selectedDay, FULL_DATE_FORMAT).format(\n            FULL_DATE_FORMAT\n        );\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validate,\n        validateOnChange: true,\n        validateOnBlur: false,\n        onSubmit: data => {\n            submitForm(getInitialFormValues(data), initialData?.id);\n        },\n    });\n\n    const handleDeleteLog = async () => {\n        await deleteLog(initialData.id);\n        handleClose();\n    };\n\n    const onSetTouched = id => {\n        formik.setTouched({\n            ...formik.touched,\n            [id]: true,\n        });\n    };\n\n    const workingDay = moment(formik.values.date, FULL_DATE_FORMAT).format(\n        \"DD MMMM\"\n    );\n\n    return (\n        <FormDialog open={open} handleClose={handleClose} title=\"Work Item:\">\n            <LogInfoHeader\n                workingDay={workingDay}\n                selectedWeek={selectedWeek}\n            />\n            <form autoComplete=\"off\">\n                <Grid container className={classes.root}>\n                    <Grid item xs={12} sm={12}>\n                        <Grid container wrap=\"nowrap\">\n                            <Box mr={1}>\n                                <TimePicker\n                                    id=\"from_time\"\n                                    label=\"Start time *\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.from_time\n                                    }\n                                    value={formik.values[\"from_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                            <Box ml={1}>\n                                <TimePicker\n                                    margin=\"normal\"\n                                    id=\"to_time\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.to_time\n                                    }\n                                    label=\"End time *\"\n                                    value={formik.values[\"to_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"space-between\">\n                        <Selector\n                            data={logTypes}\n                            placeholder=\"Log type *\"\n                            labelKey=\"type\"\n                            valueKey=\"id\"\n                            onChange={formik.setFieldValue}\n                            id=\"log_type_id\"\n                            value={formik.values[\"log_type_id\"]}\n                        />\n                        <Selector\n                            placeholder=\"Project name *\"\n                            data={projects}\n                            labelKey=\"name\"\n                            valueKey=\"id\"\n                            onChange={formik.setFieldValue}\n                            id=\"project_id\"\n                            value={formik.values[\"project_id\"]}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        fullWidth\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={handleDeleteLog}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={handleClose} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </form>\n        </FormDialog>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\n// Utils\nimport { getStartOfWeek, getEndOfWeek } from \"utils/developerReportUtils\";\n\n// constants\nimport { DATE_AND_MONTH } from \"constants/dateFormats\";\n\nexport default function TotalTimeInfo({\n    totalDayTime,\n    totalWeekTime,\n    selectedWeek,\n}) {\n    const getDateIntervalLabel = selectedWeek =>\n        `From ${getStartOfWeek(selectedWeek).format(\n            DATE_AND_MONTH\n        )} to ${getEndOfWeek(selectedWeek).format(DATE_AND_MONTH)}`;\n\n    return (\n        <>\n            {selectedWeek && (\n                <Box display=\"flex\">\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            {getDateIntervalLabel(selectedWeek)}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Total week work time:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalWeekTime}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Total day work time:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalDayTime}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n}\n","import { Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","export function authRequired({ me }) {\n    return !!me;\n}\n\nexport function unauthorizedOnly(prop) {\n    return !prop.me;\n}\n\nexport function roleAdmin({ me }) {\n    return me?.role === \"admin\";\n}\n\nexport function roleDev({ me }) {\n    return me?.role === \"dev\";\n}\n","// Pages\nimport Developers from \"../Pages/developers\";\nimport ManagerReports from \"../Pages/manager-reports\";\nimport Projects from \"../Pages/projects\";\nimport ReportHistory from \"../Pages/report-history\";\nimport DeveloperReports from \"../Pages/developer-reports\";\nimport SignIn from \"../Pages/signin\";\nimport Home from \"../Pages/home\";\nimport ForgotPassword from \"../Pages/ForgotPassword\";\nimport ResetPassword from \"../Pages/ResetPassword\";\n\n// Rules\nimport { authRequired, unauthorizedOnly, roleAdmin, roleDev } from \"./rules\";\n\nexport default [\n    {\n        path: \"/\",\n        exact: true,\n        rules: [authRequired],\n        redirect: \"/signin\",\n        adminRedirect: roleAdmin,\n        devRedirect: roleDev,\n        component: Home,\n    },\n    {\n        path: \"/signin\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: SignIn,\n    },\n    {\n        path: \"/forgot-password\",\n        exact: true,\n        rules: [],\n        redirect: \"/\",\n        component: ForgotPassword,\n    },\n    {\n        path: \"/reset-password\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: ResetPassword,\n    },\n    {\n        path: \"/developer-reports\",\n        exact: true,\n        rules: [authRequired, roleDev],\n        redirect: \"/\",\n        component: DeveloperReports,\n    },\n    {\n        path: \"/manager-reports\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ManagerReports,\n    },\n    {\n        path: \"/projects\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Projects,\n    },\n    {\n        path: \"/developers\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Developers,\n    },\n    {\n        path: \"/report-history\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ReportHistory,\n    },\n];\n","// Core\nimport React from 'react'\n\nexport default function Home() {\n    return <div>best time tracker ever! ! !</div>\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\n\n// Store\nimport { useStores } from \"../../store\";\n\n// Styles\nimport { StyledContainer, StyledLink } from \"./styles\";\n\nfunction useAuthData() {\n    const {\n        authStore: { onLogin },\n    } = useStores();\n    return useObserver(() => ({\n        onLogin,\n    }));\n}\n\nexport default function SignIn() {\n    const [data, setForm] = useState({ email: \"\", password: \"\" });\n    const { onLogin } = useAuthData();\n\n    return (\n        <StyledContainer>\n            <form>\n                <Box display=\"flex\" flexDirection=\"column\" my={1}>\n                    <TextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        onChange={e =>\n                            setForm({ ...data, email: e.target.value })\n                        }\n                    />\n                    <TextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={e =>\n                            setForm({ ...data, password: e.target.value })\n                        }\n                    />\n                </Box>\n                <Box display=\"flex\" justifyContent={\"flex-end\"} my={1}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onLogin(data);\n                        }}\n                    >\n                        Submit\n                    </Button>\n                </Box>\n            </form>\n            <Box my={1}>\n                <StyledLink to={\"/forgot-password\"}>Forgot password</StyledLink>\n            </Box>\n        </StyledContainer>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button, Typography } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onForgotPassword: authStore.onForgotPassword,\n    }));\n};\n\nexport default function ForgotPassword() {\n    const { onForgotPassword } = useStore();\n    const [success, setSuccess] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        onSubmit: async data => {\n            await onForgotPassword(data);\n            setSuccess(true);\n        },\n    });\n\n    if (success) {\n        return (\n            <Box p={4}>\n                <Typography variant=\"h6\">\n                    Follow link from your mailbox to reset password\n                </Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        onChange={formik.handleChange}\n                        defaultValue={formik.values.email}\n                    />\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} my={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\nimport { useLocation, Redirect } from \"react-router-dom\";\n\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onResetPassword: authStore.onResetPassword,\n    }));\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResetPassword() {\n    const { onResetPassword } = useStore();\n    const [toLogin, setToLogin] = useState(false);\n    const params = useQuery();\n\n    const formik = useFormik({\n        initialValues: {\n            token: params.get(\"token\"),\n            password: \"\",\n            password_confirmation: \"\",\n        },\n        onSubmit: async data => {\n            await onResetPassword(data);\n            setToLogin(true);\n        },\n    });\n    if (toLogin) {\n        return <Redirect to=\"/signin\" />;\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <Box display=\"flex\" flexDirection=\"column\" my={2}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            defaultValue={formik.values.password}\n                        />\n                        <TextField\n                            id=\"password_confirmation\"\n                            label=\"Confirm password\"\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            defaultValue={formik.values.confirmPassword}\n                        />\n                    </Box>\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} my={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\n// UI\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport AddButton from \"components/AddButton\";\nimport WeekSelector from \"components/WeekSelector\";\nimport WeekDates from \"components/WeekDates\";\nimport ReportTable from \"Pages/developer-reports/ReportTable\";\nimport ReportForm from \"Pages/developer-reports/ReportForm\";\nimport TotalTimeInfo from \"./TotalTimeInfo\";\n\n// Utils\nimport { useStores } from \"../../store\";\nimport {\n    getStartOfWeek,\n    getParametersForLogs,\n} from \"utils/developerReportUtils\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        logTypes: logStore.logTypes,\n        projectList: logStore.projectList,\n        onGetLogs: logStore.onGetLogs,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onGetProjectList: logStore.onGetProjectList,\n        onAddLog: logStore.onAddLog,\n        onUpdateLog: logStore.onUpdateLog,\n        onDeleteLog: logStore.onDeleteLog,\n        setEmptyLogs: logStore.setEmptyLogs,\n    }));\n}\n\nexport default function Developers() {\n    const {\n        logs,\n        logTypes,\n        projectList,\n        onGetLogs,\n        onGetProjectList,\n        onGetLogTypes,\n        onAddLog,\n        onUpdateLog,\n        onDeleteLog,\n        setEmptyLogs,\n    } = useStore();\n\n    const [selectedWeek, setWeek] = useState(moment().isoWeek());\n    const [selectedDay, setDay] = useState();\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [editingLog, setEditingLog] = useState();\n    const [totalWeekTime, setTotalWeekTime] = useState();\n    const [totalDayTime, setTotalDayTime] = useState();\n\n    useEffect(() => {\n        if (selectedWeek) {\n            setDay(getStartOfWeek(selectedWeek));\n        }\n    }, [selectedWeek]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setEmptyLogs();\n            return;\n        }\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n        });\n    }, [onGetLogs, selectedWeek, setEmptyLogs]);\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetLogTypes();\n    }, [onGetLogTypes, onGetProjectList]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingLog(null);\n    };\n\n    const handleEditLog = log => {\n        setEditingLog(log);\n        showModal();\n    };\n\n    const handleSubmitForm = async (data, id) => {\n        editingLog ? await onUpdateLog(data, id) : await onAddLog(data);\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n        });\n        closeModal();\n    };\n\n    const handleDeleteLog = async id => {\n        await onDeleteLog(id);\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container wrap=\"wrap\">\n                <Box width=\"10%\" m={2} minWidth={120}>\n                    <WeekSelector\n                        setWeek={setWeek}\n                        selectedWeek={selectedWeek}\n                    />\n                </Box>\n                <Box m={2}>\n                    <WeekDates\n                        selectedWeek={selectedWeek}\n                        selectedDay={selectedDay}\n                        setDay={setDay}\n                        logs={logs}\n                    />\n                </Box>\n                <Box\n                    m={2}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    width=\"100%\"\n                    flexWrap=\"wrap\"\n                >\n                    <Box>\n                        <AddButton handleClick={showModal}>\n                            Add work item\n                        </AddButton>\n                    </Box>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        alignItems=\"flex-end\"\n                    >\n                        <TotalTimeInfo\n                            totalDayTime={totalDayTime}\n                            totalWeekTime={totalWeekTime}\n                            selectedWeek={selectedWeek}\n                        />\n                    </Box>\n                </Box>\n                <Grid item xs={12}></Grid>\n                <ReportTable\n                    logList={logs}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    handleEditLog={handleEditLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                    setTotalWeekTime={setTotalWeekTime}\n                    setTotalDayTime={setTotalDayTime}\n                />\n\n                {isModalVisible && (\n                    <ReportForm\n                        open={isModalVisible}\n                        handleClose={closeModal}\n                        projects={projectList}\n                        logTypes={logTypes}\n                        submitForm={handleSubmitForm}\n                        deleteLog={handleDeleteLog}\n                        initialData={editingLog}\n                        selectedDay={selectedDay}\n                        selectedWeek={selectedWeek}\n                    />\n                )}\n            </Grid>\n        </Container>\n    );\n}\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport FilterSelectorPanel from \"./FilterSelectorPanel\";\nimport { Container, Box, Paper } from \"@material-ui/core\";\nimport LogTableReports from \"./LogReportTable\";\nimport ReportPagination from \"components/ReportPagination\";\nimport DownloadButton from \"components/DownloadButton\";\n\n// Store\nimport { useStores } from \"store\";\n\n// Utils\nimport {\n    getWeekNumber,\n    getFromDate,\n    getToDate,\n    checkIfWeekSelected,\n} from \"utils/managerReportsUtils\";\nimport { getLogsParams } from \"utils/managerReportsUtils\";\n\nfunction useStore() {\n    const { logStore, exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        projectList: logStore.projectList,\n        userList: logStore.userList,\n        onGetLogs: logStore.onGetLogs,\n        onGetProjectList: logStore.onGetProjectList,\n        onGetUserList: logStore.onGetUserList,\n        onUpdateLogStatus: logStore.onUpdateLogStatus,\n        onDownload: exportStore.onDownload,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setInitialPagination: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function ManagerReports() {\n    const {\n        logs,\n        projectList,\n        onGetLogs,\n        userList,\n        page,\n        perPage,\n        onUpdateLogStatus,\n        onDownload,\n        onGetUserList,\n        onGetProjectList,\n        setInitialPagination,\n    } = useStore();\n\n    const currentWeek = getWeekNumber(new Date());\n\n    const [weekNumber, setWeekNumber] = useState(currentWeek);\n    const [fromDate, setFromDate] = useState(getFromDate(currentWeek));\n    const [toDate, setToDate] = useState(getToDate(currentWeek));\n    const [selectedProjects, setSelectedProjects] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    useEffect(() => {\n        onGetLogs({\n            ...getLogsParams(fromDate, toDate, selectedUsers, selectedProjects),\n            page: page,\n            per_page: perPage,\n        });\n    }, [\n        fromDate,\n        onGetLogs,\n        page,\n        perPage,\n        selectedProjects,\n        selectedUsers,\n        toDate,\n    ]);\n\n    useEffect(() => {\n        if (weekNumber) {\n            setFromDate(getFromDate(weekNumber));\n            setToDate(getToDate(weekNumber));\n        }\n    }, [weekNumber]);\n\n    useEffect(() => {\n        if (checkIfWeekSelected(fromDate, toDate)) {\n            setWeekNumber(getWeekNumber(fromDate));\n            return;\n        }\n        setWeekNumber(null);\n    }, [fromDate, toDate]);\n\n    const onFilterChange = useCallback(\n        (type, value) => {\n            setInitialPagination();\n            const setValueTypes = {\n                fromDate: () => setFromDate(value),\n                toDate: () => setToDate(value),\n                weekNumber: () => setWeekNumber(value),\n                selectedProjects: () => setSelectedProjects(value),\n                selectedUsers: () => setSelectedUsers(value),\n            };\n\n            setValueTypes[type]();\n        },\n        [setInitialPagination]\n    );\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n    }, [onGetProjectList, onGetUserList]);\n\n    const onDownloadFile = () => {\n        onDownload({\n            from_date: fromDate,\n            to_date: toDate,\n            week: weekNumber,\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n        });\n    };\n\n    return (\n        <Container>\n            <FilterSelectorPanel\n                fromDate={fromDate}\n                toDate={toDate}\n                weekNumber={weekNumber}\n                selectedProjects={selectedProjects}\n                selectedUsers={selectedUsers}\n                setFilter={onFilterChange}\n                projectList={projectList}\n                logs={logs}\n                userList={userList}\n            />\n            <Box mt={4}>\n                <Paper>\n                    <LogTableReports\n                        logList={logs}\n                        userList={userList}\n                        projectList={projectList}\n                        onUpdateLogStatus={onUpdateLogStatus}\n                    />\n                    <ReportPagination />\n                </Paper>\n                <Box display=\"flex\" justifyContent=\"flex-end\" my={3}>\n                    {logs.length > 0 && (\n                        <DownloadButton handleClick={onDownloadFile}>\n                            Export\n                        </DownloadButton>\n                    )}\n                </Box>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box, Paper } from \"@material-ui/core\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport CreateProjectForm from \"./CreateProjectForm\";\nimport AddButton from \"components/AddButton\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n// Styled\nimport { StyledGrid } from \"./styles\";\nimport ReportPagination from \"components/ReportPagination\";\n\nfunction useStore() {\n    const { projectStore, loadersStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        projectList: projectStore.projectList,\n        projectTypes: projectStore.projectTypes,\n        userList: projectStore.userList,\n        onGetProjectList: projectStore.onGetProjectList,\n        onGetUserList: projectStore.onGetUserList,\n        onCreateProject: projectStore.onCreateProject,\n        onUpdateProject: projectStore.onUpdateProject,\n        onDeleteProject: projectStore.onDeleteProject,\n        onGetProjectTypes: projectStore.onGetProjectTypes,\n        setEditingProjectData: projectStore.setEditingProjectData,\n        editingProjectData: projectStore.editingProjectData,\n        setLoadingPage: loadersStore.setLoadingPage,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        projectList,\n        projectTypes,\n        userList,\n        onCreateProject,\n        onUpdateProject,\n        onGetProjectList,\n        onGetProjectTypes,\n        onGetUserList,\n        setEditingProjectData,\n        editingProjectData,\n        onDeleteProject,\n        page,\n        perPage,\n    } = useStore();\n\n    useEffect(() => {\n        if (!userList.length) {\n            onGetUserList();\n        }\n    }, [onGetUserList, userList.length]);\n\n    useEffect(() => {\n        if (!projectTypes.length) {\n            onGetProjectTypes();\n        }\n    }, [onGetProjectTypes, projectTypes.length]);\n\n    useEffect(() => {\n        onGetProjectList({\n            page,\n            per_page: perPage,\n        });\n    }, [onGetProjectList, page, perPage]);\n\n    useEffect(() => {\n        if (editingProjectData) {\n            showModal();\n        }\n    }, [editingProjectData]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingProjectData();\n    };\n\n    const handleDeleteProject = id => {\n        onDeleteProject(id);\n        closeModal();\n    };\n\n    const onSubmitProject = async (data, id) => {\n        editingProjectData\n            ? await onUpdateProject(data, id)\n            : await onCreateProject(data);\n        await onGetProjectList({\n            page,\n            per_page: perPage,\n        });\n        closeModal();\n    };\n\n    const onEditProject = data => {\n        setEditingProjectData(data);\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Available projects:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>\n                        Create project\n                    </AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <Paper>\n                            <ProjectsTable\n                                projectList={projectList}\n                                setEditingProjectData={onEditProject}\n                            />\n                            <ReportPagination />\n                        </Paper>\n                    </Box>\n                </Grid>\n            </Grid>\n            {isModalVisible && (\n                <CreateProjectForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    userList={userList}\n                    projectTypes={projectTypes}\n                    handleSubmit={onSubmitProject}\n                    initialData={editingProjectData}\n                    handleDeleteProject={handleDeleteProject}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box, Paper } from \"@material-ui/core\";\nimport DevelopersTable from \"./DevelopersTable\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport AddButton from \"components/AddButton\";\nimport ReportPagination from \"components/ReportPagination\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n//Styles\nimport { StyledGrid } from \"./styles\";\n\nfunction useStore() {\n    const { userStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        userList: userStore.userList,\n        onGetUserList: userStore.onGetUserList,\n        setEditingUserData: userStore.setEditingUserData,\n        editingUserData: userStore.editingUserData,\n        onCreateUser: userStore.onCreateUser,\n        onUpdateUser: userStore.onUpdateUser,\n        onDeleteUser: userStore.onDeleteUser,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        userList,\n        onGetUserList,\n        editingUserData,\n        setEditingUserData,\n        onCreateUser,\n        onUpdateUser,\n        onDeleteUser,\n        page,\n        perPage,\n    } = useStore();\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingUserData();\n    };\n\n    const handleDeleteUser = id => {\n        onDeleteUser(id);\n        closeModal();\n    };\n\n    useEffect(() => {\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n    }, [onGetUserList, page, perPage]);\n\n    useEffect(() => {\n        if (editingUserData) {\n            showModal();\n        }\n    }, [editingUserData]);\n\n    const onSubmitUser = async (data, id) => {\n        editingUserData\n            ? await onUpdateUser(data, id)\n            : await onCreateUser(data);\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Developers:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>Add developer</AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <Paper>\n                            <DevelopersTable\n                                developerList={userList}\n                                setEditingUserData={setEditingUserData}\n                            />\n                            <ReportPagination />\n                        </Paper>\n                    </Box>\n                </Grid>\n            </Grid>\n            {isModalVisible && (\n                <CreateUserForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    handleSubmit={onSubmitUser}\n                    initialData={editingUserData}\n                    handleDeleteUser={handleDeleteUser}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { Container, Box, Typography, Paper } from \"@material-ui/core\";\nimport ReportHistoryTable from \"./ReportHistoryTable\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\nimport ReportPagination from \"components/ReportPagination\";\n\nfunction useStore() {\n    const { exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        historyItems: exportStore.historyItems,\n        onGetHistoryItems: exportStore.onGetHistoryItems,\n        projectList: exportStore.projectList,\n        onGetProjectList: exportStore.onGetProjectList,\n        userList: exportStore.userList,\n        onGetUserList: exportStore.onGetUserList,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function ReportHistory() {\n    const {\n        onGetHistoryItems,\n        historyItems,\n        onGetProjectList,\n        projectList,\n        onGetUserList,\n        userList,\n        page,\n        perPage,\n    } = useStore();\n\n    React.useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n    }, [onGetProjectList, onGetUserList]);\n\n    React.useEffect(() => {\n        onGetHistoryItems({\n            page,\n            per_page: perPage,\n        });\n    }, [onGetHistoryItems, page, perPage]);\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Export history</Typography>\n            </Box>\n            <Box my={3}>\n                <Paper>\n                    <ReportHistoryTable\n                        userList={userList}\n                        projectList={projectList}\n                        historyItems={historyItems}\n                    />\n                    <ReportPagination />\n                </Paper>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n    Redirect,\n} from \"react-router-dom\";\n\n// Components\nimport NoMatch from \"components/NoMatch\";\nimport NavigationPanel from \"components/NavigationPanel\";\n\n// Routes\nimport routes from \"./routes\";\n\nconst Navigation = compProps => (\n    <Router>\n        <NavigationPanel {...compProps} />\n        <Switch>\n            {routes.map((route, index) => (\n                <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    render={props => {\n                        if (\n                            route.adminRedirect &&\n                            route.adminRedirect(compProps)\n                        ) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/manager-reports\" }}\n                                />\n                            );\n                        }\n                        if (route.devRedirect && route.devRedirect(compProps)) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/developer-reports\" }}\n                                />\n                            );\n                        }\n                        return !route.rules ||\n                            route.rules.every(rule => rule(compProps)) ? (\n                            <route.component {...props} />\n                        ) : (\n                            <Redirect to={{ pathname: route.redirect }} />\n                        );\n                    }}\n                />\n            ))}\n\n            <Route component={NoMatch} />\n        </Switch>\n    </Router>\n);\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport const StyledBackdrop = styled(Backdrop)`\n    z-index: ${({ theme }) => theme.zIndex.modal + 1};\n`;\n\nexport const StyledLinearProgress = styled(LinearProgress)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n`;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// Styles\nimport { StyledBackdrop, StyledLinearProgress } from \"./styles\";\n\n// utils\nimport { useStores } from \"../../store\";\n\n// Hooks\nfunction useLoadingData() {\n    const { loadersStore } = useStores();\n\n    return useObserver(() => ({\n        isLoadingPage: loadersStore.isLoadingPage,\n    }));\n}\n\nconst PageLoader = () => {\n    const { isLoadingPage } = useLoadingData();\n\n    if (!isLoadingPage) return null;\n\n    return (\n        <StyledBackdrop open={isLoadingPage}>\n            <StyledLinearProgress color=\"secondary\" />\n        </StyledBackdrop>\n    );\n};\n\nexport default PageLoader;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport GlobalFonts from \"assets/fonts\";\nimport Notification from \"components/Notification\";\n// Navigation\nimport Navigation from \"./navigation\";\n\n// Store\nimport { useStores } from \"./store\";\n\n// Components\nimport PageLoader from \"./components/PageLoader\";\n\n// Hooks\nfunction useAuthData() {\n    const {\n        authStore,\n        loadersStore: { setLoadingPage },\n    } = useStores();\n\n    return useObserver(() => ({\n        addAuthHeaderInterceptor: authStore.addAuthHeaderInterceptor,\n        dispatchLoginFulfilled: authStore.dispatchLoginFulfilled,\n        setInitialState: authStore.setInitialState,\n        onGetMe: authStore.onGetMe,\n        onLogout: authStore.onLogout,\n        setLoadingPage: setLoadingPage,\n        me: authStore.me,\n        token: authStore.token,\n    }));\n}\n\nfunction App() {\n    const {\n        dispatchLoginFulfilled,\n        addAuthHeaderInterceptor,\n        setInitialState,\n        onGetMe,\n        setLoadingPage,\n        me,\n        token: myToken,\n        onLogout,\n    } = useAuthData();\n\n    useEffect(() => {\n        async function getTokenFromLocalStorage() {\n            try {\n                const token = localStorage.getItem(\"token\") || myToken;\n\n                if (token) {\n                    setLoadingPage(true);\n                    await addAuthHeaderInterceptor(token);\n                    const responseMe = await onGetMe();\n                    const me = responseMe?.data;\n                    dispatchLoginFulfilled(me, token);\n                } else {\n                    setInitialState();\n                }\n            } catch (e) {\n                console.error(e);\n            } finally {\n                setLoadingPage(false);\n            }\n        }\n        if (!me) {\n            getTokenFromLocalStorage();\n        }\n    }, [\n        addAuthHeaderInterceptor,\n        dispatchLoginFulfilled,\n        me,\n        myToken,\n        onGetMe,\n        setInitialState,\n        setLoadingPage,\n    ]);\n\n    return (\n        <>\n            <PageLoader />\n            <Navigation me={me} onLogout={onLogout} />\n            <CssBaseline />\n            <GlobalFonts />\n            <Notification />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"mobx-react\";\n// Theme\nimport ThemeProvider from \"assets/styles/ThemeProvider\";\n// Components\nimport App from \"./App\";\n// Worker\nimport * as serviceWorker from \"./serviceWorker\";\n// Stores\nimport RootStore from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider {...new RootStore()}>\n        <Router history={history}>\n            <ThemeProvider>\n                <App />\n            </ThemeProvider>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}