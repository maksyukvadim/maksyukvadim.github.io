{"version":3,"sources":["components/spiner/Spiner.js","constants.js","actions/index.js","serviceWorker.js","containers/App.js","containers/Root.js","reducers/posts.js","reducers/postDetail.js","reducers/index.js","services/api.js","services/localstorage.js","sagas/index.js","index.js","store/index.js"],"names":["Wrap","styled","div","_templateObject","Spiner","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","__webpack_require__","d","__webpack_exports__","REQUEST","SUCCESS","FAILURE","SET_QUERY_SEARCH","FETCHED_POSTS_DETAIL","FETCHED_POSTS","NEW_COMMENT","SET_MY_COMMENTS","INIT_MY_COMMENTS","TEMP_DATA_COMMENT","name","body","email","POSTS","POST_DETAIL","USER","COMMENTS","posts","postDetail","user","comments","getPosts","getPostsDetail","setQuerySearch","setNewComment","setMyComments","initMyComments","_constants__WEBPACK_IMPORTED_MODULE_0__","createRequestTypes","base","reduce","acc","type","concat","action","payload","request","isLoading","success","response","failure","error","id","query","comment","postId","myComments","Boolean","window","location","hostname","match","WrapList","ListPostContainer","Loadable","loader","Promise","all","e","then","bind","loading","react_default","PostContainer","App","BrowserRouter","Route","exact","path","component","Component","Root","store","this","props","es","containers_App","initialState","isLoadingPosts","querySearch","state","arguments","length","undefined","Object","objectSpread","isLoadingComments","isLoadingUser","isLoadingPostDetail","rootReducer","combineReducers","API_ROOT","get","getPostDetail","getUser","getCommentsByPost","getComments","JSON","parse","localStorage","getItem","setComment","hasOwnProperty","push","setItem","stringify","fetchEntity","initComments","watchFetchPosts","watchFetchPostDetail","watchAddComments","watchInitMyComments","root","entity","apiFn","_ref","data","regenerator_default","wrap","_context","prev","next","put","call","sent","stop","_marked","fetchPosts","api","fetchPostDetail","fetchUser","fetchComments","_context2","localstor","_marked2","_context3","takeEvery","_marked3","_ref2","_context4","take","fork","userId","_marked4","_ref3","_context5","_marked5","_context6","_marked6","_context7","_marked7","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","runSaga","run","close","dispatch","END","configureStore","rootSaga","ReactDOM","render","Root_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39cb27e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrap = styled.div`\r\n  & {\r\n    margin: 100px auto;\r\n    width: 50px;\r\n    height: 40px;\r\n    text-align: center;\r\n    font-size: 10px;\r\n  }\r\n\r\n  & > div {\r\n    background-color: #333;\r\n    height: 100%;\r\n    width: 6px;\r\n    display: inline-block;\r\n\r\n    -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\r\n    animation: sk-stretchdelay 1.2s infinite ease-in-out;\r\n  }\r\n\r\n  & .rect2 {\r\n    -webkit-animation-delay: -1.1s;\r\n    animation-delay: -1.1s;\r\n  }\r\n\r\n  & .rect3 {\r\n    -webkit-animation-delay: -1s;\r\n    animation-delay: -1s;\r\n  }\r\n\r\n  & .rect4 {\r\n    -webkit-animation-delay: -0.9s;\r\n    animation-delay: -0.9s;\r\n  }\r\n\r\n  & .rect5 {\r\n    -webkit-animation-delay: -0.8s;\r\n    animation-delay: -0.8s;\r\n  }\r\n\r\n  @-webkit-keyframes sk-stretchdelay {\r\n    0%,\r\n    40%,\r\n    100% {\r\n      -webkit-transform: scaleY(0.4);\r\n    }\r\n    20% {\r\n      -webkit-transform: scaleY(1);\r\n    }\r\n  }\r\n\r\n  @keyframes sk-stretchdelay {\r\n    0%,\r\n    40%,\r\n    100% {\r\n      transform: scaleY(0.4);\r\n      -webkit-transform: scaleY(0.4);\r\n    }\r\n    20% {\r\n      transform: scaleY(1);\r\n      -webkit-transform: scaleY(1);\r\n    }\r\n  }\r\n`\r\n\r\nconst Spiner = () => (\r\n  <Wrap>\r\n      <div className=\"rect1\" />\r\n      <div className=\"rect2\" />\r\n      <div className=\"rect3\" />\r\n      <div className=\"rect4\" />\r\n  </Wrap>\r\n)\r\n\r\nexport default Spiner\r\n","export const REQUEST = 'REQUEST'\r\nexport const SUCCESS = 'SUCCESS'\r\nexport const FAILURE = 'FAILURE'\r\nexport const SET_QUERY_SEARCH = 'SET_QUERY_SEARCH'\r\nexport const FETCHED_POSTS_DETAIL = 'FETCHED_POSTS_DETAIL'\r\nexport const FETCHED_POSTS = 'FETCHED_POSTS'\r\nexport const NEW_COMMENT = 'NEW_COMMENT'\r\nexport const SET_MY_COMMENTS = 'SET_MY_COMMENTS'\r\nexport const INIT_MY_COMMENTS = 'INIT_MY_COMMENTS'\r\n\r\nexport const TEMP_DATA_COMMENT = { name: '', body: '', email: '' }\r\n","import {\r\n  REQUEST,\r\n  SUCCESS,\r\n  FAILURE,\r\n  SET_QUERY_SEARCH,\r\n  FETCHED_POSTS_DETAIL,\r\n  FETCHED_POSTS,\r\n  NEW_COMMENT,\r\n  SET_MY_COMMENTS,\r\n  INIT_MY_COMMENTS\r\n} from '../constants'\r\n\r\nfunction createRequestTypes(base) {\r\n  return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\r\n    acc[type] = `${base}_${type}`\r\n    return acc\r\n  }, {})\r\n}\r\n\r\nfunction action(type, payload) {\r\n  return { type, payload }\r\n}\r\n\r\nexport const POSTS = createRequestTypes('POSTS')\r\nexport const POST_DETAIL = createRequestTypes('POST_DETAIL')\r\nexport const USER = createRequestTypes('USER')\r\nexport const COMMENTS = createRequestTypes('COMMENTS')\r\n\r\nexport const posts = {\r\n  request: isLoading => action(POSTS[REQUEST], { isLoading }),\r\n  success: (isLoading, response) =>\r\n    action(POSTS[SUCCESS], { isLoading, response }),\r\n  failure: (isLoading, error) => action(POSTS[FAILURE], { isLoading, error }),\r\n}\r\n\r\nexport const postDetail = {\r\n  request: isLoading => action(POST_DETAIL[REQUEST], { isLoading }),\r\n  success: (isLoading, response) =>\r\n    action(POST_DETAIL[SUCCESS], { isLoading, response }),\r\n  failure: (isLoading, error) =>\r\n    action(POST_DETAIL[FAILURE], { isLoading, error }),\r\n}\r\n\r\nexport const user = {\r\n  request: isLoading => action(USER[REQUEST], { isLoading }),\r\n  success: (isLoading, response) =>\r\n    action(USER[SUCCESS], { isLoading, response }),\r\n  failure: (isLoading, error) => action(USER[FAILURE], { isLoading, error }),\r\n}\r\n\r\nexport const comments = {\r\n  request: isLoading => action(COMMENTS[REQUEST], { isLoading }),\r\n  success: (isLoading, response) =>\r\n    action(COMMENTS[SUCCESS], { isLoading, response }),\r\n  failure: (isLoading, error) =>\r\n    action(COMMENTS[FAILURE], { isLoading, error }),\r\n}\r\n\r\nexport const getPosts = () => action(FETCHED_POSTS)\r\nexport const getPostsDetail = id => action(FETCHED_POSTS_DETAIL, { id })\r\nexport const setQuerySearch = query => ({\r\n  type: SET_QUERY_SEARCH,\r\n  payload: { query },\r\n})\r\n\r\nexport const setNewComment = (comment, postId) => ({\r\n  type: NEW_COMMENT,\r\n  payload: { comment, postId },\r\n})\r\n\r\nexport const setMyComments = (myComments) => ({\r\n    type: SET_MY_COMMENTS,\r\n    payload: { myComments },\r\n})\r\n\r\nexport const initMyComments = () => ({\r\n    type: INIT_MY_COMMENTS\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Loadable from 'react-loadable';\nimport styled from 'styled-components'\n\nimport Spiner from '../components/spiner/Spiner'\n\nconst WrapList = styled.div`\n  width: 80%;\n  min-height: 100vh;\n  margin: 0 auto;\n`\n\nconst ListPostContainer = Loadable({\n    loader: () => import('./ListPostContainer'),\n    loading: () => <Spiner />\n});\n\nconst PostContainer = Loadable({\n    loader: () => import('./PostContainer'),\n    loading: () => <Spiner />\n});\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n            <WrapList>\n                <Route exact path=\"/\" component={ListPostContainer} />\n                <Route path=\"/post/:id\" component={PostContainer} />\n            </WrapList>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store } = this.props\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired,\r\n}\r\n","import { POSTS } from '../actions'\r\nimport { REQUEST, SUCCESS, FAILURE } from '../constants'\r\nconst initialState = {\r\n  posts: [],\r\n  isLoadingPosts: false,\r\n  querySearch: '',\r\n}\r\n\r\nfunction posts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POSTS[REQUEST]: {\r\n      return { ...state, isLoadingPosts: action.payload.isLoading }\r\n    }\r\n    case POSTS[SUCCESS]: {\r\n      return {\r\n        ...state,\r\n        posts: action.payload.response,\r\n        isLoadingPosts: action.payload.isLoading,\r\n      }\r\n    }\r\n    case POSTS[FAILURE]: {\r\n      return { ...state, isLoadingPosts: action.payload.isLoading }\r\n    }\r\n    case 'SET_QUERY_SEARCH': {\r\n      return { ...state, querySearch: action.payload.query }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default posts\r\n","import { USER, COMMENTS, POST_DETAIL } from '../actions'\r\nimport { REQUEST, SUCCESS, FAILURE, SET_MY_COMMENTS } from '../constants'\r\nconst initialState = {\r\n  comments: [],\r\n  myComments: {},\r\n  postDetail,\r\n  user: null,\r\n  isLoadingComments: false,\r\n  isLoadingUser: false,\r\n  isLoadingPostDetail: false,\r\n}\r\n\r\nfunction postDetail(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POST_DETAIL[REQUEST]: {\r\n      return { ...state, isLoadingPostDetail: action.payload.isLoading }\r\n    }\r\n    case POST_DETAIL[SUCCESS]: {\r\n      return {\r\n        ...state,\r\n        postDetail: action.payload.response,\r\n        isLoadingPostDetail: action.payload.isLoading,\r\n      }\r\n    }\r\n    case POST_DETAIL[FAILURE]: {\r\n      return { ...state, isLoadingPostDetail: action.payload.isLoading }\r\n    }\r\n    case USER[REQUEST]: {\r\n      return { ...state, isLoadingUser: action.payload.isLoading }\r\n    }\r\n    case USER[SUCCESS]: {\r\n      return {\r\n        ...state,\r\n        user: action.payload.response,\r\n        isLoadingUser: action.payload.isLoading,\r\n      }\r\n    }\r\n    case USER[FAILURE]: {\r\n      return { ...state, isLoadingPosts: action.payload.isLoading }\r\n    }\r\n    case COMMENTS[REQUEST]: {\r\n      return { ...state, isLoadingComments: action.payload.isLoading }\r\n    }\r\n    case COMMENTS[SUCCESS]: {\r\n      return {\r\n        ...state,\r\n        comments: action.payload.response,\r\n        isLoadingComments: action.payload.isLoading,\r\n      }\r\n    }\r\n    case COMMENTS[FAILURE]: {\r\n      return { ...state, isLoadingComments: action.payload.isLoading }\r\n    }\r\n\r\n    case SET_MY_COMMENTS: {\r\n      return { ...state, myComments: action.payload.myComments }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default postDetail\r\n","import posts from './posts'\r\nimport postDetail from './postDetail'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n  postDetail,\r\n})\r\n\r\nexport default rootReducer\r\n","import { get } from 'axios'\r\nconst API_ROOT = 'https://jsonplaceholder.typicode.com'\r\n\r\nexport const getPosts = () => get(`${API_ROOT}/posts`)\r\nexport const getPostDetail = id => get(`${API_ROOT}/posts/${id}`)\r\nexport const getUser = id => get(`${API_ROOT}/users/${id}`)\r\nexport const getCommentsByPost = id => get(`${API_ROOT}/posts/${id}/comments`)\r\n","const COMMENTS = 'comments'\r\nexport const getComments = () => {\r\n   let comments = JSON.parse(localStorage.getItem(COMMENTS))\r\n    if(!comments) comments = {};\r\n    return comments\r\n}\r\n\r\nexport const setComment = (comment, postId) => {\r\n  let comments = getComments(COMMENTS)\r\n\r\n  if (comments.hasOwnProperty(postId)) {\r\n    comments[postId].push(comment)\r\n  } else {\r\n    comments[postId] = [comment]\r\n  }\r\n  localStorage.setItem(COMMENTS, JSON.stringify(comments))\r\n  return comments\r\n}\r\n","import { take, put, call, fork, all, takeEvery } from 'redux-saga/effects'\r\nimport { posts, postDetail, user, comments, setMyComments } from '../actions'\r\nimport { api, localstor } from '../services'\r\nimport {\r\n  FETCHED_POSTS_DETAIL,\r\n  FETCHED_POSTS,\r\n  INIT_MY_COMMENTS,\r\n} from '../constants'\r\n\r\nfunction* fetchEntity(entity, apiFn, id) {\r\n  yield put(entity.request(true))\r\n  const { data, error } = yield call(apiFn, id)\r\n  if (data) yield put(entity.success(false, data))\r\n  else yield put(entity.failure(false, error))\r\n}\r\n\r\nexport const fetchPosts = fetchEntity.bind(null, posts, api.getPosts)\r\nexport const fetchPostDetail = fetchEntity.bind(\r\n  null,\r\n  postDetail,\r\n  api.getPostDetail\r\n)\r\nexport const fetchUser = fetchEntity.bind(null, user, api.getUser)\r\nexport const fetchComments = fetchEntity.bind(\r\n  null,\r\n  comments,\r\n  api.getCommentsByPost\r\n)\r\n\r\nfunction* initComments() {\r\n  const myComments = localstor.getComments()\r\n  yield put(setMyComments(myComments))\r\n}\r\n\r\nfunction* watchFetchPosts() {\r\n  yield takeEvery(FETCHED_POSTS, fetchPosts)\r\n}\r\n\r\nfunction* watchFetchPostDetail() {\r\n  const { payload } = yield take(FETCHED_POSTS_DETAIL)\r\n  yield fork(fetchPostDetail, payload.id)\r\n  const action = yield take('POST_DETAIL_SUCCESS')\r\n  yield all([\r\n    call(fetchUser, action.payload.response.userId),\r\n    call(fetchComments, payload.id),\r\n  ])\r\n}\r\n\r\nfunction* watchAddComments() {\r\n  const { payload } = yield take('NEW_COMMENT')\r\n  const myComments = localstor.setComment(payload.comment, payload.postId)\r\n  yield put(setMyComments(myComments))\r\n}\r\n\r\nfunction* watchInitMyComments() {\r\n  yield takeEvery(INIT_MY_COMMENTS, initComments)\r\n}\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchFetchPosts),\r\n    fork(watchFetchPostDetail),\r\n    fork(watchAddComments),\r\n    fork(watchInitMyComments),\r\n  ])\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport Root from './containers/Root'\nimport configureStore from './store'\nimport rootSaga from './sagas'\n\nconst store = configureStore()\nstore.runSaga(rootSaga)\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport createSagaMiddleware, { END } from 'redux-saga'\r\n\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initialState) {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(\r\n                sagaMiddleware\r\n            )\r\n        )\r\n    )\r\n\r\n    // if (module.hot) {\r\n    //     // Enable Webpack hot module replacement for reducers\r\n    //     module.hot.accept('../reducers', () => {\r\n    //         const nextRootReducer = require('../reducers').default\r\n    //         store.replaceReducer(nextRootReducer)\r\n    //     })\r\n    // }\r\n    store.runSaga = sagaMiddleware.run\r\n    store.close = () => store.dispatch(END)\r\n    return store\r\n}"],"sourceRoot":""}