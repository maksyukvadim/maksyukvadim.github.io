{"version":3,"sources":["assets/fonts/GT-America-Extended-Medium.otf","assets/fonts/GT-America-Extended-Bold.otf","components/NoMatch/img/404.png","components/ColorPicker/paint.svg","constants/theme.js","assets/styles/ThemeProvider.js","assets/fonts/index.js","services/api/constants.js","constants/developers.js","utils/developersUtils.js","constants/dateFormats.js","services/api/AuthService.js","services/api/UserService.js","store/AuthStore.js","services/api/LogService.js","services/api/ProjectService.js","constants/pagination.js","store/LogStore.js","store/LoadersStore.js","store/ProjectStore.js","store/UserStore.js","store/NotificationStore.js","services/api/ExportService.js","constants/export.js","store/ExportStore.js","store/PaginationStore.js","services/api/ActivityService.js","store/ActivityStore.js","store/index.js","components/Notification/index.js","components/NoMatch/styles.js","components/NoMatch/index.js","components/UserAvatar/style.js","components/UserAvatar/index.js","components/PhotoUploader/styles.js","components/PhotoUploader/index.js","components/ProfileMenu/styles.js","components/ProfileMenu/index.js","components/Link/index.js","components/NavigationPanel/NavigationMenu/styles.js","components/NavigationPanel/NavigationMenu/index.js","components/Logo/styles.js","components/Logo/index.js","utils/routerUtils.js","components/NavigationPanel/index.js","components/TableRow/styles.js","components/TableRow/index.js","components/TableCell/styles.js","components/TableCell/index.js","Pages/developers/DevelopersTable/index.js","components/FormDialog/styles.js","components/FormDialog/index.js","Pages/developers/SkillsSelector/index.js","components/DialogActionButton/styles.js","components/DialogActionButton/index.js","Pages/developers/CreateUserForm/styles.js","Pages/developers/RoleSelector/index.js","Pages/developers/CreateUserForm/index.js","components/AddButton/styles.js","components/AddButton/index.js","components/ReportPagination/index.js","components/StyledPaper/index.js","Pages/developers/styles.js","Pages/manager-reports/DateRangePicker/index.js","components/ColoredName/styles.js","components/ColoredName/index.js","Pages/manager-reports/ProjectSelector/style.js","Pages/manager-reports/ProjectSelector/index.js","Pages/manager-reports/UserSelector/style.js","Pages/manager-reports/UserSelector/index.js","utils/managerReportsUtils.js","Pages/manager-reports/WeekSelector/index.js","Pages/manager-reports/FilterSelectorPanel/index.js","constants/managerReports.js","Pages/manager-reports/style.js","Pages/manager-reports/LogReportTable/index.js","components/DownloadButton/styles.js","components/DownloadButton/index.js","constants/projects.js","utils/projectUtils.js","Pages/projects/ProjectsTable/style.js","Pages/projects/ProjectsTable/index.js","Pages/projects/UserMultiSelect/index.js","Pages/projects/TypeSelector/index.js","components/ColorPicker/styles.js","components/ColorPicker/index.js","Pages/projects/CreateProjectForm/styles.js","Pages/projects/CreateProjectForm/index.js","Pages/projects/styles.js","constants/reportHistory.js","Pages/report-history/ReportHistoryTable/style.js","Pages/report-history/ReportHistoryTable/index.js","components/WeekSelector/index.js","components/WeekDates/styles.js","utils/developerReportUtils.js","components/WeekDates/index.js","components/Chip/style.js","components/Chip/index.js","constants/developerReport.js","Pages/developer-reports/ReportTable/style.js","Pages/developer-reports/ReportTable/index.js","components/TimePicker/index.js","Pages/developer-reports/Selector/styles.js","Pages/developer-reports/Selector/index.js","Pages/developer-reports/LogInfoHeader/index.js","Pages/developer-reports/ReportForm/styles.js","Pages/developer-reports/ReportForm/index.js","Pages/developer-reports/TotalTimeInfo/index.js","Pages/signin/styles.js","Pages/ForgotPassword/style.js","Pages/ResetPassword/style.js","Pages/Settings/LogSettingsForm/style.js","Pages/Settings/LogSettingsForm/index.js","Pages/Activity/ProjectCard/styles.js","Pages/Activity/ProjectCard/index.js","Pages/Activity/LogCard/index.js","Pages/Activity/LogTypeCard/index.js","Pages/Activity/UserCard/index.js","Pages/Activity/ExportHistoryCard/index.js","Pages/Activity/ActivityBlock/index.js","Pages/Activity/ActivitiesList/index.js","Pages/LogItems/LogStatusHandler/style.js","Pages/LogItems/LogStatusHandler/index.js","Pages/LogItems/InReviewItem/style.js","Pages/LogItems/InReviewItem/index.js","Pages/LogItems/index.js","navigation/rules.js","navigation/routes.js","Pages/home/index.js","Pages/signin/index.js","Pages/ForgotPassword/index.js","Pages/ResetPassword/index.js","Pages/developer-reports/index.js","Pages/manager-reports/index.js","Pages/projects/index.js","Pages/developers/index.js","Pages/report-history/index.js","Pages/Settings/index.js","Pages/Activity/index.js","navigation/index.js","components/PageLoader/styles.js","components/PageLoader/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","logo","success","green","error","red","info","blue","default","grey","children","StylesProvider","injectFirst","createGlobalStyle","AmericaMedium","AmericaBold","API_URL","window","IMAGES_URL","TABLE_HEADERS","DEFAULT_FORM_VALUES","firstname","lastname","skills","email","role","rate","country","getInitialFormValues","initialData","Object","keys","reduce","acc","key","formatFromMinutes","durationInMinutes","Number","moment","duration","hours","minutes","getUserAvatar","avatar","authService","login","data","a","axios","post","logout","forgotPassword","body","resetPassword","getMe","get","addAuthHeaderInterceptor","token","onError","interceptors","request","use","config","headers","response","status","Promise","reject","clearInterceptor","interceptor","eject","userService","getUserList","params","getUser","id","createUser","updateUser","pathId","put","deleteUser","delete","uploadAvatar","AuthStore","rootStore","showError","message","notificationStore","showNotification","type","setInitialState","undefined","me","authInterceptor","onLogin","showLoader","access_token","localStorage","setItem","setUserToken","console","onLogout","removeItem","onGetMe","dispatchLoginFulfilled","onForgotPassword","onResetPassword","getItem","onUploadAvatar","isUpdatingAvatar","formData","FormData","append","this","value","loadersStore","setLoadingPage","decorate","observable","ref","action","logService","getLogs","addLog","updateLog","deleteLog","setLogStatus","getLogTypes","updateLogType","typeId","addLogType","deleteLogType","projectService","getProjectList","getProjectTypes","getProjectUserList","createProject","updateProject","deleteProject","ROWS_PER_PAGE","updateLogListStrategy","dataArray","newItem","map","item","filter","userList","LogStore","logs","logTypes","projectList","setPaginationMeta","paginationStore","setMeta","setEmptyLogs","onGetLogs","setLoading","runInAction","meta","onAddLog","onUpdateLog","onUpdateLogStatus","onDeleteLog","onGetLogTypes","per_page","onCreateLogType","push","errors","onUpdateLogType","onDeleteLogType","onGetProjectList","onGetUserList","updateLogInList","setLogTypes","LoadersStore","isLoadingPage","mapperSortFields","Updated","Created","Type","fetchStrategy","update","create","ProjectStore","projectTypes","sort","enhancedParams","field","handleFetchProjectData","actionType","onCreateProject","onUpdateProject","onDeleteProject","onGetProjectTypes","onGetProjectUserList","setEditingProjectData","project","editingProjectData","users","projectUserList","UserStore","setIsLoading","handleFetchUserData","onCreateUser","onUpdateUser","onDeleteUser","setEditingUserData","user","editingUserData","NotificationStore","notificationQueue","length","hideNotification","exportService","download","responseType","getHistoryItems","EXCEL_TYPE","ExportStore","showErrorMessage","onDownload","downloadFile","onGetHistoryItems","page","perPage","historyItems","week","from_date","to_date","blob","Blob","document","createElement","href","URL","createObjectURL","click","PaginationStore","setInitialValues","initialValues","setPage","number","setPerPage","activityService","getActivities","distributeBy","array","object","entries","title","ActivityStore","activities","nextDate","handleResponseActivities","next_date","current_date","date","onGetActivities","useStores","React","useContext","MobXProviderContext","RootStore","authStore","logStore","projectStore","userStore","exportStore","activityStore","SlideTransition","props","Slide","direction","Notification","store","useObserver","useStore","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","onClose","elevation","variant","severity","PageWrapper","styled","div","PageContainer","backgroundImg","Content","MainText","p","SecondaryText","NoMatch","history","onClick","StyledAvatar","disablePointer","restProps","Avatar","size","UserAvatar","firstName","lastName","src","Component","StyledLabel","label","disabled","PhotoUploader","onUpload","htmlFor","style","display","name","multiple","onChange","e","target","files","Wrapper","StyledProgress","CircularProgress","ProfileMenu","StyledLink","NavLink","dark","useStyles","makeStyles","list","width","fullList","menuButton","color","active","background","pointer","cursor","NavigationMenu","anchor","menuItems","classes","useState","left","state","setState","toggleDrawer","event","IconButton","aria-label","className","Drawer","clsx","onKeyDown","List","path","to","ListItem","button","ListItemText","Divider","divider","secondary","Shape","span","SIZE","ShapeContainer","Text","LogoContainer","Logo","ROUTES","freeze","ROUTES_FOR_DEV","ROUTES_FOR_ADMIN","BY_ROLE","admin","dev","root","flexGrow","marginRight","spacing","NavigationPanel","routes","routesByRole","includes","getRoutesByRole","AppBar","position","Toolbar","Typography","Hidden","smDown","Box","mr","alignItems","route","px","noWrap","Link","orientation","flexItem","mdUp","StyledTableRow","otherProps","TableRow","hover","text","StyledTableCell","minWidth","TableCell","developerList","Table","TableHead","TableBody","developer","component","scope","join","projects","total_work_time","StyledDialog","Dialog","FormDialog","handleClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","EMPTY_OPTIONS","SkillMultiSelect","values","Autocomplete","options","freeSolo","toJS","newValue","inputValue","renderInput","TextField","ContainedButton","Button","light","OutlinedButton","DialogActionButton","StyledGridContainer","Grid","RoleSelector","RadioGroup","FormLabel","container","wrap","FormControlLabel","control","Radio","schema","shape","string","required","CreateUserForm","handleSubmit","handleDeleteUser","formik","useFormik","enableReinitialize","validateOnChange","validateOnBlur","validationSchema","onSubmit","resetForm","then","autoComplete","handleChange","defaultValue","ml","justify","xs","fullWidth","setFieldValue","DialogActions","StyledAddIcon","AddIcon","AddButton","handleClick","startIcon","ReportPagination","useEffect","justifyContent","TablePagination","rowsPerPageOptions","count","total","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","Pagination","last_page","current_page","StyledPaper","Paper","StyledGrid","DateRangePicker","fromDate","toDate","setFilter","setErrorDates","utils","MomentUtils","locale","maxDate","format","minDate","CustomBadge","Title","fontSize","ColoredName","StyledTextField","ProjectSelector","selectedProjects","onChangeProject","renderTags","listProjects","Chip","onDelete","filteredProjects","filterSelectedOptions","getOptionSelected","option","getOptionLabel","selectedUser","getWeekNumber","isoWeek","formatToString","momentDate","formatTimeDuration","time","asMinutes","ALL_WEEKS","Array","from","endOf","isoWeeks","empty","index","String","WeekSelector","selectedWeeks","FilterSelectorPanel","selectedUsers","flexWrap","mt","sm","mx","UserSelector","STATUS_COLORS","approved","declined","ColoredStatus","mainSuccess","mainError","LogReportTable","logList","log","align","user_id","project_id","descriptions","last_generated","calendar","StyledIcon","GetAppIcon","DownloadButton","isDisabled","alias","getDate","sup","StyledTableContainer","TableContainer","typography","body1","onSort","TableSortLabel","created_at","updated_at","AvatarGroup","Tooltip","placement","durationMin","formatTime","total_log","UserMultiSelect","idSet","Set","has","getSelectedOptions","TypeSelector","ListItems","isActive","CustomPicker","CustomPickerInput","input","defaultColors","ColorPicker","colors","activeColor","onChangeThrottle","throttle","val","onChangeColor","useCallback","currentTarget","customColors","concat","pop","paint","height","alt","mixed","LogForm","handleDeleteProject","onColorChange","multiline","rows","StyledContainer","getDatesLabel","concatUserNames","concatProjectNames","weeksCount","setWeek","selectedWeek","currentWeek","_","weeksOptions","closeIcon","StyledButton","hasLogs","from_time","to_time","log_type_id","getTotalTime","durations","totalDurations","slice","prev","cur","add","Math","floor","clone","asHours","getParametersForLogs","isoWeekday","getStartOfWeek","weekNumber","startOf","getEndOfWeek","setDay","selectedDay","weekDates","setWeekDates","day","isSame","some","checkLogDate","formatDate","set","month","StyledChip","validationErrorMessages","handleEditLog","setTotalWeekTime","setTotalDayTime","filteredLogs","setFilteredLogs","i","validLog","editLog","find","getLogTypeEnum","Developers","setTouched","ampm","momentTime","helperText","StyledFormControl","FormControl","Selector","labelKey","valueKey","placeholder","opts","createOptions","InputLabel","Boolean","Select","MenuItem","LogInfoHeader","workingDay","flex","pl","gutterBottom","paragraph","marginBottom","zIndex","validate","isBefore","submitForm","handleDeleteLog","onSetTouched","touched","margin","TotalTimeInfo","totalDayTime","totalWeekTime","StyledListItem","LogSettingsForm","editingType","setEditingType","pt","StyledProjectName","b","messages","created","updated","deleted","added_user_to_project","deleted_user_to_project","ProjectCard","CardContent","flexDirection","author","entity","LogCard","LogTypeCard","UserCard","ExportHistoryCard","ActivityBlock","getCard","model","ActivitiesList","Timeline","TimelineItem","TimelineSeparator","TimelineDot","getIcon","TimelineConnector","TimelineContent","tree_id","Popper","LogStatusHandler","getColor","ButtonGroup","disableElevation","Card","StyledTextArea","StyledTypography","InReviewItems","onUpdateStatus","validateForm","py","borderRadius","mb","getLogType","STATUS_VALUES","authRequired","unauthorizedOnly","prop","roleAdmin","roleDev","exact","rules","redirect","adminRedirect","devRedirect","password","setForm","useAuthData","setSuccess","toLogin","setToLogin","URLSearchParams","useLocation","search","password_confirmation","confirmPassword","isModalVisible","setModalVisibility","editingLog","setEditingLog","showModal","closeModal","handleSubmitForm","Container","m","WeekDates","ReportTable","setInitialPagination","Date","setSelectedWeeks","setFromDate","setToDate","setSelectedProjects","setSelectedUsers","errorFromDate","setErrorFromDate","errorToDate","setErrorToDate","addYearToWeek","weeks","onFilterChange","dateFrom","dateTo","my","setSort","updateProjects","onSubmitProject","pb","ProjectsTable","onSubmitUser","DevelopersTable","ReportHistoryTable","submit","currentDate","dataLength","next","hasMore","loader","selectedStatus","setValue","updateLogs","updateLogStatus","Tabs","indicatorColor","textColor","centered","Tab","InReviewItem","textAlign","Navigation","compProps","render","pathname","every","rule","StyledBackdrop","Backdrop","modal","StyledLinearProgress","LinearProgress","PageLoader","useLoadingData","App","myToken","userLoaded","setLoaded","responseMe","getTokenFromLocalStorage","CssBaseline","location","hostname","match","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a67e4fc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Medium.78b3d2f6.otf\";","module.exports = __webpack_public_path__ + \"static/media/GT-America-Extended-Bold.ebbc4701.otf\";","module.exports = __webpack_public_path__ + \"static/media/404.24525eca.png\";","module.exports = __webpack_public_path__ + \"static/media/paint.29c239dd.svg\";","import { createMuiTheme } from \"@material-ui/core\";\nimport { green, red, blue, grey } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#a8bcd8\",\n        },\n        logo: \"#d1d2d4\",\n        success: {\n            main: green[200],\n        },\n        error: {\n            main: red[200],\n        },\n        info: {\n            main: blue[500],\n        },\n        default: {\n            main: grey[500],\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../../constants/theme\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nexport default function ({ children }) {\n    return (\n        <StylesProvider injectFirst>\n            <MuiThemeProvider theme={theme}>\n                <ThemeProvider theme={theme}>{children}</ThemeProvider>\n            </MuiThemeProvider>\n        </StylesProvider>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nimport AmericaMedium from \"assets/fonts/GT-America-Extended-Medium.otf\";\nimport AmericaBold from \"assets/fonts/GT-America-Extended-Bold.otf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GT-America'),\n        url(${AmericaMedium});\n        font-weight: 300;\n        font-style: normal;\n    };\n    @font-face {\n        font-family: 'GT-America';\n        src: local('GT-America'), local('GTAmerica'),\n        url(${AmericaBold});\n        font-weight: 600;\n        font-style: normal;\n    }\n`;\n","export const API_URL = window.API_URL;\nexport const IMAGES_URL = window.IMAGES_URL;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Name\",\n    \"Skills\",\n    \"Project name\",\n    \"Total work time\",\n    \"Status\",\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    skills: [],\n    email: \"\",\n    role: \"\",\n    rate: 0,\n    country: \"\",\n};\n","import moment from \"moment\";\n\nimport { IMAGES_URL } from \"services/api/constants\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/developers\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatFromMinutes = durationInMinutes => {\n    if (Number(durationInMinutes) === 0) {\n        return durationInMinutes;\n    }\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} minutes`;\n    }\n    return `${moment\n        .duration(durationInMinutes, \"seconds\")\n        .hours()}h ${moment.duration(durationInMinutes, \"seconds\").minutes()}m`;\n};\n\nexport const getUserAvatar = avatar => (avatar ? IMAGES_URL + avatar : null);\n","export const FULL_DATE_FORMAT = \"DD-MM-YYYY\";\nexport const FULL_DATE_SHORT = \"DD-MM-YY\";\n\nexport const DATE_FORMAT = \"DD.MM\";\nexport const DAY_FORMAT = \"DD\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const DATE_AND_MONTH = \"DD MMMM\";\n\nexport const HOUR_IN_MINUTES = 60;\n\nexport const MONDAY = 1;\nexport const SUNDAY = 7;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass AuthService {\n    login = async data => {\n        return axios.post(`${API_URL}/auth/login`, {\n            ...data,\n        });\n    };\n\n    logout = async () => axios.post(`${API_URL}/auth/logout`);\n\n    forgotPassword = async body =>\n        axios.post(`${API_URL}/auth/forgot-password`, { ...body });\n\n    resetPassword = body =>\n        axios.post(`${API_URL}/auth/reset-password`, { ...body });\n\n    getMe = async () => axios.get(`${API_URL}/me`);\n\n    addAuthHeaderInterceptor = async ({ token, onError }) => {\n        return axios.interceptors.request.use(\n            config => {\n                if (token) {\n                    config.headers[\"Authorization\"] = \"Bearer \" + token;\n                }\n                return config;\n            },\n            error => {\n                if (error.response.status === 401) {\n                    onError();\n                }\n                Promise.reject(error);\n            }\n        );\n    };\n\n    clearInterceptor = interceptor => {\n        axios.interceptors.request.eject(interceptor);\n    };\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass UserService {\n    getUserList = params => axios.get(`${API_URL}/user`, { params });\n    getMe = () => axios.get(`${API_URL}/me`);\n    getUser = id => axios.get(`${API_URL}/user/${id}`);\n    createUser = body => axios.post(`${API_URL}/user`, { ...body });\n    updateUser = (body, pathId) =>\n        axios.put(`${API_URL}/user/${pathId}`, { ...body });\n    deleteUser = id => axios.delete(`${API_URL}/user/${id}`);\n    uploadAvatar = body =>\n        axios.post(`${API_URL}/user/avatar`, body, {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n}\nconst userService = new UserService();\n\nexport default userService;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\n// Constants\nimport { IMAGES_URL } from \"services/api/constants\";\n\nimport { getUserAvatar } from \"../utils/developersUtils\";\n\n// Services\nimport authService from \"../services/api/AuthService\";\nimport userService from \"../services/api/UserService\";\n\nclass AuthStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n        this.isUpdatingAvatar = false;\n    }\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setInitialState = () => {\n        this.token = undefined;\n        this.me = undefined;\n\n        authService.clearInterceptor(this.authInterceptor);\n    };\n\n    onLogin = async data => {\n        try {\n            this.showLoader(true);\n            const response = await authService.login(data);\n            const token = response?.data?.access_token;\n\n            if (token) {\n                await localStorage.setItem(\"token\", token);\n                this.setUserToken(token);\n            }\n        } catch (err) {\n            console.error(err);\n            this.showNotification(\"error\", err?.response?.data?.message);\n            this.setInitialState();\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onLogout = async data => {\n        try {\n            await authService.logout();\n            await localStorage.removeItem(\"token\");\n\n            authService.clearInterceptor(this.authInterceptor);\n            this.setInitialState();\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    onGetMe = async () => {\n        try {\n            const response = await authService.getMe();\n            return response.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n        }\n    };\n\n    dispatchLoginFulfilled = (me, token) => {\n        this.me = { ...me, avatar: getUserAvatar(me?.avatar) };\n        this.token = token;\n    };\n\n    setUserToken = token => {\n        this.token = token;\n    };\n\n    onForgotPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.forgotPassword(body);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    onResetPassword = async body => {\n        try {\n            this.showLoader(true);\n            await authService.resetPassword(body);\n            this.showNotification(\n                \"success\",\n                \"Password was successfully changed\"\n            );\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n\n    addAuthHeaderInterceptor = async () => {\n        const token = await localStorage.getItem(\"token\");\n\n        authService.clearInterceptor(this.authInterceptor);\n\n        this.authInterceptor = await authService.addAuthHeaderInterceptor({\n            token,\n            onError: this.setInitialState,\n        });\n    };\n    onUploadAvatar = async avatar => {\n        this.isUpdatingAvatar = true;\n\n        try {\n            const formData = new FormData();\n            formData.append(\"avatar\", avatar);\n\n            const data = await userService.uploadAvatar(formData);\n\n            this.me = {\n                ...this.me,\n                avatar: `${IMAGES_URL}/uploads${data?.data?.data?.avatar}`,\n            };\n            this.showNotification(\"success\", \"Avatar updated\");\n        } catch (e) {\n            this.showNotification(\"error\", \"Something went wrong\");\n        } finally {\n            this.isUpdatingAvatar = false;\n        }\n    };\n}\n\ndecorate(AuthStore, {\n    // state\n    me: observable.ref,\n    token: observable,\n    isUpdatingAvatar: observable,\n\n    //actions\n    setInitialState: action,\n    onLogin: action,\n    dispatchLoginFulfilled: action,\n    setUserToken: action,\n    addAuthHeaderInterceptor: action,\n    onGetMe: action,\n    onForgotPassword: action,\n    onUploadAvatar: action,\n});\n\nexport default AuthStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass LogService {\n    getLogs = params => axios.get(`${API_URL}/log`, { params });\n    addLog = body => axios.post(`${API_URL}/log`, { ...body });\n    updateLog = (params, pathId) =>\n        axios.put(`${API_URL}/log/${pathId}`, { ...params });\n    deleteLog = id => axios.delete(`${API_URL}/log/${id}`);\n    setLogStatus = ({ id, status }) =>\n        axios.post(`${API_URL}/log/${id}/${status}`);\n\n    getLogTypes = params => axios.get(`${API_URL}/log-type`, { params });\n    updateLogType = (body, typeId) =>\n        axios.put(`${API_URL}/log-type/${typeId}`, { ...body });\n    addLogType = body => axios.post(`${API_URL}/log-type`, { ...body });\n    deleteLogType = id => axios.delete(`${API_URL}/log-type/${id}`);\n}\n\nconst logService = new LogService();\n\nexport default logService;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ProjectService {\n    getProjectList = params => axios.get(`${API_URL}/project`, { params });\n    getProjectTypes = () => axios.get(`${API_URL}/project/types`);\n    getProjectUserList = id => axios.get(`${API_URL}/project/${id}/users`);\n    createProject = body => axios.post(`${API_URL}/project`, { ...body });\n    updateProject = (body, id) =>\n        axios.put(`${API_URL}/project/${id}`, { ...body });\n    deleteProject = id => axios.delete(`${API_URL}/project/${id}`);\n}\n\nconst projectService = new ProjectService();\n\nexport default projectService;\n","export const DEFAULT_PAGE = 1;\nexport const DEFAULT_PER_PAGE = 20;\nexport const MAX_PER_PAGE = 50;\nexport const ROWS_PER_PAGE = [5, 10, 20, 50];\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport logService from \"services/api/LogService\";\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\nconst updateLogListStrategy = {\n    update: (dataArray, newItem) =>\n        dataArray.map(item => (item.id === newItem.id ? newItem : item)),\n    delete: (dataArray, id) => {\n        return dataArray.filter(item => item.id !== id);\n    },\n    create: (userList, item) => {\n        item.status = \"in review\";\n        return [...userList, item];\n    },\n};\n\nclass LogStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.logs = [];\n        this.logTypes = [];\n\n        this.projectList = [];\n        this.userList = [];\n    }\n\n    setInitialState = () => {\n        this.logs = [];\n        this.logTypes = [];\n        this.projectList = [];\n        this.userList = [];\n    };\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setEmptyLogs = () => {\n        this.logs = [];\n    };\n\n    onGetLogs = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.getLogs(params);\n            runInAction(\"setLogList\", () => {\n                this.logs = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onAddLog = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.addLog(params);\n            runInAction(\"addLogItem\", () => {\n                this.logs = updateLogListStrategy[\"create\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLog = async (params, pathId) => {\n        try {\n            this.setLoading(true);\n            const response = await logService.updateLog(params, pathId);\n\n            runInAction(\"updateLogItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log saved\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onUpdateLogStatus = async params => {\n        try {\n            this.setLoading(true);\n            const response = await logService.setLogStatus(params);\n            runInAction(\"updateLogStatusItem\", () => {\n                this.logs = updateLogListStrategy[\"update\"](\n                    this.logs,\n                    response?.data?.data\n                );\n            });\n            this.showNotification(\"success\", \"Log status changed\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onDeleteLog = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLog(id);\n            runInAction(\"selectLogItem\", () => {\n                this.logs = updateLogListStrategy[\"delete\"](this.logs, id);\n            });\n            this.showNotification(\"success\", \"Log deleted\");\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetLogTypes = async params => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.getLogTypes({\n                ...params,\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setLogTypes\", () => {\n                this.logTypes = data?.data;\n            });\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onCreateLogType = async body => {\n        try {\n            this.setLoading(true);\n            const { data } = await logService.addLogType(body);\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes.push(data?.data);\n            });\n            this.showNotification(\"success\", \"Log type saved\");\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onUpdateLogType = async (body, id) => {\n        try {\n            this.setLoading(true);\n            const {\n                data: { data },\n            } = await logService.updateLogType(body, id);\n            this.showNotification(\"success\", \"Log type changed\");\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes = this.logTypes.map(item => {\n                    if (item.id === data.id) {\n                        return data;\n                    }\n                    return item;\n                });\n            });\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onDeleteLogType = async id => {\n        try {\n            this.setLoading(true);\n            await logService.deleteLogType(id);\n            this.showNotification(\"success\", \"Log type deleted\");\n            runInAction(\"updateLogTypes\", () => {\n                this.logTypes = this.logTypes.filter(item => item.id !== id);\n            });\n        } catch (err) {\n            this.showNotification(\n                \"error\",\n                err?.response?.data?.errors?.type[0]\n            );\n            throw err;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetProjectList = async () => {\n        try {\n            this.setLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    set logTypes(data) {\n        this.logTypes = data;\n    }\n\n    set logs(logs) {\n        this.logs = logs;\n    }\n}\n\ndecorate(LogStore, {\n    // state\n    logs: observable,\n    logTypes: observable,\n    projectList: observable,\n    userList: observable,\n\n    // actions\n    onGetLogs: action,\n    onAddLog: action,\n    onUpdateLog: action,\n    onDeleteLog: action,\n    onUpdateLogStatus: action,\n    updateLogInList: action,\n    setEmptyLogs: action,\n    setLogTypes: action,\n    onGetLogTypes: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n    onCreateLogType: action,\n    onUpdateLogType: action,\n    onDeleteLogType: action,\n    setInitialState: action,\n});\n\nexport default LogStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass LoadersStore {\n    isLoadingPage = true;\n\n    setLoadingPage = status => {\n        this.isLoadingPage = status;\n    };\n}\n\ndecorate(LoadersStore, {\n    // state\n    isLoadingPage: observable,\n\n    // actions\n    setLoadingPage: action,\n});\n\nexport default LoadersStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n\n// Services\nimport projectService from \"services/api/ProjectService\";\nimport userService from \"services/api/UserService\";\n\n// Constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\n\nconst mapperSortFields = {\n    Updated: \"updated_at\",\n    Created: \"created_at\",\n    \"Project name\": \"name\",\n    Type: \"type\",\n};\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => projectService.deleteProject(id),\n    update: () => projectService.updateProject(body, id),\n    create: () => projectService.createProject(body),\n});\n\nclass ProjectStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.projectList = [];\n        this.projectTypes = [];\n        this.projectUserList = [];\n        this.editingProjectData = undefined;\n        this.userList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    setInitialState = () => {\n        this.projectList = [];\n        this.projectTypes = [];\n    };\n\n    onGetProjectList = async ({ sort, ...params }) => {\n        try {\n            let enhancedParams = { ...params };\n            if (sort.field) {\n                enhancedParams = {\n                    ...enhancedParams,\n                    sort: { [mapperSortFields[sort.field]]: sort.type },\n                };\n            }\n\n            this.setLoading(true);\n            const response = await projectService.getProjectList(\n                enhancedParams\n            );\n            runInAction(\"setProjectList\", () => {\n                this.projectList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    handleFetchProjectData = async (actionType, data) => {\n        try {\n            this.setLoading(true);\n            await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"Project saved\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onCreateProject = body => this.handleFetchProjectData(\"create\", { body });\n\n    onUpdateProject = (body, id) =>\n        this.handleFetchProjectData(\"update\", { body, id });\n\n    onDeleteProject = id => this.handleFetchProjectData(\"delete\", { id });\n\n    onGetProjectTypes = async () => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectTypes();\n            runInAction(\"setProjectTypes\", () => {\n                this.projectTypes = response?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetProjectUserList = async id => {\n        try {\n            this.setLoading(true);\n            const response = await projectService.getProjectUserList(id);\n            return response?.data?.data;\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    onGetUserList = async () => {\n        try {\n            this.setLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    setEditingProjectData = async project => {\n        if (!project) {\n            runInAction(() => {\n                this.editingProjectData = project;\n            });\n            return;\n        }\n        const users = await this.onGetProjectUserList(project.id);\n        runInAction(() => {\n            this.editingProjectData = {\n                ...project,\n                users: users.map(item => item.id),\n            };\n        });\n    };\n\n    set projectList(data) {\n        this.projectList = data;\n    }\n    set projectTypes(data) {\n        this.projectTypes = data;\n    }\n    set projectUserList(data) {\n        this.projectUserList = data;\n    }\n}\n\ndecorate(ProjectStore, {\n    // state\n    projectList: observable,\n    projectTypes: observable,\n    projectUserList: observable,\n    editingProjectData: observable,\n    userList: observable,\n\n    //actions\n    setInitialState: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n    onGetProjectTypes: action,\n    setEditingProjectData: action,\n    onCreateProject: action,\n    onUpdateProject: action,\n    onDeleteProject: action,\n});\n\nexport default ProjectStore;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\nimport userService from \"../services/api/UserService\";\n\nconst fetchStrategy = ({ body, id }) => ({\n    delete: () => userService.deleteUser(id),\n    update: () => userService.updateUser(body, id),\n    create: () => userService.createUser(body),\n});\n\nclass UserStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        this.userList = [];\n        this.editingUserData = undefined;\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    onGetUserList = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await userService.getUserList(params);\n            runInAction(\"setUserList\", () => {\n                this.userList = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    handleFetchUserData = async (actionType, data) => {\n        try {\n            this.setIsLoading(true);\n            await fetchStrategy(data)[actionType]();\n            this.showNotification(\"success\", \"User saved\");\n        } catch (error) {\n            this.showNotification(\"error\", error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onCreateUser = body => this.handleFetchUserData(\"create\", { body });\n\n    onUpdateUser = (body, id) =>\n        this.handleFetchUserData(\"update\", { body, id });\n\n    onDeleteUser = id => this.handleFetchUserData(\"delete\", { id });\n\n    setEditingUserData = user => {\n        this.editingUserData = user;\n    };\n}\n\ndecorate(UserStore, {\n    // state\n    userList: observable,\n    editingUserData: observable,\n\n    // actions\n    setEditingUserData: action,\n    onGetUserList: action,\n    onCreateUser: action,\n    onUpdateUser: action,\n    onDeleteUser: action,\n});\n\nexport default UserStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\n\nclass NotificationStore {\n    notificationQueue = [];\n\n    showNotification = data => {\n        this.notificationQueue = [\n            ...this.notificationQueue,\n            {\n                ...data,\n                duration: 2000,\n                id: this.notificationQueue.length,\n            },\n        ];\n    };\n    hideNotification = id => {\n        this.notificationQueue = this.notificationQueue.filter(\n            item => item.id !== id\n        );\n    };\n}\n\ndecorate(NotificationStore, {\n    // state\n    notificationQueue: observable,\n\n    // actions\n    showNotification: action,\n    hideNotification: action,\n});\n\nexport default NotificationStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ExportService {\n    download = params =>\n        axios.get(`${API_URL}/export`, {\n            params,\n            responseType: \"blob\",\n        });\n    getHistoryItems = params =>\n        axios.get(`${API_URL}/export-history`, { params });\n}\n\nconst exportService = new ExportService();\n\nexport default exportService;\n","export const EXCEL_TYPE =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n","// Core\nimport { action, decorate, observable, runInAction } from \"mobx\";\nimport exportService from \"../services/api/ExportService\";\n\n//constants\nimport { MAX_PER_PAGE } from \"constants/pagination\";\nimport { EXCEL_TYPE } from \"constants/export\";\nimport userService from \"services/api/UserService\";\nimport projectService from \"services/api/ProjectService\";\n\nclass ExportStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.historyItems = [];\n        this.userList = [];\n        this.projectList = [];\n    }\n\n    setPaginationMeta = data => {\n        this.rootStore.paginationStore.setMeta(data);\n    };\n\n    showErrorMessage = message => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type: \"error\",\n        });\n    };\n\n    setIsLoading(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    downloadFile(response, { week, from_date, to_date }) {\n        const blob = new Blob([response.data], {\n            type: EXCEL_TYPE,\n        });\n        const a = document.createElement(\"a\");\n        a.href = window.URL.createObjectURL(blob);\n        a.download = `KW_${week ? week : \"\"}_${\n            from_date && to_date ? `${from_date}-${to_date}` : \"\"\n        }.xlsx`;\n        a.click();\n    }\n\n    onDownload = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.download(params);\n            if (response.headers[\"content-type\"] === EXCEL_TYPE) {\n                this.downloadFile(response, params);\n            } else {\n                this.showErrorMessage(\"Error exporting report\");\n            }\n        } catch (error) {\n            this.showErrorMessage(error?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetHistoryItems = async params => {\n        try {\n            this.setIsLoading(true);\n            const response = await exportService.getHistoryItems({\n                page: this.page,\n                per_page: this.perPage,\n                ...params,\n            });\n            runInAction(\"setHistoryItems\", () => {\n                this.historyItems = response?.data?.data;\n            });\n            this.setPaginationMeta(response?.data?.meta);\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            throw error;\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetProjectList = async () => {\n        try {\n            this.setIsLoading(true);\n            const projectList = await projectService.getProjectList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setProjectList\", () => {\n                this.projectList = projectList?.data?.data;\n            });\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n\n    onGetUserList = async () => {\n        try {\n            this.setIsLoading(true);\n            const userList = await userService.getUserList({\n                per_page: MAX_PER_PAGE,\n            });\n            runInAction(\"setUserList\", () => {\n                this.userList = userList?.data?.data;\n            });\n        } catch (error) {\n            this.showErrorMessage(error?.response?.data?.message);\n            console.error(error);\n        } finally {\n            this.setIsLoading(false);\n        }\n    };\n}\n\ndecorate(ExportStore, {\n    //observables\n    historyItems: observable,\n    page: observable,\n    perPage: observable,\n    userList: observable,\n    projectList: observable,\n\n    // actions\n    onDownload: action,\n    onGetHistoryItems: action,\n    onGetProjectList: action,\n    onGetUserList: action,\n});\n\nexport default ExportStore;\n","// Core\nimport { observable, action, decorate } from \"mobx\";\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from \"constants/pagination\";\n\nclass PaginationStore {\n    page = DEFAULT_PAGE;\n    perPage = DEFAULT_PER_PAGE;\n    meta = undefined;\n\n    setInitialValues = initialValues => {\n        this.page = initialValues?.page || DEFAULT_PAGE;\n        this.perPage = initialValues?.perPage || this.perPage;\n        this.meta = undefined;\n    };\n\n    setPage = number => {\n        this.page = number;\n    };\n\n    setPerPage = number => {\n        this.page = DEFAULT_PAGE;\n        this.perPage = number;\n    };\n\n    setMeta = data => {\n        this.meta = data;\n    };\n}\n\ndecorate(PaginationStore, {\n    // state\n    page: observable,\n    perPage: observable,\n    meta: observable,\n\n    // actions\n    setInitialValues: action,\n    setPage: action,\n    setPerPage: action,\n    setMeta: action,\n});\n\nexport default PaginationStore;\n","// Core\nimport axios from \"axios\";\n\n// Constants\nimport { API_URL } from \"./constants\";\n\nclass ActivityService {\n    getActivities = params =>\n        axios.get(`${API_URL}/activities`, {\n            params,\n        });\n}\n\nconst activityService = new ActivityService();\n\nexport default activityService;\n","// Core\nimport { observable, action, decorate, runInAction } from \"mobx\";\n\n// Services\nimport activityService from \"../services/api/ActivityService\";\n\nfunction distributeBy(key, array) {\n    const object = array.reduce((acc, item) => {\n        (acc[item[key]] || (acc[item[key]] = [])).push(item);\n        return acc;\n    }, {});\n\n    return Object.entries(object).map(item => ({\n        title: item[0],\n        data: item[1],\n    }));\n}\nclass ActivityStore {\n    constructor(rootStore) {\n        this.activities = [];\n        this.nextDate = false;\n        this.rootStore = rootStore;\n        this.me = undefined;\n        this.token = undefined;\n    }\n\n    setInitialState = () => {\n        this.activities = [];\n        this.nextDate = false;\n    };\n\n    showLoader(value) {\n        this.rootStore.loadersStore.setLoadingPage(value);\n    }\n\n    showError = message => {\n        this.rootStore.notificationStore.showNotification({\n            type: \"error\",\n            message,\n        });\n    };\n\n    showNotification = (type, message) => {\n        this.rootStore.notificationStore.showNotification({\n            message,\n            type,\n        });\n    };\n\n    handleResponseActivities = ({ activities, next_date, current_date }) => {\n        runInAction(\"set activity response\", () => {\n            this.activities = [\n                ...this.activities,\n                {\n                    date: current_date,\n                    activities: distributeBy(\"tree_id\", activities),\n                },\n            ];\n            this.nextDate = next_date;\n        });\n    };\n\n    onGetActivities = async params => {\n        try {\n            this.showLoader(true);\n            const data = await activityService.getActivities(params);\n            const activities = data?.data?.data;\n            const next_date = data?.data?.next_date;\n            const current_date = data?.data?.current_date;\n            if (activities.length) {\n                this.handleResponseActivities({\n                    activities,\n                    next_date,\n                    current_date,\n                });\n            }\n            if (activities.length < 10 && next_date) {\n                this.onGetActivities({ date: next_date });\n            }\n        } catch (err) {\n            this.showNotification(\"error\", err?.response?.data?.message);\n            throw err;\n        } finally {\n            this.showLoader(false);\n        }\n    };\n}\n\ndecorate(ActivityStore, {\n    // state\n    activities: observable,\n    nextDate: observable,\n\n    // actions\n    onGetActivities: action,\n    setInitialState: action,\n});\n\nexport default ActivityStore;\n","// Core\nimport React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\n// Stores\nimport AuthStore from \"./AuthStore\";\nimport LogStore from \"./LogStore\";\nimport LoadersStore from \"./LoadersStore\";\nimport ProjectStore from \"./ProjectStore\";\nimport UserStore from \"./UserStore\";\nimport NotificationStore from \"./NotificationStore\";\nimport ExportStore from \"./ExportStore\";\nimport PaginationStore from \"./PaginationStore\";\nimport ActivityStore from \"./ActivityStore\";\n\nclass RootStore {\n    constructor() {\n        this.authStore = new AuthStore(this);\n        this.logStore = new LogStore(this);\n        this.loadersStore = new LoadersStore(this);\n        this.projectStore = new ProjectStore(this);\n        this.userStore = new UserStore(this);\n        this.notificationStore = new NotificationStore(this);\n        this.exportStore = new ExportStore(this);\n        this.paginationStore = new PaginationStore(this);\n        this.activityStore = new ActivityStore(this);\n    }\n}\n\n// Hook\nexport const useStores = () => {\n    return React.useContext(MobXProviderContext);\n};\n\nexport default RootStore;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Slide from \"@material-ui/core/Slide\";\n\n// Store\nimport { useStores } from \"../../store\";\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction useStore() {\n    const store = useStores();\n\n    return useObserver(() => ({\n        notificationQueue: store.notificationStore.notificationQueue,\n        hideNotification: store.notificationStore.hideNotification,\n    }));\n}\n\nexport default function Notification() {\n    const { notificationQueue, hideNotification } = useStore();\n\n    return notificationQueue.map(item => (\n        <Snackbar\n            open\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            autoHideDuration={item.duration}\n            TransitionComponent={SlideTransition}\n            onClose={() => hideNotification(item.id)}\n            key={item.id}\n        >\n            <MuiAlert elevation={6} variant=\"filled\" severity={item.type}>\n                {item.message}\n            </MuiAlert>\n        </Snackbar>\n    ));\n}\n","import styled from 'styled-components'\nimport backgroundImg from './img/404.png'\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    padding-top: 10px;\n    box-sizing: border-box;\n`\n\nexport const PageContainer = styled.div`\n    width: 870px;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: url(${backgroundImg}) no-repeat center center;\n    background-size: 100%;\n`\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 380px;\n`\n\nexport const MainText = styled.p`\n    margin: 0;\n    font-size: 23px;\n    line-height: 35px;\n    margin-bottom: 40px;\n`\n\nexport const SecondaryText = styled.p`\n    margin: 0;\n    font-size: 18px;\n    line-height: 27px;\n    margin-bottom: 40px;\n`\n","// Core\nimport React from 'react'\n\n//Styles\nimport {\n    PageWrapper,\n    PageContainer,\n    MainText,\n    SecondaryText,\n    Content,\n} from './styles'\n\nconst NoMatch = ({ history }) => (\n    <PageWrapper>\n        <PageContainer>\n            <Content>\n                <MainText>\n                    Oops! The page you were looking for doesn’t exist\n                </MainText>\n                <SecondaryText>\n                    You may have misstyped the address or the page may have\n                    moved\n                </SecondaryText>\n                <div>\n                    <button\n                        onClick={() => {\n                            history.push('/')\n                        }}\n                    >\n                        Go to mainpage\n                    </button>\n                </div>\n            </Content>\n        </PageContainer>\n    </PageWrapper>\n)\n\nexport default NoMatch\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport const StyledAvatar = styled(({ disablePointer, ...restProps }) => (\n    <Avatar {...restProps} />\n))`\n    background-color: ${({ theme }) => theme.palette.logo};\n    ${({ disablePointer }) => (!disablePointer ? \"cursor: pointer\" : \"\")};\n    font-size: ${({ size }) => size / 2}px;\n    width: ${({ size }) => size}px;\n    height: ${({ size }) => size}px;\n`;\n","import React from \"react\";\n\nimport { StyledAvatar } from \"./style\";\n\nclass UserAvatar extends React.Component {\n    render() {\n        const {\n            firstName,\n            lastName,\n            disablePointer,\n            avatar,\n            size = 40,\n        } = this.props;\n\n        return (\n            <StyledAvatar\n                disablePointer={disablePointer}\n                src={avatar}\n                size={size}\n            >\n                {`${firstName[0] || \"\"}${lastName[0] || \"\"}`}\n            </StyledAvatar>\n        );\n    }\n}\n\nexport default UserAvatar;\n","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n    pointer-events: ${({ disabled }) => (disabled ? \"none\" : \"auto\")};\n`;\n","import React from \"react\";\n\nimport { StyledLabel } from \"./styles\";\n\nconst PhotoUploader = ({ children, onUpload, disabled }) => {\n    return (\n        <StyledLabel htmlFor=\"upload-photo\" disabled={disabled}>\n            <input\n                style={{ display: \"none\" }}\n                id=\"upload-photo\"\n                name=\"upload-photo\"\n                type=\"file\"\n                multiple={false}\n                onChange={e => {\n                    if (!e.target?.files) return;\n\n                    onUpload(e.target?.files[0]);\n                }}\n            />\n            {children}\n        </StyledLabel>\n    );\n};\n\nexport default PhotoUploader;\n","import styled from \"styled-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const Wrapper = styled.div`\n    position: relative;\n`;\n\nexport const StyledProgress = styled(CircularProgress)`\n    position: absolute;\n    top: 0;\n    color: #2196f3;\n`;\n","// Core\nimport React from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n\n// Components\nimport UserAvatar from \"components/UserAvatar\";\nimport PhotoUploader from \"../PhotoUploader\";\n\n// Styles\nimport { Wrapper, StyledProgress } from \"./styles\";\n\nfunction useStore() {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        isUpdatingAvatar: authStore.isUpdatingAvatar,\n        onUploadAvatar: authStore.onUploadAvatar,\n    }));\n}\n\nexport default function ProfileMenu({ me }) {\n    const { isUpdatingAvatar, onUploadAvatar } = useStore();\n\n    return (\n        <Wrapper>\n            <PhotoUploader\n                onUpload={onUploadAvatar}\n                disabled={isUpdatingAvatar}\n            >\n                <UserAvatar\n                    firstName={me.firstname}\n                    lastName={me.lastname}\n                    avatar={me.avatar}\n                />\n            </PhotoUploader>\n            {isUpdatingAvatar && <StyledProgress size={41} />}\n        </Wrapper>\n    );\n}\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n\nexport default StyledLink;\n","// Core\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.main};\n    &.active {\n        color: ${theme.palette.primary.dark};\n    }\n  `}\n`;\n","// Core\nimport React from \"react\";\nimport clsx from \"clsx\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Styles\nimport { StyledLink } from \"./styles\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n    },\n    menuButton: {\n        color: \"#fff\",\n    },\n    active: {\n        background: \"red\",\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n\nconst NavigationMenu = ({ menuItems, me, onLogout }) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    const toggleDrawer = (anchor, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = anchor => (\n        <div\n            className={clsx(classes.list)}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {menuItems.map(({ path, name }) => (\n                    <StyledLink to={`/${path}`} key={path}>\n                        <ListItem button>\n                            <ListItemText primary={name} />\n                        </ListItem>\n                    </StyledLink>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"primary\"\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer\n                anchor=\"right\"\n                open={state[\"left\"]}\n                onClose={toggleDrawer(\"left\", false)}\n            >\n                {list(\"left\")}\n                {me && (\n                    <ListItem divider>\n                        <ListItemText\n                            className={classes.pointer}\n                            onClick={onLogout}\n                            secondary=\"Sign out\"\n                        />\n                    </ListItem>\n                )}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default NavigationMenu;\n","import styled from \"styled-components\";\n\nconst SIZE = 40;\n\nexport const Shape = styled.span`\n    ${({ theme }) => `\n        width: ${SIZE}px;\n    height: ${SIZE / 2}px;\n    position: relative;\n    overflow: hidden;\n    &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        background-color: ${theme.palette.logo};\n        border-radius: 50%;\n        width: 100%;\n        height: 200%;\n    }\n    `}\n`;\n\nexport const ShapeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: ${SIZE}px;\n    max-height: ${SIZE};\n    cursor: pointer;\n`;\n\nexport const Text = styled.div`\n    font-family: \"GT-America\";\n    text-transform: uppercase;\n    font-size: 16px;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    padding-left: 11px;\n    user-select: none;\n    & > span {\n        line-height: 0.9em;\n        transform: scale(1, 0.9);\n        letter-spacing: -0.7px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n`;\n","// Core\nimport React from \"react\";\n\n//styles\nimport { Shape, ShapeContainer, Text, LogoContainer } from \"./styles\";\n\nfunction Logo() {\n    return (\n        <LogoContainer>\n            <ShapeContainer>\n                <Shape />\n                <Shape />\n            </ShapeContainer>\n            <Text>\n                <span>fountain</span>\n                <span>head</span>\n                <span>it</span>\n            </Text>\n        </LogoContainer>\n    );\n}\n\nexport default Logo;\n","const ROUTES = Object.freeze([\n    {\n        name: \"Reports\",\n        path: \"developer-reports\",\n    },\n    {\n        name: \"Log items\",\n        path: \"log-items\",\n    },\n    {\n        name: \"Reports\",\n        path: \"manager-reports\",\n    },\n    {\n        name: \"Projects\",\n        path: \"projects\",\n    },\n    {\n        name: \"Developers\",\n        path: \"developers\",\n    },\n    {\n        name: \"Report history\",\n        path: \"report-history\",\n    },\n    {\n        name: \"Activity\",\n        path: \"activity\",\n    },\n    {\n        name: \"Settings\",\n        path: \"settings\",\n    },\n]);\n\nconst ROUTES_FOR_DEV = Object.freeze([\"developer-reports\"]);\nconst ROUTES_FOR_ADMIN = Object.freeze([\n    \"settings\",\n    \"report-history\",\n    \"developers\",\n    \"projects\",\n    \"manager-reports\",\n    \"activity\",\n    \"log-items\",\n]);\n\nconst BY_ROLE = Object.freeze({\n    admin: ROUTES_FOR_ADMIN,\n    dev: ROUTES_FOR_DEV,\n});\n\nexport const getRoutesByRole = role => {\n    const routesByRole = BY_ROLE[role];\n\n    if (!routesByRole) return [];\n\n    return ROUTES.filter(({ path }) => routesByRole.includes(path));\n};\n","// Core\nimport React from \"react\";\n\n// UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProfileMenu from \"components/ProfileMenu\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"components/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// Components\nimport NavigationMenu from \"./NavigationMenu\";\n\n// UI\nimport Logo from \"components/Logo\";\n\n// Utils\nimport { getRoutesByRole } from \"../../utils/routerUtils\";\nimport { Divider } from \"@material-ui/core\";\n\n// Hooks\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n\nconst NavigationPanel = ({ me, onLogout }) => {\n    const classes = useStyles();\n\n    const routes = getRoutesByRole(me?.role);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Logo />\n\n                <Typography variant=\"h6\" className={classes.title} />\n                <Hidden smDown>\n                    <Box mr={4} display=\"flex\" alignItems=\"center\">\n                        {routes.map(route => (\n                            <Box px={1} key={`box-${route.name}`}>\n                                <Typography\n                                    variant=\"button\"\n                                    key={`typo-${route.name}`}\n                                    noWrap\n                                >\n                                    <Link\n                                        to={route.path}\n                                        key={`link-${route.name}`}\n                                    >\n                                        {route.name}\n                                    </Link>\n                                </Typography>\n                            </Box>\n                        ))}\n                        <Divider orientation=\"vertical\" flexItem />\n                        {me && (\n                            <Box p={2} className={classes.pointer}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    onClick={onLogout}\n                                >\n                                    Sign out\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Hidden>\n                {me && <ProfileMenu me={me} onLogout={onLogout} />}\n                {me && (\n                    <Hidden mdUp>\n                        <NavigationMenu\n                            menuItems={routes}\n                            me={me}\n                            onLogout={onLogout}\n                        />\n                    </Hidden>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavigationPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"@material-ui/core\";\n\nexport const StyledTableRow = styled(({ type, ...otherProps }) => (\n    <TableRow {...otherProps} />\n))`\n    cursor: ${props => (props.hover ? \"pointer\" : \"auto\")};\n    & .MuiTableCell-body {\n        color: ${({ type, theme }) => type && theme.palette.text[type]};\n    }\n\n    opacity: ${props => (props.disabled ? 0.4 : 1)};\n`;\n","import React from \"react\";\nimport { StyledTableRow } from \"./styles\";\n\nfunction TableRow(props) {\n    return <StyledTableRow {...props} />;\n}\n\nexport default TableRow;\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { grey } from \"@material-ui/core/colors\";\n// Styles\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport const StyledTableCell = styled(({ noWrap, minWidth, ...restProps }) => (\n    <TableCell {...restProps} />\n))`\n    border-right: 1px solid ${grey[300]};\n    min-width: ${({ minWidth }) => minWidth};\n    width: ${({ width }) => (width ? `${width}` : \"auto\")};\n    white-space: ${({ noWrap }) => (noWrap ? \"nowrap\" : \"normal\")};\n`;\n","import React from \"react\";\nimport { StyledTableCell } from \"./styles\";\n\nfunction TableCell(props) {\n    return <StyledTableCell {...props} />;\n}\n\nexport default TableCell;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { TableHead, TableBody, Table } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developers\";\nimport { formatFromMinutes } from \"utils/developersUtils\";\n\nexport default function ({ developerList, setEditingUserData }) {\n    const getFullName = (firstname, lastname) => `${firstname} ${lastname}`;\n    const concatSkills = skillsArray => skillsArray.join(\", \");\n\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell key={item}>{item}</TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {developerList.length ? (\n                    developerList.map(developer => (\n                        <TableRow\n                            type={\n                                developer.status === \"inactive\"\n                                    ? \"disabled\"\n                                    : \"primary\"\n                            }\n                            hover\n                            key={developer.id}\n                            onClick={() => setEditingUserData(developer)}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {developer.id}\n                            </TableCell>\n                            <TableCell>\n                                {getFullName(\n                                    developer.firstname,\n                                    developer.lastname\n                                )}\n                            </TableCell>\n                            <TableCell>\n                                {concatSkills(developer.skills)}\n                            </TableCell>\n                            <TableCell>{developer.projects}</TableCell>\n                            <TableCell>\n                                {formatFromMinutes(developer.total_work_time)}\n                            </TableCell>\n                            <TableCell>{developer.status}</TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <TableCell>{\"Empty\"}</TableCell>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\n\nexport const StyledDialog = styled(Dialog)`\n    & .MuiPaper-root,\n    .MuiDialogContent-root {\n        overflow-y: visible;\n    }\n    & .MuiPaper-root {\n        max-width: 400px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// Styles\nimport { StyledDialog } from \"./styles\";\n\nexport default function FormDialog({ open, handleClose, title, children }) {\n    return (\n        <StyledDialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            maxWidth={\"lg\"}\n        >\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n            <DialogContent>{children}</DialogContent>\n        </StyledDialog>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { toJS } from \"mobx\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst EMPTY_OPTIONS = [];\n\nexport default function SkillMultiSelect({ onChange, values, id }) {\n    const handleChange = (e, newValue) => {\n        if (typeof newValue === \"string\") {\n            onChange(id, [...values, newValue]);\n        } else if (newValue && newValue.inputValue) {\n            onChange([...values.newValue.inputValue]);\n        }\n        onChange(id, newValue);\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={EMPTY_OPTIONS}\n                freeSolo\n                value={toJS(values)}\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField {...params} variant=\"outlined\" label=\"Skills\" />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"@material-ui/core/Button\";\n\nexport const ContainedButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    color: white;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n\nexport const OutlinedButton = styled(({ type, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { ContainedButton, OutlinedButton } from \"./styles\";\n\nfunction DialogActionButton(props) {\n    return props.variant === \"contained\" ? (\n        <ContainedButton {...props} />\n    ) : (\n        <OutlinedButton {...props} />\n    );\n}\n\nexport default DialogActionButton;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n    Typography,\n} from \"@material-ui/core\";\n\nfunction RoleSelector({ value, onChange, id, error }) {\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n    return (\n        <RadioGroup aria-label=\"Type\" value={value} onChange={handleChange}>\n            <FormLabel error={error}>\n                <Typography variant=\"caption\">{\"Role *\"}</Typography>\n            </FormLabel>\n            <Grid container wrap=\"nowrap\">\n                <FormControlLabel\n                    value=\"dev\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Developer\"\n                />\n                <FormControlLabel\n                    value=\"admin\"\n                    id={id}\n                    control={<Radio color={\"primary\"} />}\n                    label=\"Admin\"\n                />\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default RoleSelector;\n","// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { object, string } from \"yup\";\n// UI\nimport { Grid, TextField, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport SkillMultiSelect from \"../SkillsSelector\";\nimport DialogActionButton from \"components/DialogActionButton\";\n\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developersUtils\";\nimport RoleSelector from \"../RoleSelector\";\n\nlet schema = object().shape({\n    firstname: string().required(),\n    lastname: string().required(),\n    email: string().email().required(),\n    role: string().required(),\n});\n\nexport default function CreateUserForm({\n    open,\n    onClose,\n    handleSubmit,\n    initialData,\n    handleDeleteUser,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validationSchema: schema,\n        onSubmit: (data, { resetForm }) => {\n            handleSubmit(data, initialData?.id).then(() =>\n                resetForm(getInitialFormValues())\n            );\n        },\n    });\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        onClose();\n    };\n\n    const { errors } = formik;\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Developer:\">\n            <form autoComplete=\"off\">\n                <StyledGridContainer>\n                    <Grid container>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                error={!!errors.firstname}\n                                id=\"firstname\"\n                                label=\"First name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.firstname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                error={!!errors.lastname}\n                                id=\"lastname\"\n                                label=\"Last name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.lastname}\n                                autoComplete=\"off\"\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid container justify={\"space-between\"}>\n                        <Grid item xs={4}>\n                            <TextField\n                                id=\"country\"\n                                label=\"Country\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.country}\n                            />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <TextField\n                                required\n                                error={!!errors.email}\n                                fullWidth\n                                id=\"email\"\n                                label=\"e-mail\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.email}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <RoleSelector\n                            value={formik.values.role}\n                            error={!!errors.role}\n                            onChange={formik.setFieldValue}\n                            id=\"role\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SkillMultiSelect\n                            values={formik.values.skills}\n                            onChange={formik.setFieldValue}\n                            id=\"skills\"\n                        />\n                    </Grid>\n                    <DialogActions>\n                        {initialData && (\n                            <DialogActionButton\n                                onClick={() =>\n                                    handleDeleteUser(initialData?.id)\n                                }\n                                type=\"error\"\n                            >\n                                Delete\n                            </DialogActionButton>\n                        )}\n                        <DialogActionButton onClick={onCancel} type=\"default\">\n                            Cancel\n                        </DialogActionButton>\n                        <DialogActionButton\n                            onClick={formik.handleSubmit}\n                            variant=\"contained\"\n                            type=\"success\"\n                        >\n                            Save\n                        </DialogActionButton>\n                    </DialogActions>\n                </StyledGridContainer>\n            </form>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nexport const StyledAddIcon = styled(AddIcon)`\n    ${({ theme }) => `\n    && {\n        font-size: 40px;\n    };\n    color: ${theme.palette.info.main}\n`}\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledAddIcon } from \"./styles\";\n\nfunction AddButton({ handleClick, children }) {\n    return (\n        <Button\n            size=\"large\"\n            onClick={handleClick}\n            startIcon={<StyledAddIcon />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default AddButton;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport { TablePagination, Box } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\n\n// constants\nimport { ROWS_PER_PAGE } from \"constants/pagination\";\n\n// Store\nimport { useStores } from \"store\";\n\nfunction useStore() {\n    const { paginationStore } = useStores();\n\n    return useObserver(() => ({\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setPage: paginationStore.setPage,\n        setPerPage: paginationStore.setPerPage,\n        meta: paginationStore.meta,\n        setInitialValues: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function ReportPagination() {\n    const {\n        meta,\n        page,\n        perPage,\n        setPage,\n        setPerPage,\n        setInitialValues,\n    } = useStore();\n\n    useEffect(() => setInitialValues, [setInitialValues]);\n\n    if (!meta) {\n        return null;\n    }\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n            <TablePagination\n                rowsPerPageOptions={ROWS_PER_PAGE}\n                component={\"div\"}\n                count={meta.total}\n                rowsPerPage={perPage}\n                page={page - 1}\n                onChangePage={(e, newPage) => setPage(newPage + 1)}\n                onChangeRowsPerPage={e => setPerPage(e.target.value)}\n            />\n            <Pagination\n                count={meta.last_page}\n                color=\"primary\"\n                page={meta.current_page}\n                onChange={(e, newPage) => setPage(newPage)}\n            />\n        </Box>\n    );\n}\n","import styled from \"styled-components\";\nimport { Paper } from \"@material-ui/core\";\n\nconst StyledPaper = styled(Paper)`\n    overflow: scroll;\n`;\n\nexport default StyledPaper;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","// Core\nimport \"moment/locale/en-sg\";\nimport React from \"react\";\nimport MomentUtils from \"@date-io/moment\";\n\n// UI\nimport { Box } from \"@material-ui/core\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\n// constants\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nfunction DateRangePicker({ fromDate, toDate, setFilter, setErrorDates }) {\n    const changeDateFrom = date => {\n        setFilter(\"fromDate\", date);\n    };\n\n    const changeDateTo = date => {\n        setFilter(\"toDate\", date);\n    };\n\n    const onErrorFrom = error => {\n        if (!error) {\n            setErrorDates(\"dateFrom\", false);\n            return;\n        }\n        setErrorDates(\"dateFrom\", true);\n    };\n    const onErrorTo = error => {\n        if (!error) {\n            setErrorDates(\"dateTo\", false);\n            return;\n        }\n        setErrorDates(\"dateTo\", true);\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils} locale={\"en-sg\"}>\n            <Box display=\"flex\">\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        value={fromDate}\n                        label=\"From date\"\n                        maxDate={toDate ? toDate : false}\n                        onChange={changeDateFrom}\n                        format={FULL_DATE_FORMAT}\n                        onError={onErrorFrom}\n                    />\n                </Box>\n                <Box mr={1}>\n                    <KeyboardDatePicker\n                        label=\"To date\"\n                        value={toDate}\n                        minDate={fromDate ? fromDate : false}\n                        onChange={changeDateTo}\n                        format={FULL_DATE_FORMAT}\n                        onError={onErrorTo}\n                    />\n                </Box>\n            </Box>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default DateRangePicker;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`;\n\nexport const CustomBadge = styled.div(\n    ({ size, color }) => `\n      display: table;\n      width: ${size}px;\n      height: ${size}px;\n      border-radius: 50%;\n      margin-right: 5px;\n      background: ${color};\n`\n);\n\nexport const Title = styled.span(\n    ({\n        fontSize,\n        theme: {\n            palette: {\n                default: { main },\n            },\n        },\n        color = main,\n    }) => `\n  color: ${color};\n  line-height: ${fontSize}px;\n  font-size: ${fontSize}px;\n`\n);\n","import React from \"react\";\n\nimport { Wrapper, CustomBadge, Title } from \"./styles\";\n\nconst ColoredName = ({ fontSize = 15, text = \"\", color = \"transparent\" }) => {\n    return (\n        <Wrapper>\n            <CustomBadge size={fontSize / 2} color={color} />\n            <Title color={color} fontSize={fontSize}>\n                {text}\n            </Title>\n        </Wrapper>\n    );\n};\n\nexport default ColoredName;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Chip from \"@material-ui/core/Chip\";\n\n// Components\nimport ColoredName from \"components/ColoredName\";\n\n// Styles\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ projects, setFilter, selectedProjects }) {\n    const onChangeProject = (e, value) => {\n        setFilter(\"selectedProjects\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n\n    const getOptionLabel = option => option.name;\n\n    return (\n        <Autocomplete\n            multiple\n            renderTags={listProjects =>\n                listProjects.map(project => (\n                    <Chip\n                        key={project.id}\n                        label={\n                            <ColoredName\n                                text={project.name}\n                                color={project.color}\n                                fontSize={15}\n                            />\n                        }\n                        onDelete={e => {\n                            const filteredProjects = listProjects.filter(\n                                ({ id }) => {\n                                    return id !== project.id;\n                                }\n                            );\n\n                            return onChangeProject(e, filteredProjects);\n                        }}\n                    />\n                ))\n            }\n            value={selectedProjects}\n            options={projects}\n            onChange={onChangeProject}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <StyledTextField {...params} label=\"Project name\" />\n            )}\n        />\n    );\n}\n\nexport default ProjectSelector;\n","import styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const StyledTextField = styled(TextField)`\n    & .MuiInputBase-root {\n        min-height: 40px;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { StyledTextField } from \"./style\";\n\nfunction ProjectSelector({ userList, setFilter, selectedUser }) {\n    const onChangeUser = (e, value) => {\n        setFilter(\"selectedUsers\", value);\n    };\n\n    const getOptionSelected = (option, value) => option.id === value?.id;\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                value={selectedUser}\n                options={userList}\n                onChange={onChangeUser}\n                filterSelectedOptions\n                getOptionSelected={getOptionSelected}\n                getOptionLabel={getOptionLabel}\n                renderInput={params => (\n                    <StyledTextField {...params} label=\"User name\" />\n                )}\n            />\n        </>\n    );\n}\n\nexport default ProjectSelector;\n","import moment from \"moment\";\nimport {\n    MONDAY,\n    SUNDAY,\n    FULL_DATE_FORMAT,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getWeekNumber = date => moment(date, FULL_DATE_FORMAT).isoWeek();\n\nexport const getFromDate = weekNumber =>\n    moment().isoWeek(weekNumber).isoWeekday(MONDAY).format(FULL_DATE_FORMAT);\n\nexport const getToDate = weekNumber => {\n    const date = moment().isoWeek(weekNumber).isoWeekday(SUNDAY);\n    return date.format(FULL_DATE_FORMAT);\n};\n\nexport const formatToString = momentDate =>\n    moment(momentDate).format(FULL_DATE_FORMAT);\n\nexport const getMomentInstance = date =>\n    date ? moment(date, FULL_DATE_FORMAT) : null;\n\nexport const checkIfWeekSelected = (fromDate, toDate) => {\n    const fromDateWeekNumber = getWeekNumber(fromDate);\n    const toDateWeekNumber = getWeekNumber(toDate);\n    if (fromDateWeekNumber === toDateWeekNumber) {\n        const startOfWeek = getMomentInstance(fromDate).startOf(\"isoWeek\");\n        const endOfWeek = getMomentInstance(fromDate).endOf(\"isoWeek\");\n        return (\n            getMomentInstance(fromDate).isSame(startOfWeek, \"day\") &&\n            getMomentInstance(toDate).isSame(endOfWeek, \"day\")\n        );\n    }\n    return false;\n};\n\nexport const getLogsParams = (fromDate, toDate, users, projects, weeks) => {\n    return {\n        from_date: fromDate,\n        to_date: toDate,\n        users: users.map(item => item.id),\n        projects: projects.map(item => item.id),\n        weeks,\n    };\n};\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()} h ${\n        moment.duration(time).minutes()\n            ? moment.duration(time).minutes() + \" m\"\n            : \"\"\n    }`;\n};\n\nexport const getLastWeek = () => moment().endOf(\"year\").isoWeeks();\n","// Core\nimport React from \"react\";\n// UI\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { TextField } from \"@material-ui/core\";\n\n// Styles\nimport { getLastWeek } from \"utils/managerReportsUtils\";\n\nconst ALL_WEEKS = Array.from({ length: getLastWeek() }).map((empty, index) =>\n    String(index + 1)\n);\n\nfunction WeekSelector({ setFilter, selectedWeeks }) {\n    const onChangeWeeks = (e, value) => {\n        setFilter(\"selectedWeeks\", value);\n    };\n\n    const getOptionSelected = (option, value) =>\n        Number(option) === Number(value);\n\n    const getOptionLabel = option => option;\n\n    return (\n        <Autocomplete\n            multiple\n            value={selectedWeeks}\n            options={ALL_WEEKS}\n            onChange={onChangeWeeks}\n            filterSelectedOptions\n            getOptionSelected={getOptionSelected}\n            getOptionLabel={getOptionLabel}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n\nexport default WeekSelector;\n","// core\nimport React from \"react\";\n\n// UI\nimport DateRangePicker from \"../DateRangePicker\";\nimport ProjectSelector from \"../ProjectSelector\";\nimport UserSelector from \"../UserSelector\";\nimport WeekSelector from \"../WeekSelector\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nfunction FilterSelectorPanel({\n    setFilter,\n    projectList,\n    userList,\n    fromDate,\n    toDate,\n    selectedWeeks,\n    selectedProjects,\n    selectedUsers,\n    setErrorDates,\n}) {\n    return (\n        <Box display=\"flex\" alignItems=\"flex-end\" flexWrap=\"wrap\" mt={5}>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <DateRangePicker\n                        setFilter={setFilter}\n                        fromDate={fromDate}\n                        toDate={toDate}\n                        setErrorDates={setErrorDates}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Box mx={3}>\n                    <WeekSelector\n                        setFilter={setFilter}\n                        selectedWeeks={selectedWeeks}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <ProjectSelector\n                        projects={projectList}\n                        setFilter={setFilter}\n                        selectedProjects={selectedProjects}\n                    />\n                </Box>\n            </Grid>\n            <Grid item xs={6}>\n                <Box mx={3} mt={3}>\n                    <UserSelector\n                        selectedUsers={selectedUsers}\n                        userList={userList}\n                        setFilter={setFilter}\n                    />\n                </Box>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default FilterSelectorPanel;\n","export const TABLE_HEADERS = [\n    \"Date\",\n    \"Week\",\n    \"Developer\",\n    \"Project name\",\n    \"Description\",\n    \"Work time\",\n    \"Last generated\",\n    \"Status\",\n];\n\nexport const STATUS_OPTIONS = [\n    {\n        value: \"approved\",\n        label: \"Approve\",\n    },\n    {\n        value: \"declined\",\n        label: \"Decline\",\n    },\n];\n\nexport const STATUS_COLORS = {\n    approved: \"success\",\n    declined: \"error\",\n};\n","import styled from \"styled-components\";\nimport { Paper, Box } from \"@material-ui/core\";\n\nexport const StyledPaper = styled(Paper)`\n    overflow: scroll;\n`;\n\nexport const ColoredStatus = styled(Box)(\n    ({\n        status,\n        theme: {\n            palette: {\n                primary: { main },\n                success: { main: mainSuccess },\n                error: { main: mainError },\n            },\n        },\n    }) => `\n color: ${\n     status === \"approved\"\n         ? mainSuccess\n         : status === \"declined\"\n         ? mainError\n         : main\n }`\n);\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { TableHead, TableBody, Table, Box } from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport ColoredName from \"components/ColoredName\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/managerReports\";\n\n// Utils\nimport { formatTimeDuration } from \"utils/managerReportsUtils\";\n\n// Styles\nimport { ColoredStatus } from \"../style\";\n\nexport default function LogReportTable({ logList }) {\n    return (\n        <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    {TABLE_HEADERS.map(item => (\n                        <TableCell noWrap key={item}>\n                            {item}\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {logList.length ? (\n                    logList.map(log => (\n                        <TableRow hover key={`log-${log.id}`}>\n                            <TableCell noWrap>\n                                {moment(log.date, \"DD-MM-YYYY\").format(\n                                    \"DD.MM.YYYY\"\n                                )}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {moment(log.date, \"DD-MM-YYYY\").isoWeek()}\n                            </TableCell>\n                            <TableCell>{`${log.user_id.firstname} ${log.user_id.lastname}`}</TableCell>\n                            <TableCell>\n                                <ColoredName\n                                    text={log.project_id.name}\n                                    fontSize={14}\n                                    color={log.project_id.color}\n                                />\n                            </TableCell>\n                            <TableCell>{log.descriptions}</TableCell>\n                            <TableCell noWrap>\n                                {formatTimeDuration(log.total)}\n                            </TableCell>\n                            <TableCell>\n                                {log.last_generated\n                                    ? moment(\n                                          log.last_generated,\n                                          \"YYYY-MM-DD HH:mm:ss\"\n                                      ).calendar()\n                                    : \"-\"}\n                            </TableCell>\n                            <TableCell>\n                                <ColoredStatus status={log.status}>\n                                    {log.status}\n                                </ColoredStatus>\n                            </TableCell>\n                        </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                        <Box p={3} component=\"td\">\n                            {\"Empty\"}\n                        </Box>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n","import styled from \"styled-components\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nexport const StyledIcon = styled(GetAppIcon)`\n    && {\n        font-size: ${({ size }) => size};\n    }\n    color: ${({ disabled, theme }) =>\n        disabled ? theme.palette.grey[300] : theme.palette.info.main};\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledIcon } from \"./styles\";\n\nfunction DownloadButton({ handleClick, children, disabled }) {\n    return (\n        <Button\n            disabled={disabled}\n            onClick={handleClick}\n            startIcon={<StyledIcon disabled={disabled} />}\n        >\n            {children}\n        </Button>\n    );\n}\n\nexport default DownloadButton;\n","export const TABLE_HEADERS = [\n    { name: \"Created\", isDisabled: false },\n    { name: \"Updated\", isDisabled: false },\n    { name: \"Project name\", isDisabled: false },\n    { name: \"Developers\", isDisabled: true },\n    { name: \"Type\", isDisabled: false },\n    { name: \"Total time spend\", isDisabled: true },\n];\n\nexport const DEFAULT_FORM_VALUES = {\n    alias: \"\",\n    name: \"\",\n    descriptions: \"\",\n    users: [],\n    type: \"\",\n    color: null,\n};\n","import moment from \"moment\";\n\nimport { DEFAULT_FORM_VALUES } from \"constants/projects\";\nimport { HOUR_IN_MINUTES } from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => {\n    if (!initialData) {\n        return {\n            ...DEFAULT_FORM_VALUES,\n        };\n    }\n    return Object.keys(DEFAULT_FORM_VALUES).reduce((acc, key) => {\n        acc[key] = initialData[key];\n        return acc;\n    }, {});\n};\n\nexport const formatTime = time => {\n    const durationMin = moment.duration(time).asMinutes();\n    return durationMin < HOUR_IN_MINUTES\n        ? `${durationMin}m`\n        : `${moment.duration(time).hours()}h ${moment\n              .duration(time)\n              .minutes()}m`;\n};\n\nexport const getDate = date => moment(date).format(\"DD.MM.YYYY\");\n\nexport const getTime = date => moment(date).format(\"hh:mm\");\n","import styled from \"styled-components\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TableContainer } from \"@material-ui/core\";\n\nexport const StyledSup = styled.sup`\n    padding-left: ${({ theme }) => theme.spacing(1)}px;\n    color: ${({ theme }) => theme.palette.text.secondary};\n`;\n\nexport const StyledAvatar = styled(Avatar)``;\n\nexport const StyledTableContainer = styled(TableContainer)`\n    & .MuiAvatar-root {\n        background-color: ${({ theme }) => theme.palette.logo};\n        cursor: pointer;\n        width: ${({ theme }) => theme.spacing(4)}px;\n        height: ${({ theme }) => theme.spacing(4)}px;\n        ${({ theme }) => theme.typography.body1}\n        text-transform: uppercase;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Typography,\n    Tooltip,\n    Box,\n    TableSortLabel,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport { AvatarGroup } from \"@material-ui/lab\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/projects\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\nimport ColoredName from \"components/ColoredName\";\n\n// Utils\nimport { formatTime, getDate, getTime } from \"utils/projectUtils\";\nimport { getUserAvatar } from \"utils/developersUtils\";\n\n// Styles\nimport { StyledAvatar, StyledTableContainer } from \"./style\";\n\nexport default function ({ projectList, setEditingProjectData, sort, onSort }) {\n    return (\n        <StyledTableContainer>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(({ name, isDisabled }) => (\n                            <TableCell key={name}>\n                                <TableSortLabel\n                                    disabled={isDisabled}\n                                    active={sort.field === name}\n                                    direction={sort.type || \"asc\"}\n                                    onClick={onSort(name)}\n                                >\n                                    {name}\n                                </TableSortLabel>\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projectList.length ? (\n                        projectList.map(project => (\n                            <TableRow\n                                hover\n                                key={project.id}\n                                onClick={() => setEditingProjectData(project)}\n                                disabled={\"inactive\" === project?.status}\n                            >\n                                <TableCell>\n                                    <Typography variant=\"caption\">\n                                        {getDate(project.created_at)}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography\n                                        variant=\"caption\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {getTime(project.updated_at)}\n                                    </Typography>{\" \"}\n                                    <Typography variant=\"caption\">\n                                        {getDate(project.updated_at)}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <ColoredName\n                                        color={project.color}\n                                        size={15}\n                                        text={project.name}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <AvatarGroup>\n                                        {project.users.map(user => (\n                                            <Tooltip\n                                                title={`${user.firstname} ${user.lastname}`}\n                                                placement=\"top\"\n                                                key={`title-${user.firstname} ${user.lastname}`}\n                                            >\n                                                <StyledAvatar\n                                                    src={getUserAvatar(\n                                                        user.avatar\n                                                    )}\n                                                    key={`avatar-${user.firstname} ${user.lastname}`}\n                                                >\n                                                    {`${\n                                                        user?.firstname[0] || \"\"\n                                                    }${\n                                                        user?.lastname[0] || \"\"\n                                                    }`}\n                                                </StyledAvatar>\n                                            </Tooltip>\n                                        ))}\n                                    </AvatarGroup>\n                                </TableCell>\n                                <TableCell>{project.type}</TableCell>\n                                <StyledTableCell>\n                                    {formatTime(project.total_log)}\n                                </StyledTableCell>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box p={3} component=\"td\">\n                                {\"Empty\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </StyledTableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\n//UI\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserMultiSelect({ userList, onChange, values, id }) {\n    const getOptionLabel = option => `${option.firstname} ${option.lastname}`;\n\n    const handleChange = (e, data) => {\n        onChange(\n            id,\n            data.map(item => item.id)\n        );\n    };\n\n    const getSelectedOptions = () => {\n        const idSet = new Set(values);\n        return userList.filter(item => idSet.has(item.id));\n    };\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id={id}\n                options={userList}\n                getOptionLabel={getOptionLabel}\n                value={getSelectedOptions()}\n                filterSelectedOptions\n                onChange={handleChange}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select developers\"\n                    />\n                )}\n            />\n        </>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Grid,\n    FormLabel,\n    Typography,\n} from \"@material-ui/core\";\n\nfunction TypeSelector({ value, projectTypes, onChange, error }) {\n    return (\n        <RadioGroup label=\"Type\" name=\"type\" value={value} onChange={onChange}>\n            <FormLabel error={!!error}>\n                <Typography variant=\"body2\">{\"Type *\"}</Typography>\n            </FormLabel>\n            <Grid container wrap=\"nowrap\">\n                {projectTypes.map(item => (\n                    <FormControlLabel\n                        key={`project-type-${item}`}\n                        value={item}\n                        control={<Radio error={error} color={\"primary\"} />}\n                        label={item}\n                    />\n                ))}\n            </Grid>\n        </RadioGroup>\n    );\n}\n\nexport default TypeSelector;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nexport const ListItems = styled.div(\n    ({ isActive, color }) => `\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      background: ${color || \"#FAF7F7\"};\n      border-width: 2px;\n      border: 4px solid ${isActive ? \"#747474\" : \"#fff\"};\n      box-sizing: border-box;\n      cursor: pointer;\n      transition: all linear 0.2s;\n`\n);\n\nexport const CustomPicker = styled.div`\n    img {\n        cursor: pointer;\n    }\n`;\n\nexport const CustomPickerInput = styled.input`\n    position: absolute;\n    width: 0;\n    height: 0;\n    opacity: 0;\n    left: 50%;\n    bottom: 0;\n`;\n","// Core\nimport React, { useCallback } from \"react\";\nimport throttle from \"lodash.throttle\";\n\n// Styles\nimport { Wrapper, ListItems, CustomPickerInput, CustomPicker } from \"./styles\";\n\n// Icons\nimport paint from \"./paint.svg\";\n\nconst defaultColors = [\n    null,\n    \"#2196F3\",\n    \"#f44336\",\n    \"#9C27B0\",\n    \"#3F51B5\",\n    \"#4CAF50\",\n    \"#FFEB3B\",\n    \"#FFC107\",\n    \"#FF5722\",\n    \"#795548\",\n];\n\nconst ColorPicker = ({\n    colors = [...defaultColors],\n    onChange,\n    activeColor,\n}) => {\n    const onChangeThrottle = throttle(val => {\n        onChange(val);\n    }, 200);\n\n    const onChangeColor = useCallback(\n        e => {\n            onChangeThrottle(e.currentTarget.value);\n        },\n        [onChangeThrottle]\n    );\n\n    let customColors = colors.concat([]);\n\n    if (typeof activeColor === \"string\" && !colors.includes(activeColor)) {\n        customColors.pop();\n\n        customColors.push(activeColor);\n    }\n\n    return (\n        <Wrapper>\n            {customColors.map(color => (\n                <ListItems\n                    isActive={activeColor === color}\n                    key={color}\n                    color={color}\n                    onClick={() => onChange(color)}\n                />\n            ))}\n            <CustomPicker>\n                <label htmlFor=\"colorPicker\">\n                    <img\n                        src={paint}\n                        width={30}\n                        height={30}\n                        alt=\"color picker icon\"\n                    />\n                </label>\n                <CustomPickerInput\n                    id=\"colorPicker\"\n                    type=\"color\"\n                    value={activeColor || \"#000\"}\n                    onChange={onChangeColor}\n                />\n            </CustomPicker>\n        </Wrapper>\n    );\n};\n\nexport default ColorPicker;\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGridContainer = styled(Grid)`\n    & .MuiGrid-root {\n        margin-bottom: 1em;\n    }\n`;\n","// Core\nimport React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { string, object, mixed } from \"yup\";\n\n// UI\nimport { TextField, Grid, Box } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormDialog from \"components/FormDialog\";\nimport UserMultiSelect from \"../UserMultiSelect\";\nimport TypeSelector from \"../TypeSelector\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport ColorPicker from \"components/ColorPicker\";\n\n// Styles\nimport { StyledGridContainer } from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/projectUtils\";\n\n// Constants\n\nlet schema = object().shape({\n    alias: string().required(),\n    name: string().required(),\n    descriptions: string().required(),\n    type: string().required(),\n    color: mixed(object(), string()),\n});\n\nexport default function LogForm({\n    open,\n    onClose,\n    userList,\n    projectTypes,\n    handleSubmit,\n    initialData,\n    handleDeleteProject,\n    onGetProjectUserList,\n}) {\n    const initialValues = getInitialFormValues(initialData);\n\n    const formik = useFormik({\n        initialValues,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validationSchema: schema,\n        onSubmit: (data, { resetForm }) => {\n            handleSubmit(data, initialData?.id).then(() => {\n                resetForm(getInitialFormValues());\n            });\n        },\n    });\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        onClose();\n    };\n\n    const onColorChange = useCallback(\n        val => formik.setFieldValue(\"color\", val),\n        [formik]\n    );\n\n    return (\n        <FormDialog open={open} handleClose={onClose} title=\"Project:\">\n            <StyledGridContainer>\n                <Grid container>\n                    <Grid item>\n                        <Box mr={1}>\n                            <TextField\n                                required\n                                error={!!formik.errors.name}\n                                id=\"name\"\n                                label=\"Project name\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.name}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box ml={1}>\n                            <TextField\n                                required\n                                error={!!formik.errors.alias}\n                                id=\"alias\"\n                                label=\"Alias\"\n                                onChange={formik.handleChange}\n                                defaultValue={formik.values.alias}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item xs>\n                    <TextField\n                        required\n                        error={!!formik.errors.descriptions}\n                        id=\"descriptions\"\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        fullWidth\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <UserMultiSelect\n                        onChange={formik.setFieldValue}\n                        onGetProjectUserList={onGetProjectUserList}\n                        values={formik.values.users}\n                        userList={userList}\n                        id={\"users\"}\n                    />\n                </Grid>\n                <Grid container>\n                    <TypeSelector\n                        value={formik.values.type}\n                        error={formik.errors.type}\n                        projectTypes={projectTypes}\n                        onChange={formik.handleChange}\n                    />\n                </Grid>\n                <Grid>\n                    <ColorPicker\n                        activeColor={formik.values.color}\n                        onChange={onColorChange}\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={() => handleDeleteProject(initialData?.id)}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onCancel} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"success\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </StyledGridContainer>\n        </FormDialog>\n    );\n}\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const StyledGrid = styled(Grid)`\n    ${({ theme }) => `\n    margin-top: ${theme.spacing(4)}px;\n    margin-bottom: ${theme.spacing(2)}px;\n`}\n`;\n","export const TABLE_HEADERS = [\n    \"id\",\n    \"Date\",\n    \"Week\",\n    \"Developers\",\n    \"Project names\",\n    \"\",\n];\n","import styled from \"styled-components\";\n\nexport const StyledSup = styled.sup`\n    padding-left: ${({ theme }) => theme.spacing(1)}px;\n    color: ${({ theme }) => theme.palette.text.secondary};\n`;\n\nexport const StyledContainer = styled.div`\n    tr > th:last-child,\n    tr > td:last-child {\n        width: 60px;\n        text-align: center;\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Box,\n    Tooltip,\n    IconButton,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/reportHistory\";\nimport { StyledTableCell } from \"components/TableCell/styles\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nexport default function ({ historyItems, userList, projectList, onDownload }) {\n    const getDatesLabel = ({ from_date, to_date }) => {\n        if (from_date && to_date) {\n            return `${from_date} - ${to_date}`;\n        }\n    };\n\n    const concatUserNames = ({ users }) =>\n        userList\n            .reduce((acc, item) => {\n                if (users?.includes(String(item.id))) {\n                    acc.push(`${item.firstname} ${item.lastname}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const concatProjectNames = ({ projects }) =>\n        projectList\n            .reduce((acc, item) => {\n                if (projects?.includes(String(item.id))) {\n                    acc.push(`${item.name}`);\n                }\n                return acc;\n            }, [])\n            .join(\", \");\n\n    const onClick = ({ from_date, to_date, week, users, projects }) => {\n        onDownload({\n            from_date,\n            to_date,\n            week,\n            users,\n            projects,\n            \"export-from-history\": true,\n        });\n    };\n\n    return (\n        <StyledContainer>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {historyItems?.length ? (\n                        historyItems.map(item => (\n                            <TableRow hover key={item.id}>\n                                <StyledTableCell>{item.id}</StyledTableCell>\n                                <StyledTableCell>\n                                    {getDatesLabel(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {item.filter?.week?.join(\", \")}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatUserNames(item.filter)}\n                                </StyledTableCell>\n                                <StyledTableCell>\n                                    {concatProjectNames(item.filter)}\n                                </StyledTableCell>\n                                <Box\n                                    component={StyledTableCell}\n                                    p={0}\n                                    display=\"flex\"\n                                    justifyContent=\"center\"\n                                    alignItems=\"center\"\n                                    minWidth=\"50px\"\n                                >\n                                    <Tooltip title=\"Download\">\n                                        <IconButton\n                                            onClick={() => onClick(item.filter)}\n                                        >\n                                            <GetAppIcon\n                                                color=\"primary\"\n                                                size=\"small\"\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Box>\n                            </TableRow>\n                        ))\n                    ) : (\n                        <TableRow>\n                            <Box p={3} component=\"td\">\n                                {\"Empty\"}\n                            </Box>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </StyledContainer>\n    );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nfunction getWeeksOptions(weeksCount) {\n    return Array.from({ length: weeksCount }).map((_, index) =>\n        String(index + 1)\n    );\n}\n\nexport default function ({ setWeek, selectedWeek }) {\n    const currentWeek = moment().week();\n\n    const [weeksOptions] = useState(getWeeksOptions(currentWeek));\n\n    const changeWeek = (e, value) => {\n        setWeek(value);\n    };\n\n    const value = selectedWeek && String(selectedWeek);\n\n    return (\n        <Autocomplete\n            value={value}\n            options={weeksOptions}\n            onChange={changeWeek}\n            closeIcon={null}\n            renderInput={params => (\n                <TextField {...params} label=\"Week number\" />\n            )}\n        />\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const StyledButton = styled(({ isActive, hasLogs, ...otherProps }) => (\n    <Button {...otherProps} />\n))`\n    margin-right: ${({ theme }) => theme.spacing(1)}px;\n    margin-bottom: ${({ theme }) => theme.spacing(1)}px;\n    background-color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.primary.main;\n        if (hasLogs) return theme.palette.success.main;\n        return \"transparent\";\n    }};\n    color: ${({ isActive, hasLogs, theme }) => {\n        if (isActive) return theme.palette.text.primary;\n        if (hasLogs) return theme.palette.text.secondary;\n        return theme.palette.text.secondary;\n    }};\n    border: none;\n`;\n","import moment from \"moment\";\nimport {\n    FULL_DATE_FORMAT,\n    TIME_FORMAT,\n    MONDAY,\n    SUNDAY,\n    HOUR_IN_MINUTES,\n} from \"constants/dateFormats\";\n\nexport const getInitialFormValues = initialData => ({\n    date: initialData\n        ? moment(initialData.date, FULL_DATE_FORMAT).format(FULL_DATE_FORMAT)\n        : \"\",\n    descriptions: initialData ? initialData.descriptions : \"\",\n    from_time: initialData\n        ? moment(initialData[\"from_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    to_time: initialData\n        ? moment(initialData[\"to_time\"], TIME_FORMAT).format(TIME_FORMAT)\n        : moment(\"00:00\", TIME_FORMAT).format(TIME_FORMAT),\n    project_id: initialData ? initialData[\"project_id\"] : 0,\n    log_type_id: initialData ? initialData[\"log_type_id\"] : 0,\n});\n\nexport const getTotalTime = durations => {\n    if (!durations.length) return \"0\";\n    const totalDurations = durations\n        .slice(1)\n        .reduce(\n            (prev, cur) => moment.duration(cur.total).add(prev),\n            moment.duration(durations[0].total)\n        );\n\n    const hours = Math.floor(totalDurations.clone().asHours());\n    const minutes = Math.floor(totalDurations.clone().minutes());\n    if (!hours) {\n        return `${minutes} minutes`;\n    }\n    return `${hours}h ${minutes}m`;\n};\n\nexport const getParametersForLogs = selectedWeek => ({\n    from_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(MONDAY)\n        .format(FULL_DATE_FORMAT),\n    to_date: moment()\n        .isoWeek(selectedWeek)\n        .isoWeekday(SUNDAY)\n        .format(FULL_DATE_FORMAT),\n});\n\nexport const getStartOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).startOf(\"isoWeek\");\n\nexport const getEndOfWeek = weekNumber =>\n    moment().isoWeek(weekNumber).endOf(\"isoWeek\");\n\nexport const getMonthNameByWeek = weekNumber =>\n    moment().set(\"month\", moment().isoWeek(weekNumber).month()).format(\"MMMM\");\n\nexport const formatTimeDuration = time => {\n    const durationInMinutes = moment.duration(time).asMinutes();\n    if (durationInMinutes < HOUR_IN_MINUTES) {\n        return `${durationInMinutes} min`;\n    }\n    return `${moment.duration(time).hours()}h ${moment\n        .duration(time)\n        .minutes()}m`;\n};\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DAY_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledButton } from \"./styles\";\n\n// Utils\nimport { getMonthNameByWeek } from \"utils/developerReportUtils\";\n\nfunction checkLogDate(logs, date) {\n    return logs.some(item =>\n        moment(item.date, FULL_DATE_FORMAT).isSame(\n            moment(date, FULL_DATE_FORMAT),\n            \"day\"\n        )\n    );\n}\n\nexport default function ({ selectedWeek, logs, setDay, selectedDay }) {\n    const [weekDates, setWeekDates] = useState([]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setWeekDates([]);\n            return;\n        }\n        const getWeekDates = weekNumber => {\n            return Array.from({ length: 7 }).map((_, index) =>\n                moment()\n                    .isoWeek(weekNumber)\n                    .isoWeekday(index + 1)\n            );\n        };\n\n        setWeekDates(getWeekDates(selectedWeek));\n    }, [selectedWeek]);\n\n    const formatDate = day => moment(day).format(DAY_FORMAT);\n    const isActive = day => moment(day).isSame(selectedDay, \"day\");\n    return (\n        selectedWeek && (\n            <Box display=\"flex\" flexWrap=\"wrap\">\n                {weekDates.map(day => {\n                    const hasLogs = checkLogDate(logs, day);\n                    return (\n                        <StyledButton\n                            size=\"large\"\n                            onClick={() => setDay(day)}\n                            isActive={isActive(day)}\n                            hasLogs={hasLogs}\n                            variant=\"contained\"\n                            key={`date-${day}`}\n                        >\n                            {formatDate(day)}\n                        </StyledButton>\n                    );\n                })}\n                <Box width=\"100%\" ml={1}>\n                    <Typography variant=\"subtitle1\">\n                        {getMonthNameByWeek(selectedWeek)}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nexport const StyledChip = styled(({ type, ...restProps }) => (\n    <Chip {...restProps} />\n))`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n","import React from \"react\";\nimport { StyledChip } from \"./style.js\";\n\nfunction Chip(props) {\n    return <StyledChip {...props} />;\n}\n\nexport default Chip;\n","export const TABLE_HEADERS = [\n    \"№\",\n    \"Date\",\n    \"Project Name\",\n    \"Type\",\n    \"From time\",\n    \"To time\",\n    \"Work Time\",\n    \"Status\",\n];\n\nexport const validationErrorMessages = {\n    timeInterval: \"Time interval is invalid\",\n    project: \"Project field is required\",\n    log: \"Log type is required\",\n    descriptions: \"Description field is required\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TableCell, TableContainer } from \"@material-ui/core\";\n\nexport const StyledTableCell = styled(({ status, ...otherProps }) => (\n    <TableCell {...otherProps} />\n))`\n    color: ${({ type, theme }) => theme.palette[type]?.main};\n`;\n\nexport const StyledTableContainer = styled(TableContainer)`\n    tr > th:first-child,\n    tr > td:first-child {\n        padding: 16px 3px;\n        text-align: center;\n    }\n    tr > th:last-child,\n    tr > td:last-child {\n        width: 70px;\n    }\n    tr > td:last-child {\n        text-align: center;\n    }\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport {\n    TableHead,\n    TableBody,\n    Table,\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport TableRow from \"components/TableRow\";\nimport TableCell from \"components/TableCell\";\nimport Chip from \"components/Chip\";\nimport StyledPaper from \"components/StyledPaper\";\nimport ColoredName from \"components/ColoredName\";\n\n// Constants\nimport { TABLE_HEADERS } from \"constants/developerReport\";\nimport { FULL_DATE_SHORT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Utils\nimport { getTotalTime, formatTimeDuration } from \"utils/developerReportUtils\";\n\n// Styles\nimport { StyledTableCell, StyledTableContainer } from \"./style\";\n\nexport default function ({\n    logList,\n    handleEditLog,\n    selectedDay,\n    selectedWeek,\n    projects,\n    logTypes,\n    setTotalWeekTime,\n    setTotalDayTime,\n}) {\n    const [filteredLogs, setFilteredLogs] = React.useState([]);\n\n    React.useEffect(() => {\n        let logs = logList;\n        if (selectedDay) {\n            logs = logList.filter(item =>\n                moment(item.date, FULL_DATE_FORMAT).isSame(\n                    moment(selectedDay),\n                    \"day\"\n                )\n            );\n        }\n        if (!selectedWeek) {\n            logs = [];\n        }\n        setFilteredLogs(logs);\n    }, [logList, selectedDay, selectedWeek]);\n\n    React.useEffect(() => {\n        setTotalWeekTime(getTotalTime(logList));\n    }, [logList, setTotalWeekTime]);\n\n    React.useEffect(() => {\n        setTotalDayTime(getTotalTime(filteredLogs));\n    }, [filteredLogs, setTotalDayTime]);\n\n    const editLog = log => {\n        const validLog = { ...log, project_id: log.project_id?.id };\n\n        handleEditLog(validLog);\n    };\n\n    const getLogTypeEnum = id => logTypes.find(item => item.id === id)?.type;\n    const getType = status =>\n        status === \"approved\"\n            ? \"success\"\n            : status === \"declined\"\n            ? \"error\"\n            : \"default\";\n\n    return (\n        <StyledTableContainer component={StyledPaper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {TABLE_HEADERS.map(item => (\n                            <TableCell key={item}>{item}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {filteredLogs.length\n                        ? filteredLogs.map((log, i) => (\n                              <TableRow\n                                  hover\n                                  key={log.id}\n                                  onClick={() => editLog(log)}\n                              >\n                                  <TableCell>{i + 1}</TableCell>\n                                  <TableCell>\n                                      {moment(\n                                          log.date,\n                                          FULL_DATE_FORMAT\n                                      ).format(FULL_DATE_SHORT)}\n                                  </TableCell>\n                                  <TableCell>\n                                      <ColoredName\n                                          text={log.project_id?.name}\n                                          color={log.project_id?.color}\n                                          fontSize={16}\n                                      />{\" \"}\n                                  </TableCell>\n                                  <TableCell>\n                                      {getLogTypeEnum(log.log_type_id)}\n                                  </TableCell>\n                                  <TableCell>{log.from_time}</TableCell>\n                                  <TableCell>{log.to_time}</TableCell>\n                                  <TableCell>\n                                      {formatTimeDuration(log.total)}\n                                  </TableCell>\n                                  <StyledTableCell>\n                                      <Chip\n                                          type={getType(log.status)}\n                                          label={log.status}\n                                      />\n                                  </StyledTableCell>\n                              </TableRow>\n                          ))\n                        : null}\n                </TableBody>\n            </Table>\n            {!filteredLogs.length && (\n                <Typography variant=\"subtitle1\">\n                    <Box p={2}>{\"You don't have any logs\"}</Box>\n                </Typography>\n            )}\n        </StyledTableContainer>\n    );\n}\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\n// UI\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n// Constants\nimport { TIME_FORMAT } from \"constants/dateFormats\";\n\nexport default function Developers({\n    value,\n    id,\n    label,\n    onChange,\n    error,\n    setTouched,\n}) {\n    const handleChange = momentTime => {\n        onChange(id, momentTime);\n        setTouched(id);\n    };\n\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardTimePicker\n                    ampm={false}\n                    id={id}\n                    error={!!error}\n                    label={label}\n                    value={moment(value, TIME_FORMAT)}\n                    onChange={handleChange}\n                    helperText={error}\n                />\n            </MuiPickersUtilsProvider>\n        </>\n    );\n}\n","import styled from \"styled-components\";\nimport { FormControl } from \"@material-ui/core\";\n\nexport const StyledFormControl = styled(FormControl)`\n    min-width: 140px;\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\n// Styles\nimport { StyledFormControl } from \"./styles\";\n\nfunction createOptions(data, opts) {\n    return data.map(item => ({\n        value: item[opts.value],\n        label: item[opts.label],\n    }));\n}\n\nexport default function Selector({\n    onChange,\n    data,\n    name,\n    id,\n    value,\n    labelKey,\n    valueKey,\n    placeholder,\n    error,\n}) {\n    const [options] = React.useState(\n        createOptions(data, { label: labelKey, value: valueKey })\n    );\n\n    const handleChange = e => {\n        onChange(id, e.target.value);\n    };\n\n    return (\n        <StyledFormControl>\n            <InputLabel error={Boolean(error)}>{placeholder}</InputLabel>\n            <Select value={value || \"\"} onChange={handleChange}>\n                {options.map(item => (\n                    <MenuItem key={`${id}-${item.value}`} value={item.value}>\n                        {item.label}\n                    </MenuItem>\n                ))}\n            </Select>\n        </StyledFormControl>\n    );\n}\n","// core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function LogInfoHeader({ workingDay, selectedWeek }) {\n    return (\n        <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box flex={1} display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\" noWrap>\n                    {\"Working day:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        noWrap\n                        paragraph\n                    >\n                        {workingDay}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box flex={1} display=\"flex\" pl={1}>\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Week: \"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                        paragraph\n                    >\n                        {selectedWeek}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => {\n    return {\n        root: {\n            \"& .MuiGrid-root\": {\n                marginBottom: theme.spacing(2),\n            },\n            \"& .MuiFormLabel-root\": {\n                zIndex: 0,\n            },\n        },\n    };\n});\n\nexport default useStyles;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport { TextField, Grid } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TimePicker from \"components/TimePicker\";\nimport FormDialog from \"components/FormDialog\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport Box from \"@material-ui/core/Box\";\nimport Selector from \"../Selector\";\nimport LogInfoHeader from \"../LogInfoHeader\";\n\n// Styles\nimport useStyles from \"./styles\";\n\n// Utils\nimport { getInitialFormValues } from \"utils/developerReportUtils\";\n\n// Constants\nimport { validationErrorMessages } from \"constants/developerReport\";\nimport { FULL_DATE_FORMAT, TIME_FORMAT } from \"constants/dateFormats\";\n\nfunction validateTimeRange(from, to) {\n    return moment(from, TIME_FORMAT).isBefore(moment(to, TIME_FORMAT));\n}\n\nfunction validate(values) {\n    const errors = {};\n    if (!validateTimeRange(values.from_time, values.to_time)) {\n        errors.from_time = validationErrorMessages.timeInterval;\n        errors.to_time = validationErrorMessages.timeInterval;\n    }\n    if (!values.project_id) {\n        errors.project_id = validationErrorMessages.project;\n    }\n    if (!values.log_type_id) {\n        errors.log_type_id = validationErrorMessages.log;\n    }\n    if (!values.descriptions) {\n        errors.descriptions = validationErrorMessages.descriptions;\n    }\n    return errors;\n}\n\nexport default function LogForm({\n    open,\n    handleClose,\n    projects,\n    logTypes,\n    submitForm,\n    initialData,\n    deleteLog,\n    selectedDay,\n    selectedWeek,\n}) {\n    const classes = useStyles();\n\n    const initialValues = getInitialFormValues(initialData);\n\n    if (!initialData) {\n        initialValues.date = moment(selectedDay).format(FULL_DATE_FORMAT);\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validate,\n        enableReinitialize: true,\n        validateOnChange: false,\n        validateOnBlur: false,\n        onSubmit: (data, { resetForm }) => {\n            submitForm(getInitialFormValues(data), initialData?.id).then(() =>\n                resetForm(getInitialFormValues())\n            );\n        },\n    });\n\n    const handleDeleteLog = async () => {\n        await deleteLog(initialData.id);\n        handleClose();\n    };\n\n    const onSetTouched = id => {\n        formik.setTouched({\n            ...formik.touched,\n            [id]: true,\n        });\n    };\n\n    const workingDay = moment(formik.values.date, FULL_DATE_FORMAT).format(\n        \"DD MMMM\"\n    );\n\n    const onCancel = () => {\n        formik.resetForm(getInitialFormValues());\n        handleClose();\n    };\n\n    return (\n        <FormDialog open={open} handleClose={handleClose} title=\"Work Item:\">\n            <LogInfoHeader\n                workingDay={workingDay}\n                selectedWeek={selectedWeek}\n            />\n            <form autoComplete=\"off\">\n                <Grid container className={classes.root}>\n                    <Grid item xs={12} sm={12}>\n                        <Grid container wrap=\"nowrap\">\n                            <Box mr={1}>\n                                <TimePicker\n                                    id=\"from_time\"\n                                    label=\"Start time *\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.from_time\n                                    }\n                                    value={formik.values[\"from_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                            <Box ml={1}>\n                                <TimePicker\n                                    margin=\"normal\"\n                                    id=\"to_time\"\n                                    error={\n                                        formik.touched.to_time &&\n                                        formik.touched.from_time &&\n                                        formik.errors.to_time\n                                    }\n                                    label=\"End time *\"\n                                    value={formik.values[\"to_time\"]}\n                                    onChange={formik.setFieldValue}\n                                    setTouched={onSetTouched}\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"space-between\">\n                        <Selector\n                            data={logTypes}\n                            placeholder=\"Log type *\"\n                            labelKey=\"type\"\n                            valueKey=\"id\"\n                            error={formik.errors.log_type_id}\n                            onChange={formik.setFieldValue}\n                            id=\"log_type_id\"\n                            value={formik.values[\"log_type_id\"]}\n                        />\n                        <Selector\n                            placeholder=\"Project name *\"\n                            data={projects}\n                            labelKey=\"name\"\n                            valueKey=\"id\"\n                            error={formik.errors.project_id}\n                            onChange={formik.setFieldValue}\n                            id=\"project_id\"\n                            value={formik.values[\"project_id\"]}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"descriptions\"\n                        error={!!formik.errors.descriptions}\n                        fullWidth\n                        defaultValue={formik.values.descriptions}\n                        onChange={formik.handleChange}\n                        label=\"Description\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <DialogActions>\n                    {initialData && (\n                        <DialogActionButton\n                            onClick={handleDeleteLog}\n                            type=\"error\"\n                        >\n                            Delete\n                        </DialogActionButton>\n                    )}\n                    <DialogActionButton onClick={onCancel} type=\"default\">\n                        Cancel\n                    </DialogActionButton>\n                    <DialogActionButton\n                        onClick={formik.handleSubmit}\n                        type=\"success\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </DialogActionButton>\n                </DialogActions>\n            </form>\n        </FormDialog>\n    );\n}\n","// Core\nimport React from \"react\";\n\n// UI\nimport { Box, Typography } from \"@material-ui/core\";\n\n// Utils\nimport { getStartOfWeek, getEndOfWeek } from \"utils/developerReportUtils\";\n\n// constants\nimport { DATE_AND_MONTH } from \"constants/dateFormats\";\n\nexport default function TotalTimeInfo({\n    totalDayTime,\n    totalWeekTime,\n    selectedWeek,\n}) {\n    const getDateIntervalLabel = selectedWeek =>\n        `From ${getStartOfWeek(selectedWeek).format(\n            DATE_AND_MONTH\n        )} to ${getEndOfWeek(selectedWeek).format(DATE_AND_MONTH)}`;\n\n    return (\n        <>\n            {selectedWeek && (\n                <Box display=\"flex\">\n                    <Box pl={1}>\n                        <Typography\n                            align=\"right\"\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"textPrimary\"\n                        >\n                            <b>{\"From \"}</b>\n                            {getStartOfWeek(selectedWeek).format(\n                                DATE_AND_MONTH\n                            )}\n                            <b>{\" to \"}</b>\n                            {getEndOfWeek(selectedWeek).format(DATE_AND_MONTH)}\n                        </Typography>\n                    </Box>\n                </Box>\n            )}\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Total week work time:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalWeekTime}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box display=\"flex\">\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                    {\"Total day work time:\"}\n                </Typography>\n                <Box pl={1}>\n                    <Typography\n                        align=\"right\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"textPrimary\"\n                    >\n                        {totalDayTime}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n}\n","import { Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transform-origin: bottom left;\n    padding: 20px;\n    width: 90%;\n    max-width: 320px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledContainer = styled(Paper)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 20px;\n    & form {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    ${({ theme }) => `\n    text-decoration: none;\n    color: ${theme.palette.primary.dark};\n    &.active {\n        color: ${theme.palette.grey[\"700\"]};\n    }\n  `}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ListItem } from \"@material-ui/core\";\n\nexport const StyledListItem = styled(({ active, ...restProps }) => (\n    <ListItem {...restProps} />\n))`\n    justify-content: space-between;\n    background-color: ${({ active, theme }) =>\n        active ? theme?.palette?.info.light : \"transparent\"};\n    cursor: pointer;\n    &:hover {\n        color: white;\n        background-color: ${({ theme }) => theme?.palette?.info.light};\n    }\n`;\n","// Core\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\n// UI\nimport {\n    Box,\n    IconButton,\n    TextField,\n    Typography,\n    Paper,\n    Divider,\n} from \"@material-ui/core\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport DialogActionButton from \"components/DialogActionButton\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\n//style\n\nimport { StyledListItem } from \"./style\";\n\nfunction LogSettingsForm({ logTypes, onSubmit }) {\n    const [editingType, setEditingType] = useState(null);\n\n    const formik = useFormik({\n        initialValues: {\n            type: editingType?.type || \"\",\n        },\n        enableReinitialize: true,\n        onSubmit: async (data, { resetForm }) => {\n            try {\n                editingType?.id\n                    ? await onSubmit(\"update\", data, editingType.id)\n                    : await onSubmit(\"create\", data);\n            } finally {\n                setEditingType(null);\n                resetForm();\n            }\n        },\n    });\n\n    const onCancel = () => {\n        setEditingType(null);\n        formik.resetForm({ type: \"\" });\n    };\n\n    const onDelete = id => {\n        onSubmit(\"delete\", {}, id);\n    };\n\n    return (\n        <>\n            <Box maxWidth=\"400px\" p={1} mt={2} mx=\"auto\" component={Paper}>\n                <Box p={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Log Types\n                    </Typography>\n                </Box>\n                <Divider />\n                {logTypes.map(item => (\n                    <StyledListItem\n                        key={`list-item-${item.id}`}\n                        active={editingType?.id === item.id}\n                    >\n                        {item.type}\n                        <Box key={`box-${item.id}`}>\n                            <IconButton\n                                size=\"small\"\n                                key={`editButton-${item.id}`}\n                                onClick={() => setEditingType(item)}\n                            >\n                                <EditOutlinedIcon\n                                    key={`icon-edit--${item.id}`}\n                                    color=\"primary\"\n                                />\n                            </IconButton>\n                            <IconButton\n                                key={`deleteButton-${item.id}`}\n                                size=\"small\"\n                                onClick={() => onDelete(item.id)}\n                            >\n                                <DeleteOutlineIcon\n                                    key={`icon-delete-${item.id}`}\n                                    color=\"secondary\"\n                                />\n                            </IconButton>\n                        </Box>\n                    </StyledListItem>\n                ))}\n                <Divider />\n                <form>\n                    <Box px={1} pt={2}>\n                        <TextField\n                            id=\"type\"\n                            value={formik.values.type}\n                            error={formik.errors.descriptions}\n                            fullWidth\n                            size=\"small\"\n                            onChange={formik.handleChange}\n                            label={\n                                editingType ? \"Edit log type\" : \"New log type\"\n                            }\n                            variant=\"outlined\"\n                        />\n                    </Box>\n                    <Box\n                        p={2}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <DialogActionButton\n                            onClick={onCancel}\n                            type=\"primary\"\n                            size=\"small\"\n                        >\n                            Cancel\n                        </DialogActionButton>\n                        <DialogActionButton\n                            onClick={formik.handleSubmit}\n                            variant=\"contained\"\n                            disabled={formik.values.type.length < 2}\n                            type=\"success\"\n                            size=\"small\"\n                        >\n                            Save\n                        </DialogActionButton>\n                    </Box>\n                </form>\n            </Box>\n        </>\n    );\n}\n\nexport default LogSettingsForm;\n","import styled from \"styled-components\";\n\nexport const StyledProjectName = styled.b`\n    color: ${({ color = \"#000\" }) => color};\n`;\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// UI\nimport { Typography, CardContent, Box } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\n// Styles\nimport { StyledProjectName } from \"./styles\";\n\nconst messages = {\n    created: \"created project\",\n    updated: \"updated project\",\n    deleted: \"deleted project\",\n    added_user_to_project: \" added user to project\",\n    deleted_user_to_project: \" deleted user from project\",\n};\n\nfunction ProjectCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <StyledProjectName\n                    color={item.entity.color}\n                >{` ${item.entity.name}`}</StyledProjectName>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                {item.entity.descriptions}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Type: {item.entity.type}</i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\nimport { formatFromMinutes } from \"utils/developersUtils\";\n\nconst messages = {\n    created: \" created report on the project \",\n    updated: \" updated report on the project \",\n    deleted: \" deleted report on the project \",\n};\n\nfunction LogCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <b>{item.entity.project.name}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                {` ${item.entity.descriptions}`}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <b>{`From ${item.entity.from_time} to ${item.entity.to_time}; `}</b>\n                <b>{`Total time: ${formatFromMinutes(item.entity.total)} `}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Status: {item.entity.status}</i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>Log type: {item.entity.log_type_id}</i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default LogCard;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" created log type \",\n    updated: \" updated log type \",\n    deleted: \" deleted log type \",\n};\n\nfunction LogTypeCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <b>{item.entity.type}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default LogTypeCard;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" created user \",\n    updated: \" updated user \",\n    deleted: \" deleted user \",\n};\n\nfunction UserCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n                <b>{`${item.entity.firstname} ${item.entity.lastname} `}</b>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                {`${item.entity.email}`}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default UserCard;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Box, Typography, CardContent } from \"@material-ui/core\";\nimport { TIME_FORMAT, FULL_DATE_FORMAT } from \"constants/dateFormats\";\n\nconst messages = {\n    created: \" exported report\",\n    updated: \" updated report on the project \",\n    deleted: \" deleted report on the project \",\n};\n\nfunction ExportHistoryCard({ item }) {\n    return (\n        <Box component={CardContent} display=\"flex\" flexDirection=\"column\">\n            <Typography variant=\"body1\" gutterBottom>\n                <b>{`${item.author.firstname} ${item.author.lastname} `}</b>\n                {messages[item.event]}\n            </Typography>\n            {item.entity.filter?.week && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>Weeks: {item.entity.filter?.week?.join(\", \")}</i>\n                </Typography>\n            )}\n            {item.entity.filter?.from_date && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>\n                        Date:{\" \"}\n                        {`from ${item.entity.filter?.from_date} to ${item.entity.filter?.to_date}`}\n                    </i>\n                </Typography>\n            )}\n            {item.entity.filter?.users && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>User id: {item.entity.filter?.users.join(\", \")}</i>\n                </Typography>\n            )}\n            {item.entity.filter?.projects && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    <i>Project id: {item.entity.filter?.projects.join(\", \")}</i>\n                </Typography>\n            )}\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Created at:{\" \"}\n                    {moment(item.entity.created_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n                <i>\n                    Updated at:{\" \"}\n                    {moment(item.entity.updated_at).format(\n                        `${FULL_DATE_FORMAT} ${TIME_FORMAT}`\n                    )}\n                </i>\n            </Typography>\n        </Box>\n    );\n}\n\nexport default ExportHistoryCard;\n","import React from \"react\";\nimport ProjectCard from \"../ProjectCard\";\nimport LogCard from \"../LogCard\";\nimport LogTypeCard from \"../LogTypeCard\";\nimport UserCard from \"../UserCard\";\nimport ExportHistoryCard from \"../ExportHistoryCard\";\n\nfunction ActivityBlock({ item }) {\n    const getCard = type => {\n        switch (type) {\n            case \"Project\":\n                return <ProjectCard item={item} />;\n            case \"Log\":\n                return <LogCard item={item} />;\n            case \"LogType\":\n                return <LogTypeCard item={item} />;\n            case \"User\":\n                return <UserCard item={item} />;\n            case \"ExportHistory\":\n                return <ExportHistoryCard item={item} />;\n            default:\n                return type;\n        }\n    };\n\n    return getCard(item.model);\n}\n\nexport default ActivityBlock;\n","import React, { Fragment } from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport ActivityBlock from \"../ActivityBlock\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\n\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nfunction ActivitiesList({ activities, date }) {\n    const getIcon = type => {\n        switch (true) {\n            case type.includes(\"user\"):\n                return <PermIdentityIcon />;\n            case type.includes(\"export\"):\n                return <GetAppIcon />;\n            case type.includes(\"project\"):\n                return <BusinessCenterIcon />;\n            case type.includes(\"system\"):\n                return <SettingsIcon />;\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <Timeline align=\"alternate\">\n            <Typography\n                variant=\"h5\"\n                align=\"center\"\n                display=\"block\"\n                gutterBottom\n            >\n                {date}\n            </Typography>\n            {activities.map(type => (\n                <Fragment key={`fragment-${type.title}`}>\n                    <TimelineItem>\n                        <TimelineSeparator>\n                            <TimelineDot>{getIcon(type.title)}</TimelineDot>\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            {type.data.map((item, i) => {\n                                return (\n                                    <Fragment\n                                        key={`activity-frag-${item.tree_id}-${i}`}\n                                    >\n                                        <Divider\n                                            key={`activity-dot-${item.tree_id}-${i}`}\n                                        />\n                                        <ActivityBlock\n                                            key={`activity-item-${item.tree_id}-${i}`}\n                                            item={item}\n                                        />\n                                    </Fragment>\n                                );\n                            })}\n                        </TimelineContent>\n                    </TimelineItem>\n                </Fragment>\n            ))}\n        </Timeline>\n    );\n}\n\nexport default ActivitiesList;\n","import styled from \"styled-components\";\nimport { Popper, Button } from \"@material-ui/core\";\nexport const StyledPopper = styled(Popper)`\n    z-index: 1;\n`;\n\nexport const StyledButton = styled(Button)`\n    background-color: ${({ type, theme }) => theme.palette[type]?.main};\n    min-width: 90px;\n    min-height: 30px;\n    &:hover {\n        background-color: ${({ type, theme }) => theme.palette[type]?.light};\n    }\n`;\n","// Core\nimport React from \"react\";\n\n// UI\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\n// Styles\nimport { StyledButton } from \"./style\";\n\n// Constants\nimport { STATUS_COLORS } from \"constants/managerReports\";\n\nexport default function LogStatusHandler({ id, onUpdateLogStatus }) {\n    const getColor = status => STATUS_COLORS[status];\n\n    return (\n        <>\n            <ButtonGroup size=\"small\" variant=\"contained\">\n                <StyledButton\n                    disableElevation\n                    type={getColor(\"approved\")}\n                    onClick={() =>\n                        onUpdateLogStatus({\n                            id,\n                            status: \"approved\",\n                        })\n                    }\n                >\n                    approve\n                </StyledButton>\n                <StyledButton\n                    disableElevation\n                    type={getColor(\"declined\")}\n                    onClick={() =>\n                        onUpdateLogStatus({\n                            id,\n                            status: \"declined\",\n                        })\n                    }\n                >\n                    decline\n                </StyledButton>\n            </ButtonGroup>\n        </>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"@material-ui/core/Card\";\nimport { Typography } from \"@material-ui/core\";\nimport TextAreaAutosize from \"@material-ui/core/TextAreaAutosize\";\n\nexport const StyledItemCard = styled(Card)`\n    & .MuiAvatar-root {\n        width: 60px;\n        height: 60px;\n    }\n    & b {\n        font-size: 14px;\n    }\n`;\n\nexport const StyledTextArea = styled(({ error, ...props }) => (\n    <TextAreaAutosize {...props} />\n))`\n    padding: 18.5px 14px;\n    border-radius: 8px;\n    font: inherit;\n    font-size: 16px;\n    color: currentColor;\n    width: 100%;\n    border: 0;\n    height: 1.1876em;\n    margin: 0;\n    display: block;\n    background: none;\n    letter-spacing: inherit;\n    border: 1px solid\n        ${({ theme, error }) =>\n            error ? theme.palette.error.main : \"rgb(228 228 228)\"};\n    outline: none;\n    resize: none;\n    :focus {\n        border: 1px solid ${({ theme }) => theme.palette.primary.main};\n    }\n`;\n\nexport const StyledTypography = styled(Typography)`\n    font-size: 20px;\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useFormik } from \"formik\";\nimport { object, string } from \"yup\";\n\n// UI\nimport { Box, Typography, Paper } from \"@material-ui/core\";\nimport UserAvatar from \"../../../components/UserAvatar\";\nimport LogStatusHandler from \"../LogStatusHandler\";\n\n// Constants\nimport { FULL_DATE_FORMAT, DATE_FORMAT } from \"constants/dateFormats\";\nimport { validationErrorMessages } from \"../../../constants/developerReport\";\n\n// Utils\nimport { formatTimeDuration } from \"utils/managerReportsUtils\";\n\n// Styles\nimport { StyledTextArea, StyledTypography } from \"./style\";\n\nlet schema = object().shape({\n    descriptions: string().required(),\n});\n\nfunction InReviewItems({\n    onUpdateLog,\n    onUpdateLogStatus,\n    logTypes,\n    user_id,\n    project_id,\n    log_type_id,\n    date,\n    total,\n    descriptions,\n    status,\n    id,\n    from_time,\n    to_time,\n}) {\n    const getLogType = id => {\n        return logTypes.find(item => item.id === id)?.type;\n    };\n\n    function validate(values) {\n        const errors = {};\n        if (!values.descriptions) {\n            errors.descriptions = validationErrorMessages.descriptions;\n        }\n        return errors;\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            date,\n            descriptions,\n            from_time,\n            to_time,\n            project_id: project_id?.id,\n            log_type_id,\n        },\n        validate,\n        validationSchema: schema,\n        validateOnChange: false,\n        enableReinitialize: true,\n        onSubmit: (data, { resetForm }) => {\n            if (descriptions === data.descriptions) return;\n            onUpdateLog(data, id);\n        },\n    });\n\n    const onUpdateStatus = async (...param) => {\n        const errors = await formik.validateForm();\n        if (Object.keys(errors).length) return;\n\n        await formik.submitForm();\n        onUpdateLogStatus(...param);\n    };\n\n    return (\n        <>\n            <Box\n                display=\"flex\"\n                flexWrap=\"wrap\"\n                component={Paper}\n                marginBottom=\"10px\"\n                variant=\"outlined\"\n                py={1}\n                px={1}\n                borderRadius={8}\n            >\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"center\"\n                    flex={1}\n                    px={2}\n                    mb={2}\n                >\n                    <UserAvatar\n                        size={100}\n                        firstName={user_id.firstname}\n                        lastName={user_id.lastname}\n                        avatar={user_id.avatar}\n                    />\n\n                    <Box\n                        justifyContent=\"flex-start\"\n                        alignItems=\"center\"\n                        px={2}\n                        mb={2}\n                    >\n                        <Typography variant=\"h6\" noWrap py={2}>\n                            {`${user_id.firstname} ${user_id.lastname}`}\n                        </Typography>\n                    </Box>\n                </Box>\n\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    px={2}\n                    mb={2}\n                >\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Project: `}</b>\n                        {project_id.name}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Log type: `}</b>\n                        {getLogType(log_type_id)}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Week: `}</b>\n                        {moment(date, FULL_DATE_FORMAT).isoWeek()}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Day: `}</b>\n                        {moment(date, FULL_DATE_FORMAT).format(DATE_FORMAT)}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`Time spent: `}</b>\n                        {formatTimeDuration(total)}\n                    </StyledTypography>\n                    <StyledTypography align=\"left\" noWrap>\n                        <b>{`From `}</b>\n                        {from_time}\n                        <b>{` to `}</b>\n                        {to_time}\n                    </StyledTypography>\n                </Box>\n\n                <Box\n                    flex={4}\n                    px={2}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent={\n                        status === \"declined\" ? \"flex-start\" : \"space-between\"\n                    }\n                    minWidth=\"200px\"\n                >\n                    <Typography align=\"left\" variant=\"h6\" noWrap>\n                        Descriptions\n                    </Typography>\n                    <StyledTextArea\n                        id=\"descriptions\"\n                        onChange={function (e) {\n                            formik.setFieldValue(\n                                \"descriptions\",\n                                e.currentTarget.value\n                            );\n                        }}\n                        defaultValue={formik.values.descriptions}\n                        error={!!formik.errors.descriptions}\n                    />\n                    <Box\n                        pt={3}\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"flex-end\"\n                        width=\"100%\"\n                        flexWrap=\"wrap\"\n                    >\n                        {status !== \"declined\" && (\n                            <>\n                                <Box>\n                                    <LogStatusHandler\n                                        id={id}\n                                        onUpdateLogStatus={onUpdateStatus}\n                                    />\n                                </Box>\n                            </>\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n}\n\nexport default InReviewItems;\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Container, Box, Paper, Tabs, Tab } from \"@material-ui/core\";\nimport InReviewItem from \"./InReviewItem\";\nimport ReportPagination from \"components/ReportPagination\";\n\nconst STATUS_VALUES = [\"in review\", \"declined\"];\n\nfunction useStore() {\n    const { logStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        logTypes: logStore.logTypes,\n        onGetLogs: logStore.onGetLogs,\n        onUpdateLog: logStore.onUpdateLog,\n        setEmptyLogs: logStore.setEmptyLogs,\n        onUpdateLogStatus: logStore.onUpdateLogStatus,\n        onGetLogTypes: logStore.onGetLogTypes,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function LogItems() {\n    const {\n        logs,\n        onGetLogs,\n        page,\n        perPage,\n        onGetLogTypes,\n        logTypes,\n        onUpdateLog,\n        onUpdateLogStatus,\n        setEmptyLogs,\n    } = useStore();\n\n    const [selectedStatus, setValue] = useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const updateLogs = useCallback(() => {\n        onGetLogs({\n            page,\n            status: [STATUS_VALUES[selectedStatus]],\n            per_page: perPage,\n        });\n    }, [onGetLogs, page, perPage, selectedStatus]);\n\n    useEffect(() => {\n        onGetLogTypes();\n    }, [onGetLogTypes]);\n\n    useEffect(() => {\n        updateLogs();\n    }, [updateLogs]);\n\n    useEffect(() => {\n        return setEmptyLogs;\n    }, [setEmptyLogs]);\n\n    const updateLogStatus = async data => {\n        await onUpdateLogStatus(data);\n        updateLogs();\n    };\n\n    return (\n        <>\n            <Paper>\n                <Tabs\n                    value={selectedStatus}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"In review\" />\n                    <Tab label=\"Declined\" />\n                </Tabs>\n            </Paper>\n            <Container>\n                <Box my={2} margin=\"auto\" width=\"90%\" maxWidth=\"900px\">\n                    {logs.map(item => (\n                        <InReviewItem\n                            {...item}\n                            key={`log-item-${item.id}`}\n                            onUpdateLog={onUpdateLog}\n                            onUpdateLogStatus={updateLogStatus}\n                            logTypes={logTypes}\n                        />\n                    ))}\n                    {logs?.length > 0 && <ReportPagination />}\n                    {!logs?.length && (\n                        <Box my={2} textAlign=\"center\">\n                            You don`t have any log items for review\n                        </Box>\n                    )}\n                </Box>\n            </Container>\n        </>\n    );\n}\n","export function authRequired({ me }) {\n    return !!me;\n}\n\nexport function unauthorizedOnly(prop) {\n    return !prop.me;\n}\n\nexport function roleAdmin({ me }) {\n    return me?.role === \"admin\";\n}\n\nexport function roleDev({ me }) {\n    return me?.role === \"dev\";\n}\n","// Pages\nimport Developers from \"../Pages/developers\";\nimport ManagerReports from \"../Pages/manager-reports\";\nimport Projects from \"../Pages/projects\";\nimport ReportHistory from \"../Pages/report-history\";\nimport DeveloperReports from \"../Pages/developer-reports\";\nimport SignIn from \"../Pages/signin\";\nimport Home from \"../Pages/home\";\nimport ForgotPassword from \"../Pages/ForgotPassword\";\nimport ResetPassword from \"../Pages/ResetPassword\";\nimport Settings from \"../Pages/Settings\";\nimport Activity from \"../Pages/Activity\";\nimport LogItems from \"../Pages/LogItems\";\n\n// Rules\nimport { authRequired, unauthorizedOnly, roleAdmin, roleDev } from \"./rules\";\n\nexport default [\n    {\n        path: \"/\",\n        exact: true,\n        rules: [authRequired],\n        redirect: \"/signin\",\n        adminRedirect: roleAdmin,\n        devRedirect: roleDev,\n        component: Home,\n    },\n    {\n        path: \"/signin\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: SignIn,\n    },\n    {\n        path: \"/forgot-password\",\n        exact: true,\n        rules: [],\n        redirect: \"/\",\n        component: ForgotPassword,\n    },\n    {\n        path: \"/reset-password\",\n        exact: true,\n        rules: [unauthorizedOnly],\n        redirect: \"/\",\n        component: ResetPassword,\n    },\n    {\n        path: \"/developer-reports\",\n        exact: true,\n        rules: [authRequired, roleDev],\n        redirect: \"/\",\n        component: DeveloperReports,\n    },\n    {\n        path: \"/manager-reports\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ManagerReports,\n    },\n    {\n        path: \"/projects\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Projects,\n    },\n    {\n        path: \"/developers\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Developers,\n    },\n    {\n        path: \"/report-history\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: ReportHistory,\n    },\n    {\n        path: \"/settings\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Settings,\n    },\n    {\n        path: \"/activity\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: Activity,\n    },\n    {\n        path: \"/log-items\",\n        exact: true,\n        rules: [authRequired, roleAdmin],\n        redirect: \"/\",\n        component: LogItems,\n    },\n];\n","// Core\nimport React from 'react'\n\nexport default function Home() {\n    return <div>best time tracker ever! ! !</div>\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\n\n// Store\nimport { useStores } from \"../../store\";\n\n// Styles\nimport { StyledContainer, StyledLink } from \"./styles\";\n\nfunction useAuthData() {\n    const {\n        authStore: { onLogin },\n    } = useStores();\n    return useObserver(() => ({\n        onLogin,\n    }));\n}\n\nexport default function SignIn() {\n    const [data, setForm] = useState({ email: \"\", password: \"\" });\n    const { onLogin } = useAuthData();\n\n    return (\n        <StyledContainer>\n            <form>\n                <Box display=\"flex\" flexDirection=\"column\" mb={1}>\n                    <Box mb={1} width=\"100%\">\n                        <TextField\n                            id=\"email-input\"\n                            label=\"Email\"\n                            fullWidth\n                            onChange={e =>\n                                setForm({ ...data, email: e.target.value })\n                            }\n                        />\n                    </Box>\n                    <Box mb={2}>\n                        <TextField\n                            id=\"password-input\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            onChange={e =>\n                                setForm({ ...data, password: e.target.value })\n                            }\n                        />\n                    </Box>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    justifyContent={\"space-between\"}\n                    alignItems={\"flex-end\"}\n                    mt={1}\n                >\n                    <Box>\n                        <StyledLink to={\"/forgot-password\"}>\n                            Forgot password\n                        </StyledLink>\n                    </Box>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onLogin(data);\n                        }}\n                    >\n                        Sign in\n                    </Button>\n                </Box>\n            </form>\n        </StyledContainer>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button, Typography } from \"@material-ui/core\";\nimport Link from \"components/Link\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onForgotPassword: authStore.onForgotPassword,\n    }));\n};\n\nexport default function ForgotPassword() {\n    const { onForgotPassword } = useStore();\n    const [success, setSuccess] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        onSubmit: async data => {\n            await onForgotPassword(data);\n            setSuccess(true);\n        },\n    });\n\n    if (success) {\n        return (\n            <Box p={4}>\n                <Typography variant=\"h6\">\n                    Follow link from your mailbox to reset password\n                </Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        onChange={formik.handleChange}\n                        defaultValue={formik.values.email}\n                    />\n                    <Box\n                        display=\"flex\"\n                        justifyContent={\"space-between\"}\n                        alignItems={\"flex-end\"}\n                        mt={3}\n                    >\n                        <Box>\n                            <Link to={\"/signin\"}>Sign in</Link>\n                        </Box>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport { useFormik } from \"formik\";\nimport { useLocation, Redirect } from \"react-router-dom\";\n\n// Store\nimport { useStores } from \"store\";\n\n// UI\nimport { TextField, Box, Button } from \"@material-ui/core\";\n\n// Styles\nimport { StyledContainer } from \"./style\";\n\nconst useStore = () => {\n    const { authStore } = useStores();\n\n    return useObserver(() => ({\n        onResetPassword: authStore.onResetPassword,\n    }));\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResetPassword() {\n    const { onResetPassword } = useStore();\n    const [toLogin, setToLogin] = useState(false);\n    const params = useQuery();\n\n    const formik = useFormik({\n        initialValues: {\n            token: params.get(\"token\"),\n            password: \"\",\n            password_confirmation: \"\",\n        },\n        onSubmit: async data => {\n            await onResetPassword(data);\n            setToLogin(true);\n        },\n    });\n    if (toLogin) {\n        return <Redirect to=\"/signin\" />;\n    }\n\n    return (\n        <>\n            <StyledContainer>\n                <form>\n                    <Box display=\"flex\" flexDirection=\"column\" mb={2}>\n                        <Box mb={1}>\n                            <TextField\n                                id=\"password\"\n                                label=\"Password\"\n                                fullWidth\n                                onChange={formik.handleChange}\n                                type=\"password\"\n                                defaultValue={formik.values.password}\n                            />\n                        </Box>\n                        <Box mb={1}>\n                            <TextField\n                                id=\"password_confirmation\"\n                                label=\"Confirm password\"\n                                fullWidth\n                                onChange={formik.handleChange}\n                                type=\"password\"\n                                defaultValue={formik.values.confirmPassword}\n                            />\n                        </Box>\n                    </Box>\n                    <Box display=\"flex\" justifyContent={\"flex-end\"} mt={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={formik.submitForm}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </StyledContainer>\n        </>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\n// UI\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport AddButton from \"components/AddButton\";\nimport WeekSelector from \"components/WeekSelector\";\nimport WeekDates from \"components/WeekDates\";\nimport ReportTable from \"Pages/developer-reports/ReportTable\";\nimport ReportForm from \"Pages/developer-reports/ReportForm\";\nimport TotalTimeInfo from \"./TotalTimeInfo\";\n\n// Utils\nimport { useStores } from \"../../store\";\nimport {\n    getStartOfWeek,\n    getParametersForLogs,\n} from \"utils/developerReportUtils\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        logTypes: logStore.logTypes,\n        projectList: logStore.projectList,\n        onGetLogs: logStore.onGetLogs,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onGetProjectList: logStore.onGetProjectList,\n        onAddLog: logStore.onAddLog,\n        onUpdateLog: logStore.onUpdateLog,\n        onDeleteLog: logStore.onDeleteLog,\n        setEmptyLogs: logStore.setEmptyLogs,\n    }));\n}\n\nexport default function Developers() {\n    const {\n        logs,\n        logTypes,\n        projectList,\n        onGetLogs,\n        onGetProjectList,\n        onGetLogTypes,\n        onAddLog,\n        onUpdateLog,\n        onDeleteLog,\n        setEmptyLogs,\n    } = useStore();\n\n    const [selectedWeek, setWeek] = useState(moment().isoWeek());\n    const [selectedDay, setDay] = useState();\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [editingLog, setEditingLog] = useState();\n    const [totalWeekTime, setTotalWeekTime] = useState();\n    const [totalDayTime, setTotalDayTime] = useState();\n\n    useEffect(() => {\n        if (selectedWeek) {\n            setDay(getStartOfWeek(selectedWeek));\n        }\n    }, [selectedWeek]);\n\n    useEffect(() => {\n        if (!selectedWeek) {\n            setEmptyLogs();\n            return;\n        }\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n        });\n    }, [onGetLogs, selectedWeek, setEmptyLogs]);\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetLogTypes();\n    }, [onGetLogTypes, onGetProjectList]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingLog(null);\n    };\n\n    const handleEditLog = log => {\n        setEditingLog(log);\n        showModal();\n    };\n\n    const handleSubmitForm = async (data, id) => {\n        editingLog ? await onUpdateLog(data, id) : await onAddLog(data);\n        closeModal();\n    };\n\n    const handleDeleteLog = async id => {\n        await onDeleteLog(id);\n        onGetLogs({\n            ...getParametersForLogs(selectedWeek),\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container wrap=\"wrap\">\n                <Box width=\"10%\" m={2} minWidth={120}>\n                    <WeekSelector\n                        setWeek={setWeek}\n                        selectedWeek={selectedWeek}\n                    />\n                </Box>\n                <Box m={2}>\n                    <WeekDates\n                        selectedWeek={selectedWeek}\n                        selectedDay={selectedDay}\n                        setDay={setDay}\n                        logs={logs}\n                    />\n                </Box>\n                <Box\n                    m={2}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    width=\"100%\"\n                    flexWrap=\"wrap\"\n                >\n                    <Box>\n                        <AddButton handleClick={showModal}>\n                            Add work item\n                        </AddButton>\n                    </Box>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        alignItems=\"flex-end\"\n                    >\n                        <TotalTimeInfo\n                            totalDayTime={totalDayTime}\n                            totalWeekTime={totalWeekTime}\n                            selectedWeek={selectedWeek}\n                        />\n                    </Box>\n                </Box>\n                <Grid item xs={12}></Grid>\n                <ReportTable\n                    logList={logs}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    handleEditLog={handleEditLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                    setTotalWeekTime={setTotalWeekTime}\n                    setTotalDayTime={setTotalDayTime}\n                />\n                <ReportForm\n                    open={isModalVisible}\n                    handleClose={closeModal}\n                    projects={projectList}\n                    logTypes={logTypes}\n                    submitForm={handleSubmitForm}\n                    deleteLog={handleDeleteLog}\n                    initialData={editingLog}\n                    selectedDay={selectedDay}\n                    selectedWeek={selectedWeek}\n                />\n            </Grid>\n        </Container>\n    );\n}\n","// Core\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport FilterSelectorPanel from \"./FilterSelectorPanel\";\nimport { Container, Box } from \"@material-ui/core\";\nimport LogTableReports from \"./LogReportTable\";\nimport ReportPagination from \"components/ReportPagination\";\nimport DownloadButton from \"components/DownloadButton\";\n\n// Store\nimport { useStores } from \"store\";\n\n// Utils\nimport { getWeekNumber, formatToString } from \"utils/managerReportsUtils\";\n\n// Styles\nimport { StyledPaper } from \"./style\";\n\nfunction useStore() {\n    const { logStore, exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        logs: logStore.logs,\n        setEmptyLogs: logStore.setEmptyLogs,\n        projectList: logStore.projectList,\n        userList: logStore.userList,\n        onGetLogs: logStore.onGetLogs,\n        onGetProjectList: logStore.onGetProjectList,\n        onGetUserList: logStore.onGetUserList,\n        onUpdateLogStatus: logStore.onUpdateLogStatus,\n        onDownload: exportStore.onDownload,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        setInitialPagination: paginationStore.setInitialValues,\n    }));\n}\n\nexport default function ManagerReports() {\n    const {\n        logs,\n        projectList,\n        onGetLogs,\n        userList,\n        page,\n        perPage,\n        onDownload,\n        onGetUserList,\n        onGetProjectList,\n        setInitialPagination,\n        setEmptyLogs,\n    } = useStore();\n\n    const currentWeek = getWeekNumber(new Date());\n\n    const [selectedWeeks, setSelectedWeeks] = useState([currentWeek]);\n    const [fromDate, setFromDate] = useState(null);\n    const [toDate, setToDate] = useState(null);\n    const [selectedProjects, setSelectedProjects] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    const [errorFromDate, setErrorFromDate] = useState(false);\n    const [errorToDate, setErrorToDate] = useState(false);\n\n    const onErrorDates = (type, value) => {\n        const setValue = {\n            dateFrom: () => setErrorFromDate(value),\n            dateTo: () => setErrorToDate(value),\n        };\n\n        setValue[type]();\n    };\n    useEffect(() => {\n        // TODO: add year logic\n        const addYearToWeek = selectedWeeks.map(week => `${week},2020`);\n\n        onGetLogs({\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n            weeks: addYearToWeek,\n            page,\n            per_page: perPage,\n        });\n    }, [\n        onGetLogs,\n        page,\n        perPage,\n        selectedProjects,\n        selectedUsers,\n        selectedWeeks,\n        setEmptyLogs,\n    ]);\n\n    useEffect(() => {\n        if (selectedWeeks.length) {\n            setFromDate(null);\n            setToDate(null);\n        }\n    }, [selectedWeeks]);\n\n    useEffect(() => {\n        if (fromDate && toDate) {\n            if (!errorFromDate && !errorToDate) {\n                onGetLogs({\n                    users: selectedUsers.map(item => item.id),\n                    from_date: formatToString(fromDate),\n                    to_date: formatToString(toDate),\n                    projects: selectedProjects.map(item => item.id),\n                    page,\n                    per_page: perPage,\n                });\n            }\n        }\n    }, [\n        fromDate,\n        toDate,\n        errorFromDate,\n        errorToDate,\n        onGetLogs,\n        selectedUsers,\n        selectedProjects,\n        page,\n        perPage,\n    ]);\n\n    const onFilterChange = useCallback(\n        (type, value) => {\n            setInitialPagination();\n            const setValueTypes = {\n                fromDate: () => {\n                    setFromDate(value);\n                    setSelectedWeeks([]);\n                },\n                toDate: () => {\n                    setToDate(value);\n                    setSelectedWeeks([]);\n                },\n                selectedWeeks: () => setSelectedWeeks(value),\n                selectedProjects: () => setSelectedProjects(value),\n                selectedUsers: () => setSelectedUsers(value),\n            };\n\n            setValueTypes[type]();\n        },\n        [setInitialPagination]\n    );\n\n    useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n\n        return setEmptyLogs;\n    }, [onGetProjectList, onGetUserList, setEmptyLogs]);\n\n    const onDownloadFile = () => {\n        onDownload({\n            from_date: fromDate ? formatToString(fromDate) : null,\n            to_date: toDate ? formatToString(toDate) : null,\n            week: selectedWeeks,\n            users: selectedUsers.map(item => item.id),\n            projects: selectedProjects.map(item => item.id),\n        });\n    };\n\n    return (\n        <Container>\n            <FilterSelectorPanel\n                fromDate={fromDate}\n                toDate={toDate}\n                selectedWeeks={selectedWeeks}\n                selectedProjects={selectedProjects}\n                selectedUsers={selectedUsers}\n                setFilter={onFilterChange}\n                projectList={projectList}\n                logs={logs}\n                setErrorDates={onErrorDates}\n                userList={userList}\n            />\n            <Box mt={4} mb={5}>\n                <Box display=\"flex\" my={3}>\n                    {\n                        <DownloadButton\n                            disabled={logs.length === 0}\n                            handleClick={onDownloadFile}\n                        >\n                            Export\n                        </DownloadButton>\n                    }\n                </Box>\n                <StyledPaper>\n                    <LogTableReports logList={logs} />\n                    {logs?.length > 0 && <ReportPagination />}\n                </StyledPaper>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport CreateProjectForm from \"./CreateProjectForm\";\nimport AddButton from \"components/AddButton\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n// Styled\nimport { StyledGrid } from \"./styles\";\nimport ReportPagination from \"components/ReportPagination\";\n\nfunction useStore() {\n    const { projectStore, loadersStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        projectList: projectStore.projectList,\n        projectTypes: projectStore.projectTypes,\n        userList: projectStore.userList,\n        onGetProjectList: projectStore.onGetProjectList,\n        onGetUserList: projectStore.onGetUserList,\n        onCreateProject: projectStore.onCreateProject,\n        onUpdateProject: projectStore.onUpdateProject,\n        onDeleteProject: projectStore.onDeleteProject,\n        onGetProjectTypes: projectStore.onGetProjectTypes,\n        setEditingProjectData: projectStore.setEditingProjectData,\n        editingProjectData: projectStore.editingProjectData,\n        setLoadingPage: loadersStore.setLoadingPage,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n    const [sort, setSort] = useState({ field: \"\", type: \"\" });\n\n    const {\n        projectList,\n        projectTypes,\n        userList,\n        onCreateProject,\n        onUpdateProject,\n        onGetProjectList,\n        onGetProjectTypes,\n        onGetUserList,\n        setEditingProjectData,\n        editingProjectData,\n        onDeleteProject,\n        page,\n        perPage,\n    } = useStore();\n\n    useEffect(() => {\n        onGetUserList();\n        onGetProjectTypes();\n    }, [onGetUserList, onGetProjectTypes]);\n\n    const updateProjects = useCallback(() => {\n        onGetProjectList({\n            page,\n            per_page: perPage,\n            sort,\n        });\n    }, [onGetProjectList, page, perPage, sort]);\n\n    useEffect(() => {\n        updateProjects();\n    }, [updateProjects]);\n\n    useEffect(() => {\n        if (editingProjectData) {\n            showModal();\n        }\n    }, [editingProjectData]);\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingProjectData();\n    };\n\n    const handleDeleteProject = async id => {\n        await onDeleteProject(id);\n        closeModal();\n    };\n\n    const onSubmitProject = async (data, id) => {\n        editingProjectData\n            ? await onUpdateProject(data, id)\n            : await onCreateProject(data);\n        updateProjects();\n        closeModal();\n    };\n\n    const onEditProject = data => {\n        setEditingProjectData(data);\n    };\n\n    const onSort = field => () => {\n        if (sort.type === \"desc\") {\n            return setSort({ field: \"\", type: \"\" });\n        }\n\n        return setSort({ field, type: sort.field ? \"desc\" : \"asc\" });\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Available projects:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>\n                        Create project\n                    </AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <StyledPaper>\n                            <ProjectsTable\n                                onSort={onSort}\n                                sort={sort}\n                                projectList={projectList}\n                                setEditingProjectData={onEditProject}\n                            />\n                            {projectList?.length > 0 && <ReportPagination />}\n                        </StyledPaper>\n                    </Box>\n                </Grid>\n            </Grid>\n            <CreateProjectForm\n                open={isModalVisible}\n                onClose={closeModal}\n                userList={userList}\n                projectTypes={projectTypes}\n                handleSubmit={onSubmitProject}\n                initialData={editingProjectData}\n                handleDeleteProject={handleDeleteProject}\n            />\n        </Container>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Grid, Container, Typography, Box } from \"@material-ui/core\";\nimport DevelopersTable from \"./DevelopersTable\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport AddButton from \"components/AddButton\";\nimport ReportPagination from \"components/ReportPagination\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// Utils\nimport { useStores } from \"../../store\";\n\n//Styles\nimport { StyledGrid } from \"./styles\";\n\nfunction useStore() {\n    const { userStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        userList: userStore.userList,\n        onGetUserList: userStore.onGetUserList,\n        setEditingUserData: userStore.setEditingUserData,\n        editingUserData: userStore.editingUserData,\n        onCreateUser: userStore.onCreateUser,\n        onUpdateUser: userStore.onUpdateUser,\n        onDeleteUser: userStore.onDeleteUser,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n    }));\n}\n\nexport default function Projects() {\n    const [isModalVisible, setModalVisibility] = useState(false);\n\n    const {\n        userList,\n        onGetUserList,\n        editingUserData,\n        setEditingUserData,\n        onCreateUser,\n        onUpdateUser,\n        onDeleteUser,\n        page,\n        perPage,\n    } = useStore();\n\n    const showModal = () => {\n        setModalVisibility(true);\n    };\n\n    const closeModal = () => {\n        setModalVisibility(false);\n        setEditingUserData();\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n    };\n\n    const handleDeleteUser = async id => {\n        await onDeleteUser(id);\n        closeModal();\n    };\n\n    useEffect(() => {\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n    }, [onGetUserList, page, perPage]);\n\n    useEffect(() => {\n        if (editingUserData) {\n            showModal();\n        }\n    }, [editingUserData]);\n\n    const onSubmitUser = async (data, id) => {\n        editingUserData\n            ? await onUpdateUser(data, id)\n            : await onCreateUser(data);\n        onGetUserList({\n            page: page,\n            per_page: perPage,\n        });\n        closeModal();\n    };\n\n    return (\n        <Container>\n            <Grid container>\n                <StyledGrid item xs={12}>\n                    <Typography variant=\"h6\">Developers:</Typography>\n                </StyledGrid>\n                <Grid item xs>\n                    <AddButton handleClick={showModal}>Add developer</AddButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box pb={5}>\n                        <StyledPaper>\n                            <DevelopersTable\n                                developerList={userList}\n                                setEditingUserData={setEditingUserData}\n                            />\n                            <ReportPagination />\n                        </StyledPaper>\n                    </Box>\n                </Grid>\n            </Grid>\n            {userList.length && (\n                <CreateUserForm\n                    open={isModalVisible}\n                    onClose={closeModal}\n                    handleSubmit={onSubmitUser}\n                    initialData={editingUserData}\n                    handleDeleteUser={handleDeleteUser}\n                />\n            )}\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport ReportHistoryTable from \"./ReportHistoryTable\";\nimport ReportPagination from \"components/ReportPagination\";\nimport StyledPaper from \"components/StyledPaper\";\n\n// store\nimport { useStores } from \"store\";\nfunction useStore() {\n    const { exportStore, paginationStore } = useStores();\n\n    return useObserver(() => ({\n        historyItems: exportStore.historyItems,\n        onGetHistoryItems: exportStore.onGetHistoryItems,\n        projectList: exportStore.projectList,\n        onGetProjectList: exportStore.onGetProjectList,\n        userList: exportStore.userList,\n        onGetUserList: exportStore.onGetUserList,\n        page: paginationStore.page,\n        perPage: paginationStore.perPage,\n        onDownload: exportStore.onDownload,\n    }));\n}\n\nexport default function ReportHistory() {\n    const {\n        onGetHistoryItems,\n        historyItems,\n        onGetProjectList,\n        projectList,\n        onGetUserList,\n        userList,\n        page,\n        perPage,\n        onDownload,\n    } = useStore();\n\n    React.useEffect(() => {\n        onGetProjectList();\n        onGetUserList();\n    }, [onGetProjectList, onGetUserList]);\n\n    React.useEffect(() => {\n        onGetHistoryItems({\n            page,\n            per_page: perPage,\n        });\n    }, [onGetHistoryItems, page, perPage]);\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Export history</Typography>\n            </Box>\n            <Box my={3}>\n                <StyledPaper>\n                    <ReportHistoryTable\n                        userList={userList}\n                        projectList={projectList}\n                        historyItems={historyItems}\n                        onDownload={onDownload}\n                    />\n                    {historyItems?.length > 0 && <ReportPagination />}\n                </StyledPaper>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\n// UI\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport LogSettingsForm from \"./LogSettingsForm\";\n\nfunction useStore() {\n    const { logStore } = useStores();\n\n    return useObserver(() => ({\n        logTypes: logStore.logTypes,\n        onGetLogTypes: logStore.onGetLogTypes,\n        onCreateLogType: logStore.onCreateLogType,\n        onUpdateLogType: logStore.onUpdateLogType,\n        onDeleteLogType: logStore.onDeleteLogType,\n    }));\n}\n\nexport default function ReportHistory() {\n    const {\n        logTypes,\n        onGetLogTypes,\n        onCreateLogType,\n        onUpdateLogType,\n        onDeleteLogType,\n    } = useStore();\n\n    React.useEffect(() => {\n        onGetLogTypes();\n    }, [onGetLogTypes]);\n\n    const onSubmit = async (type, data, id) => {\n        const submit = {\n            create: () => onCreateLogType(data),\n            update: () => onUpdateLogType(data, id),\n            delete: () => onDeleteLogType(id),\n        };\n        await submit[type]();\n    };\n\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Settings</Typography>\n            </Box>\n            <Box my={3}>\n                <LogSettingsForm logTypes={logTypes} onSubmit={onSubmit} />\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { useStores } from \"store\";\nimport { useObserver } from \"mobx-react\";\nimport moment from \"moment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n// UI\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport { FULL_DATE_FORMAT } from \"constants/dateFormats\";\nimport ActivitiesList from \"./ActivitiesList\";\n\nfunction useStore() {\n    const { activityStore } = useStores();\n\n    return useObserver(() => ({\n        activities: activityStore.activities,\n        onGetActivities: activityStore.onGetActivities,\n        nextDate: activityStore.nextDate,\n        setInitialState: activityStore.setInitialState,\n    }));\n}\n\nexport default function ReportHistory() {\n    const [currentDate] = useState(moment().format(FULL_DATE_FORMAT));\n    const {\n        onGetActivities,\n        activities,\n        nextDate,\n        setInitialState,\n    } = useStore();\n\n    useEffect(() => {\n        onGetActivities({ date: currentDate });\n        return () => {\n            setInitialState();\n        };\n    }, [onGetActivities, currentDate, setInitialState]);\n\n    return (\n        <Container>\n            <Box my={2}>\n                <Typography variant=\"h6\">Activity</Typography>\n            </Box>\n            <Box my={3} width=\"100%\" maxWidth=\"1024px\" mx=\"auto\">\n                <InfiniteScroll\n                    dataLength={activities.length} //This is important field to render the next data\n                    next={() => onGetActivities({ date: nextDate })}\n                    hasMore={!!nextDate}\n                    loader={<p>Loading...</p>}\n                >\n                    {activities.map((day, i) => (\n                        <ActivitiesList\n                            key={`date-${day.date}-${i}`}\n                            activities={day.activities}\n                            date={day.date}\n                        />\n                    ))}\n                </InfiniteScroll>\n            </Box>\n        </Container>\n    );\n}\n","// Core\nimport React from \"react\";\nimport {\n    Switch,\n    Route,\n    BrowserRouter as Router,\n    Redirect,\n} from \"react-router-dom\";\n\n// Components\nimport NoMatch from \"components/NoMatch\";\nimport NavigationPanel from \"components/NavigationPanel\";\n\n// Routes\nimport routes from \"./routes\";\n\nconst Navigation = compProps => (\n    <Router>\n        <NavigationPanel {...compProps} />\n        <Switch>\n            {routes.map((route, index) => (\n                <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    render={props => {\n                        if (\n                            route.adminRedirect &&\n                            route.adminRedirect(compProps)\n                        ) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/manager-reports\" }}\n                                />\n                            );\n                        }\n                        if (route.devRedirect && route.devRedirect(compProps)) {\n                            return (\n                                <Redirect\n                                    to={{ pathname: \"/developer-reports\" }}\n                                />\n                            );\n                        }\n                        return !route.rules ||\n                            route.rules.every(rule => rule(compProps)) ? (\n                            <route.component {...props} />\n                        ) : (\n                            <Redirect to={{ pathname: route.redirect }} />\n                        );\n                    }}\n                />\n            ))}\n\n            <Route component={NoMatch} />\n        </Switch>\n    </Router>\n);\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport const StyledBackdrop = styled(Backdrop)`\n    z-index: ${({ theme }) => theme.zIndex.modal + 1};\n`;\n\nexport const StyledLinearProgress = styled(LinearProgress)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n`;\n","// Core\nimport React from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// Styles\nimport { StyledBackdrop, StyledLinearProgress } from \"./styles\";\n\n// utils\nimport { useStores } from \"../../store\";\n\n// Hooks\nfunction useLoadingData() {\n    const { loadersStore } = useStores();\n\n    return useObserver(() => ({\n        isLoadingPage: loadersStore.isLoadingPage,\n    }));\n}\n\nconst PageLoader = () => {\n    const { isLoadingPage } = useLoadingData();\n\n    if (!isLoadingPage) return null;\n\n    return (\n        <StyledBackdrop open={isLoadingPage}>\n            <StyledLinearProgress color=\"secondary\" />\n        </StyledBackdrop>\n    );\n};\n\nexport default PageLoader;\n","// Core\nimport React, { useEffect } from \"react\";\nimport { useObserver } from \"mobx-react\";\n\n// UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport GlobalFonts from \"assets/fonts\";\nimport Notification from \"components/Notification\";\n\n// Navigation\nimport Navigation from \"./navigation\";\n\n// Store\nimport { useStores } from \"./store\";\n\n// Components\nimport PageLoader from \"./components/PageLoader\";\n\n// Hooks\nfunction useAuthData() {\n    const {\n        authStore,\n        loadersStore: { setLoadingPage },\n    } = useStores();\n\n    return useObserver(() => ({\n        addAuthHeaderInterceptor: authStore.addAuthHeaderInterceptor,\n        dispatchLoginFulfilled: authStore.dispatchLoginFulfilled,\n        setInitialState: authStore.setInitialState,\n        onGetMe: authStore.onGetMe,\n        onLogout: authStore.onLogout,\n        setLoadingPage: setLoadingPage,\n        me: authStore.me,\n        token: authStore.token,\n    }));\n}\n\nfunction App() {\n    const {\n        dispatchLoginFulfilled,\n        addAuthHeaderInterceptor,\n        setInitialState,\n        onGetMe,\n        setLoadingPage,\n        me,\n        token: myToken,\n        onLogout,\n    } = useAuthData();\n    const [userLoaded, setLoaded] = React.useState(false);\n\n    useEffect(() => {\n        async function getTokenFromLocalStorage() {\n            try {\n                const token = localStorage.getItem(\"token\") || myToken;\n\n                if (token) {\n                    setLoadingPage(true);\n                    await addAuthHeaderInterceptor(token);\n                    const responseMe = await onGetMe();\n                    const me = responseMe?.data;\n                    dispatchLoginFulfilled(me, token);\n                } else {\n                    setInitialState();\n                }\n            } catch (e) {\n                console.error(e);\n            } finally {\n                setLoadingPage(false);\n                setLoaded(true);\n            }\n        }\n        if (!me) {\n            getTokenFromLocalStorage();\n        }\n    }, [\n        addAuthHeaderInterceptor,\n        dispatchLoginFulfilled,\n        me,\n        myToken,\n        onGetMe,\n        setInitialState,\n        setLoadingPage,\n    ]);\n\n    return (\n        userLoaded && (\n            <>\n                <PageLoader />\n                <Navigation me={me} onLogout={onLogout} />\n                <CssBaseline />\n                <GlobalFonts />\n                <Notification />\n            </>\n        )\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"mobx-react\";\n// Theme\nimport ThemeProvider from \"assets/styles/ThemeProvider\";\n// Components\nimport App from \"./App\";\n// Worker\nimport * as serviceWorker from \"./serviceWorker\";\n// Stores\nimport RootStore from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider {...new RootStore()}>\n        <Router history={history}>\n            <ThemeProvider>\n                <App />\n            </ThemeProvider>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}